

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Fri Sep 08 20:24:15 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           	psect	idataCOMRAM
    60  002DDE                     __pidataCOMRAM:
    61                           	opt stack 0
    62                           
    63                           ;initializer for _R
    64  002DDE  0FDF               	dw	4063
    65                           
    66                           ;initializer for _ip_port
    67  002DE0  1F90               	dw	8080
    68                           
    69                           ;initializer for _REG
    70  002DE2  0F                 	db	15
    71                           
    72                           ;initializer for _REGad
    73  002DE3  DF                 	db	223
    74                           
    75                           ;initializer for _device_id
    76  002DE4  63                 	db	99
    77  002DE5  6F                 	db	111
    78  002DE6  64                 	db	100
    79  002DE7  69                 	db	105
    80  002DE8  67                 	db	103
    81  002DE9  6F                 	db	111
    82  002DEA  00                 	db	0
    83  002DEB  00                 	db	0
    84                           
    85                           	psect	idataBANK1
    86  002BEC                     __pidataBANK1:
    87                           	opt stack 0
    88                           
    89                           ;initializer for _ip_addr
    90  002BEC  73                 	db	115
    91  002BED  61                 	db	97
    92  002BEE  6E                 	db	110
    93  002BEF  75                 	db	117
    94  002BF0  73                 	db	115
    95  002BF1  62                 	db	98
    96  002BF2  2E                 	db	46
    97  002BF3  74                 	db	116
    98  002BF4  6B                 	db	107
    99  002BF5  00                 	db	0
   100  002BF6  00                 	db	0
   101  002BF7  00                 	db	0
   102  002BF8  00                 	db	0
   103  002BF9  00                 	db	0
   104  002BFA  00                 	db	0
   105  002BFB  00                 	db	0
   106  002BFC  00                 	db	0
   107  002BFD  00                 	db	0
   108  002BFE  00                 	db	0
   109  002BFF  00                 	db	0
   110  002C00  00                 	db	0
   111  002C01  00                 	db	0
   112  002C02  00                 	db	0
   113  002C03  00                 	db	0
   114  002C04  00                 	db	0
   115  002C05  00                 	db	0
   116  002C06  00                 	db	0
   117  002C07  00                 	db	0
   118  002C08  00                 	db	0
   119  002C09  00                 	db	0
   120  002C0A  00                 	db	0
   121  002C0B  00                 	db	0
   122  002C0C  00                 	db	0
   123  002C0D  00                 	db	0
   124  002C0E  00                 	db	0
   125  002C0F  00                 	db	0
   126  002C10  00                 	db	0
   127  002C11  00                 	db	0
   128  002C12  00                 	db	0
   129  002C13  00                 	db	0
   130  002C14  00                 	db	0
   131  002C15  00                 	db	0
   132  002C16  00                 	db	0
   133  002C17  00                 	db	0
   134  002C18  00                 	db	0
   135  002C19  00                 	db	0
   136  002C1A  00                 	db	0
   137  002C1B  00                 	db	0
   138  002C1C  00                 	db	0
   139  002C1D  00                 	db	0
   140  002C1E  00                 	db	0
   141  002C1F  00                 	db	0
   142  002C20  00                 	db	0
   143  002C21  00                 	db	0
   144  002C22  00                 	db	0
   145  002C23  00                 	db	0
   146  002C24  00                 	db	0
   147  002C25  00                 	db	0
   148  002C26  00                 	db	0
   149  002C27  00                 	db	0
   150  002C28  00                 	db	0
   151  002C29  00                 	db	0
   152  002C2A  00                 	db	0
   153  002C2B  00                 	db	0
   154                           
   155                           	psect	smallconst
   156  00101C                     __psmallconst:
   157                           	opt stack 0
   158  00101C  00                 	db	0
   159  00101D                     _dpowers:
   160                           	opt stack 0
   161  00101D  0001               	dw	1
   162  00101F  000A               	dw	10
   163  001021  0064               	dw	100
   164  001023  03E8               	dw	1000
   165  001025  2710               	dw	10000
   166  001027                     __end_of_dpowers:
   167                           	opt stack 0
   168  0000                     _ADRES	set	4035
   169  0000                     _ADCON0	set	4034
   170  0000                     _ADCON0bits	set	4034
   171  0000                     _ADCON1	set	4033
   172  0000                     _ADCON2	set	4032
   173  0000                     _ADCON2bits	set	4032
   174  0000                     _ADRESH	set	4036
   175  0000                     _BAUDCON	set	4024
   176  0000                     _BAUDCONbits	set	4024
   177  0000                     _CCP1CON	set	4029
   178  0000                     _CCP2CON	set	4026
   179  0000                     _CCPR1L	set	4030
   180  0000                     _CCPR2L	set	4027
   181  0000                     _EEADR	set	4009
   182  0000                     _EECON1	set	4006
   183  0000                     _EECON1bits	set	4006
   184  0000                     _EECON2	set	4007
   185  0000                     _EEDATA	set	4008
   186  0000                     _INTCON2bits	set	4081
   187  0000                     _INTCON3bits	set	4080
   188  0000                     _INTCONbits	set	4082
   189  0000                     _IPR1bits	set	3999
   190  0000                     _LATA	set	3977
   191  0000                     _LATB	set	3978
   192  0000                     _LATBbits	set	3978
   193  0000                     _LATC	set	3979
   194  0000                     _OSCCON	set	4051
   195  0000                     _OSCCONbits	set	4051
   196  0000                     _PIE1bits	set	3997
   197  0000                     _PIE2bits	set	4000
   198  0000                     _PIR1bits	set	3998
   199  0000                     _PORTAbits	set	3968
   200  0000                     _PORTBbits	set	3969
   201  0000                     _PORTCbits	set	3970
   202  0000                     _PORTDbits	set	3971
   203  0000                     _PORTEbits	set	3972
   204  0000                     _PR2	set	4043
   205  0000                     _RCONbits	set	4048
   206  0000                     _RCREG	set	4014
   207  0000                     _RCSTA	set	4011
   208  0000                     _SPBRG	set	4015
   209  0000                     _SPBRGH	set	4016
   210  0000                     _T0CON	set	4053
   211  0000                     _T0CONbits	set	4053
   212  0000                     _T1CON	set	4045
   213  0000                     _T1CONbits	set	4045
   214  0000                     _T2CON	set	4042
   215  0000                     _T2CONbits	set	4042
   216  0000                     _T3CON	set	4017
   217  0000                     _T3CONbits	set	4017
   218  0000                     _TMR0H	set	4055
   219  0000                     _TMR0L	set	4054
   220  0000                     _TMR1H	set	4047
   221  0000                     _TMR1L	set	4046
   222  0000                     _TMR3H	set	4019
   223  0000                     _TMR3L	set	4018
   224  0000                     _TRISA	set	3986
   225  0000                     _TRISAbits	set	3986
   226  0000                     _TRISB	set	3987
   227  0000                     _TRISBbits	set	3987
   228  0000                     _TRISC	set	3988
   229  0000                     _TRISCbits	set	3988
   230  0000                     _TRISDbits	set	3989
   231  0000                     _TXREG	set	4013
   232  0000                     _TXSTA	set	4012
   233  0000                     _TXSTAbits	set	4012
   234  0000                     _WDTCONbits	set	4049
   235  0000                     _TXIF	set	31988
   236  001027                     __stringdata:
   237                           	opt stack 0
   238  001027                     STR_6:
   239  001027  41                 	db	65	;'A'
   240  001028  54                 	db	84	;'T'
   241  001029  2B                 	db	43
   242  00102A  43                 	db	67	;'C'
   243  00102B  49                 	db	73	;'I'
   244  00102C  50                 	db	80	;'P'
   245  00102D  53                 	db	83	;'S'
   246  00102E  54                 	db	84	;'T'
   247  00102F  41                 	db	65	;'A'
   248  001030  52                 	db	82	;'R'
   249  001031  54                 	db	84	;'T'
   250  001032  3D                 	db	61	;'='
   251  001033  22                 	db	34
   252  001034  54                 	db	84	;'T'
   253  001035  43                 	db	67	;'C'
   254  001036  50                 	db	80	;'P'
   255  001037  22                 	db	34
   256  001038  2C                 	db	44
   257  001039  22                 	db	34
   258  00103A  25                 	db	37
   259  00103B  73                 	db	115	;'s'
   260  00103C  22                 	db	34
   261  00103D  2C                 	db	44
   262  00103E  25                 	db	37
   263  00103F  64                 	db	100	;'d'
   264  001040  0D                 	db	13
   265  001041  0A                 	db	10
   266  001042  00                 	db	0
   267  001043                     STR_8:
   268  001043  41                 	db	65	;'A'
   269  001044  54                 	db	84	;'T'
   270  001045  2B                 	db	43
   271  001046  43                 	db	67	;'C'
   272  001047  49                 	db	73	;'I'
   273  001048  50                 	db	80	;'P'
   274  001049  53                 	db	83	;'S'
   275  00104A  45                 	db	69	;'E'
   276  00104B  4E                 	db	78	;'N'
   277  00104C  44                 	db	68	;'D'
   278  00104D  3D                 	db	61	;'='
   279  00104E  25                 	db	37
   280  00104F  64                 	db	100	;'d'
   281  001050  0D                 	db	13
   282  001051  0A                 	db	10
   283  001052  00                 	db	0
   284  001053                     STR_5:
   285  001053  57                 	db	87	;'W'
   286  001054  49                 	db	73	;'I'
   287  001055  46                 	db	70	;'F'
   288  001056  49                 	db	73	;'I'
   289  001057  20                 	db	32
   290  001058  47                 	db	71	;'G'
   291  001059  4F                 	db	79	;'O'
   292  00105A  54                 	db	84	;'T'
   293  00105B  20                 	db	32
   294  00105C  49                 	db	73	;'I'
   295  00105D  50                 	db	80	;'P'
   296  00105E  00                 	db	0
   297  00105F                     STR_7:
   298  00105F  43                 	db	67	;'C'
   299  001060  4F                 	db	79	;'O'
   300  001061  4E                 	db	78	;'N'
   301  001062  4E                 	db	78	;'N'
   302  001063  45                 	db	69	;'E'
   303  001064  43                 	db	67	;'C'
   304  001065  54                 	db	84	;'T'
   305  001066  00                 	db	0
   306  001067                     STR_10:
   307  001067  28                 	db	40
   308  001068  6E                 	db	110	;'n'
   309  001069  75                 	db	117	;'u'
   310  00106A  6C                 	db	108	;'l'
   311  00106B  6C                 	db	108	;'l'
   312  00106C  29                 	db	41
   313  00106D  00                 	db	0
   314  00106E                     STR_9:
   315  00106E  43                 	db	67	;'C'
   316  00106F  4C                 	db	76	;'L'
   317  001070  4F                 	db	79	;'O'
   318  001071  53                 	db	83	;'S'
   319  001072  45                 	db	69	;'E'
   320  001073  44                 	db	68	;'D'
   321  001074  00                 	db	0
   322  001075                     STR_1:
   323  001075  2B                 	db	43
   324  001076  49                 	db	73	;'I'
   325  001077  50                 	db	80	;'P'
   326  001078  44                 	db	68	;'D'
   327  001079  2C                 	db	44
   328  00107A  00                 	db	0
   329  00107B                     STR_2:
   330  00107B  3A                 	db	58	;':'
   331  00107C  00                 	db	0
   332  00107D                     __end_of__stringdata:
   333                           	opt stack 0
   334  00107D  00                 	db	0	; dummy byte at the end
   335  0000                     
   336                           ; #config settings
   337                           
   338                           	psect	cinit
   339  002A9C                     __pcinit:
   340                           	opt stack 0
   341  002A9C                     start_initialization:
   342                           	opt stack 0
   343  002A9C                     __initialization:
   344                           	opt stack 0
   345                           
   346                           ; Clear objects allocated to BANK0 (134 bytes)
   347  002A9C  EE00  F060         	lfsr	0,__pbssBANK0
   348  002AA0  0E86               	movlw	134
   349  002AA2                     clear_0:
   350  002AA2  6AEE               	clrf	postinc0,c
   351  002AA4  06E8               	decf	wreg,f,c
   352  002AA6  E1FD               	bnz	clear_0
   353                           
   354                           ; Clear objects allocated to COMRAM (9 bytes)
   355  002AA8  EE00  F043         	lfsr	0,__pbssCOMRAM
   356  002AAC  0E09               	movlw	9
   357  002AAE                     clear_1:
   358  002AAE  6AEE               	clrf	postinc0,c
   359  002AB0  06E8               	decf	wreg,f,c
   360  002AB2  E1FD               	bnz	clear_1
   361                           
   362                           ; Initialize objects allocated to BANK1 (64 bytes)
   363                           ; load TBLPTR registers with __pidataBANK1
   364  002AB4  0EEC               	movlw	low __pidataBANK1
   365  002AB6  6EF6               	movwf	tblptrl,c
   366  002AB8  0E2B               	movlw	high __pidataBANK1
   367  002ABA  6EF7               	movwf	tblptrh,c
   368  002ABC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   369  002ABE  6EF8               	movwf	tblptru,c
   370  002AC0  EE01  F000         	lfsr	0,__pdataBANK1
   371  002AC4  EE10 F040          	lfsr	1,64
   372  002AC8                     copy_data0:
   373  002AC8  0009               	tblrd		*+
   374  002ACA  CFF5 FFEE          	movff	tablat,postinc0
   375  002ACE  50E5               	movf	postdec1,w,c
   376  002AD0  50E1               	movf	fsr1l,w,c
   377  002AD2  E1FA               	bnz	copy_data0
   378                           
   379                           ; Initialize objects allocated to COMRAM (14 bytes)
   380                           ; load TBLPTR registers with __pidataCOMRAM
   381  002AD4  0EDE               	movlw	low __pidataCOMRAM
   382  002AD6  6EF6               	movwf	tblptrl,c
   383  002AD8  0E2D               	movlw	high __pidataCOMRAM
   384  002ADA  6EF7               	movwf	tblptrh,c
   385  002ADC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   386  002ADE  6EF8               	movwf	tblptru,c
   387  002AE0  EE00  F035         	lfsr	0,__pdataCOMRAM
   388  002AE4  EE10 F00E          	lfsr	1,14
   389  002AE8                     copy_data1:
   390  002AE8  0009               	tblrd		*+
   391  002AEA  CFF5 FFEE          	movff	tablat,postinc0
   392  002AEE  50E5               	movf	postdec1,w,c
   393  002AF0  50E1               	movf	fsr1l,w,c
   394  002AF2  E1FA               	bnz	copy_data1
   395  002AF4                     end_of_initialization:
   396                           	opt stack 0
   397  002AF4                     __end_of__initialization:
   398                           	opt stack 0
   399  002AF4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   400  002AF6  6EF8               	movwf	tblptru,c
   401  002AF8  0100               	movlb	0
   402  002AFA  EF3F  F008         	goto	_main	;jump to C main() function
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           postinc0	equ	0xFEE
   408                           wreg	equ	0xFE8
   409                           postdec1	equ	0xFE5
   410                           fsr1l	equ	0xFE1
   411                           
   412                           	psect	bssCOMRAM
   413  000043                     __pbssCOMRAM:
   414                           	opt stack 0
   415  000043                     strtok@sp:
   416                           	opt stack 0
   417  000043                     	ds	2
   418  000045                     _blink:
   419                           	opt stack 0
   420  000045                     	ds	1
   421  000046                     _c:
   422                           	opt stack 0
   423  000046                     	ds	1
   424  000047                     _k:
   425                           	opt stack 0
   426  000047                     	ds	1
   427  000048                     _pos:
   428                           	opt stack 0
   429  000048                     	ds	1
   430  000049                     _receive_enabled:
   431                           	opt stack 0
   432  000049                     	ds	1
   433  00004A                     _s:
   434                           	opt stack 0
   435  00004A                     	ds	1
   436  00004B                     _wifi_connected:
   437                           	opt stack 0
   438  00004B                     	ds	1
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1l	equ	0xFE1
   447                           
   448                           	psect	dataCOMRAM
   449  000035                     __pdataCOMRAM:
   450                           	opt stack 0
   451  000035                     _R:
   452                           	opt stack 0
   453  000035                     	ds	2
   454  000037                     _ip_port:
   455                           	opt stack 0
   456  000037                     	ds	2
   457  000039                     _REG:
   458                           	opt stack 0
   459  000039                     	ds	1
   460  00003A                     _REGad:
   461                           	opt stack 0
   462  00003A                     	ds	1
   463  00003B                     _device_id:
   464                           	opt stack 0
   465  00003B                     	ds	8
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           postdec1	equ	0xFE5
   473                           fsr1l	equ	0xFE1
   474                           
   475                           	psect	bssBANK0
   476  000060                     __pbssBANK0:
   477                           	opt stack 0
   478  000060                     _buffer:
   479                           	opt stack 0
   480  000060                     	ds	70
   481  0000A6                     _recv:
   482                           	opt stack 0
   483  0000A6                     	ds	64
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           postdec1	equ	0xFE5
   491                           fsr1l	equ	0xFE1
   492                           
   493                           	psect	dataBANK1
   494  000100                     __pdataBANK1:
   495                           	opt stack 0
   496  000100                     _ip_addr:
   497                           	opt stack 0
   498  000100                     	ds	64
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	cstackBANK0
   509  0000E6                     __pcstackBANK0:
   510                           	opt stack 0
   511  0000E6                     printf@flag:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x0
   515  0000E6                     	ds	1
   516  0000E7                     printf@prec:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x1
   520  0000E7                     	ds	1
   521  0000E8                     printf@ap:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x2
   525  0000E8                     	ds	2
   526  0000EA                     printf@_val:
   527                           	opt stack 0
   528                           
   529                           ; 4 bytes @ 0x4
   530  0000EA                     	ds	4
   531  0000EE                     printf@c:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x8
   535  0000EE                     	ds	1
   536  0000EF                     main@lcd_pos:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x9
   540  0000EF                     	ds	1
   541  0000F0                     _main$2030:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0xA
   545  0000F0                     	ds	2
   546  0000F2                     main@size:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0xC
   550  0000F2                     	ds	1
   551  0000F3                     main@str:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0xD
   555  0000F3                     	ds	2
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           postinc0	equ	0xFEE
   561                           wreg	equ	0xFE8
   562                           postdec1	equ	0xFE5
   563                           fsr1l	equ	0xFE1
   564                           
   565                           	psect	cstackCOMRAM
   566  000001                     __pcstackCOMRAM:
   567                           	opt stack 0
   568  000001                     push@buffer:
   569                           	opt stack 0
   570  000001                     i2inverte_saida@pino:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x0
   574  000001                     	ds	2
   575  000003                     ??i2_inverte_saida:
   576  000003                     push@c:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x2
   580  000003                     	ds	1
   581  000004                     ??_push:
   582                           
   583                           ; 0 bytes @ 0x3
   584  000004                     	ds	2
   585  000006                     ??_interrupcao:
   586                           
   587                           ; 0 bytes @ 0x5
   588  000006                     	ds	15
   589  000015                     ??_Lcd_Cmd:
   590  000015                     ??_Lcd_Chr_CP:
   591  000015                     ??_isdigit:
   592  000015                     ?_strchr:
   593                           	opt stack 0
   594  000015                     ?_strlen:
   595                           	opt stack 0
   596  000015                     ?___awdiv:
   597                           	opt stack 0
   598  000015                     ?___awmod:
   599                           	opt stack 0
   600  000015                     ?___wmul:
   601                           	opt stack 0
   602  000015                     ?___lldiv:
   603                           	opt stack 0
   604  000015                     le_eeprom@endereco:
   605                           	opt stack 0
   606  000015                     swputc@c:
   607                           	opt stack 0
   608  000015                     putch@data:
   609                           	opt stack 0
   610  000015                     habilita_interrupcao@tipo:
   611                           	opt stack 0
   612  000015                     nivel_alto@pino:
   613                           	opt stack 0
   614  000015                     nivel_baixo@pino:
   615                           	opt stack 0
   616  000015                     inverte_saida@pino:
   617                           	opt stack 0
   618  000015                     tempo_ms@i:
   619                           	opt stack 0
   620  000015                     timer0_ms@cx:
   621                           	opt stack 0
   622  000015                     init_buffer@buffer:
   623                           	opt stack 0
   624  000015                     pop@buffer:
   625                           	opt stack 0
   626  000015                     ___awdiv@dividend:
   627                           	opt stack 0
   628  000015                     ___awmod@dividend:
   629                           	opt stack 0
   630  000015                     memset@p1:
   631                           	opt stack 0
   632  000015                     strchr@ptr:
   633                           	opt stack 0
   634  000015                     strlen@s:
   635                           	opt stack 0
   636  000015                     ___wmul@multiplier:
   637                           	opt stack 0
   638  000015                     ___lldiv@dividend:
   639                           	opt stack 0
   640                           
   641                           ; 4 bytes @ 0x14
   642  000015                     	ds	1
   643  000016                     _isdigit$2341:
   644                           	opt stack 0
   645  000016                     sendsw@st:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x15
   649  000016                     	ds	1
   650  000017                     ??_strlen:
   651  000017                     ??_habilita_interrupcao:
   652  000017                     ??_nivel_alto:
   653  000017                     ??_nivel_baixo:
   654  000017                     ??_inverte_saida:
   655  000017                     ??_pop:
   656  000017                     Lcd_Chr_CP@Chr_CP:
   657                           	opt stack 0
   658  000017                     Lcd_Cmd@Cmd:
   659                           	opt stack 0
   660  000017                     isdigit@c:
   661                           	opt stack 0
   662  000017                     tempo_ms@k:
   663                           	opt stack 0
   664  000017                     timer0_ms@i:
   665                           	opt stack 0
   666  000017                     ___awdiv@divisor:
   667                           	opt stack 0
   668  000017                     ___awmod@divisor:
   669                           	opt stack 0
   670  000017                     memset@c:
   671                           	opt stack 0
   672  000017                     strchr@chr:
   673                           	opt stack 0
   674  000017                     ___wmul@multiplicand:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x16
   678  000017                     	ds	1
   679  000018                     ??_sendsw:
   680  000018                     ??_lcd_ini:
   681  000018                     lcd_escreve@x:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x17
   685  000018                     	ds	1
   686  000019                     ??_strchr:
   687  000019                     ??___awdiv:
   688  000019                     ??___awmod:
   689  000019                     lcd_ini@data:
   690                           	opt stack 0
   691  000019                     pop@ret:
   692                           	opt stack 0
   693  000019                     lcd_escreve@buffer:
   694                           	opt stack 0
   695  000019                     memset@n:
   696                           	opt stack 0
   697  000019                     strlen@cp:
   698                           	opt stack 0
   699  000019                     ___wmul@product:
   700                           	opt stack 0
   701  000019                     ___lldiv@divisor:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0x18
   705  000019                     	ds	1
   706  00001A                     ___awdiv@counter:
   707                           	opt stack 0
   708  00001A                     ___awmod@counter:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x19
   712  00001A                     	ds	1
   713  00001B                     ?_atoi:
   714                           	opt stack 0
   715  00001B                     ?_strncmp:
   716                           	opt stack 0
   717  00001B                     ?_strspn:
   718                           	opt stack 0
   719  00001B                     ?_strcspn:
   720                           	opt stack 0
   721  00001B                     lcd_escreve@y:
   722                           	opt stack 0
   723  00001B                     ___awdiv@sign:
   724                           	opt stack 0
   725  00001B                     ___awmod@sign:
   726                           	opt stack 0
   727  00001B                     atoi@s:
   728                           	opt stack 0
   729  00001B                     memset@p:
   730                           	opt stack 0
   731  00001B                     strcspn@s1:
   732                           	opt stack 0
   733  00001B                     strncmp@s1:
   734                           	opt stack 0
   735  00001B                     strspn@s1:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x1A
   739  00001B                     	ds	1
   740  00001C                     ?___lwdiv:
   741                           	opt stack 0
   742  00001C                     lcd_escreve@data:
   743                           	opt stack 0
   744  00001C                     ___awdiv@quotient:
   745                           	opt stack 0
   746  00001C                     ___lwdiv@dividend:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x1B
   750  00001C                     	ds	1
   751  00001D                     ??_clear_local_buffer:
   752  00001D                     ??_atoi:
   753  00001D                     ??___lldiv:
   754  00001D                     strcspn@s2:
   755                           	opt stack 0
   756  00001D                     strncmp@s2:
   757                           	opt stack 0
   758  00001D                     strspn@s2:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x1C
   762  00001D                     	ds	1
   763  00001E                     ___lwdiv@divisor:
   764                           	opt stack 0
   765  00001E                     ___lldiv@quotient:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x1D
   769  00001E                     	ds	1
   770  00001F                     ??_strspn:
   771  00001F                     ??_strcspn:
   772  00001F                     atoi@sign:
   773                           	opt stack 0
   774  00001F                     strncmp@len:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x1E
   778  00001F                     	ds	1
   779  000020                     ??___lwdiv:
   780  000020                     atoi@a:
   781                           	opt stack 0
   782  000020                     strcspn@i:
   783                           	opt stack 0
   784  000020                     strspn@i:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x1F
   788  000020                     	ds	1
   789  000021                     ??_strncmp:
   790  000021                     ___lwdiv@counter:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x20
   794  000021                     	ds	1
   795  000022                     ?_strtok:
   796                           	opt stack 0
   797  000022                     ___lldiv@counter:
   798                           	opt stack 0
   799  000022                     ___lwdiv@quotient:
   800                           	opt stack 0
   801  000022                     strtok@s1:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x21
   805  000022                     	ds	1
   806  000023                     taxa_serial@taxa:
   807                           	opt stack 0
   808                           
   809                           ; 4 bytes @ 0x22
   810  000023                     	ds	1
   811  000024                     ?_strstr:
   812                           	opt stack 0
   813  000024                     ?___lwmod:
   814                           	opt stack 0
   815  000024                     ___lwmod@dividend:
   816                           	opt stack 0
   817  000024                     strstr@s1:
   818                           	opt stack 0
   819  000024                     strtok@s2:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x23
   823  000024                     	ds	2
   824  000026                     ___lwmod@divisor:
   825                           	opt stack 0
   826  000026                     strstr@s2:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x25
   830  000026                     	ds	1
   831  000027                     ??_taxa_serial:
   832                           
   833                           ; 0 bytes @ 0x26
   834  000027                     	ds	1
   835  000028                     ??___lwmod:
   836                           
   837                           ; 0 bytes @ 0x27
   838  000028                     	ds	1
   839  000029                     ___lwmod@counter:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x28
   843  000029                     	ds	1
   844  00002A                     ?_printf:
   845                           	opt stack 0
   846  00002A                     printf@f:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x29
   850  00002A                     	ds	5
   851  00002F                     taxa_serial@baud_sanusb:
   852                           	opt stack 0
   853                           
   854                           ; 4 bytes @ 0x2E
   855  00002F                     	ds	1
   856  000030                     ??_printf:
   857                           
   858                           ; 0 bytes @ 0x2F
   859  000030                     	ds	3
   860  000033                     ??_main:
   861                           
   862                           ; 0 bytes @ 0x32
   863  000033                     	ds	2
   864                           tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           tblptrl	equ	0xFF6
   867                           tablat	equ	0xFF5
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           postdec1	equ	0xFE5
   871                           fsr1l	equ	0xFE1
   872                           
   873 ;;
   874 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   875 ;;
   876 ;; *************** function _main *****************
   877 ;; Defined at:
   878 ;;		line 65 in file "main.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  str             2   13[BANK0 ] PTR unsigned char 
   883 ;;		 -> STR_3(2), STR_2(2), NULL(0), recv(64), 
   884 ;;  size            1   12[BANK0 ] unsigned char 
   885 ;;  lcd_pos         1    9[BANK0 ] unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;		None               void
   888 ;; Registers used:
   889 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   895 ;;      Params:         0       0       0       0       0       0       0       0       0
   896 ;;      Locals:         0       6       0       0       0       0       0       0       0
   897 ;;      Temps:          2       0       0       0       0       0       0       0       0
   898 ;;      Totals:         2       6       0       0       0       0       0       0       0
   899 ;;Total ram usage:        8 bytes
   900 ;; Hardware stack levels required when called:    5
   901 ;; This function calls:
   902 ;;		_Lcd_Cmd
   903 ;;		___awdiv
   904 ;;		_atoi
   905 ;;		_clear_local_buffer
   906 ;;		_clock_int_4MHz
   907 ;;		_habilita_interrupcao
   908 ;;		_init_buffer
   909 ;;		_inverte_saida
   910 ;;		_lcd_escreve
   911 ;;		_lcd_ini
   912 ;;		_memset
   913 ;;		_nivel_alto
   914 ;;		_nivel_baixo
   915 ;;		_pop
   916 ;;		_printf
   917 ;;		_sendsw
   918 ;;		_strchr
   919 ;;		_strlen
   920 ;;		_strstr
   921 ;;		_strtok
   922 ;;		_taxa_serial
   923 ;;		_tempo_ms
   924 ;;		_timer0_ms
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text0
   931  00107E                     __ptext0:
   932                           	opt stack 0
   933  00107E                     _main:
   934                           	opt stack 26
   935                           
   936                           ;main.c: 66: clock_int_4MHz();
   937                           
   938                           ;incstack = 0
   939  00107E  EC18  F015         	call	_clock_int_4MHz	;wreg free
   940                           
   941                           ;main.c: 67: TRISB = 0;
   942  001082  0E00               	movlw	0
   943  001084  6E93               	movwf	3987,c	;volatile
   944                           
   945                           ;main.c: 68: memset(recv, 0, 64);
   946  001086  0100               	movlb	0	; () banked
   947  001088  0E00               	movlw	high _recv
   948  00108A  6E16               	movwf	memset@p1+1,c
   949  00108C  0100               	movlb	0	; () banked
   950  00108E  0EA6               	movlw	low _recv
   951  001090  6E15               	movwf	memset@p1,c
   952  001092  0E00               	movlw	0
   953  001094  6E18               	movwf	memset@c+1,c
   954  001096  0E00               	movlw	0
   955  001098  6E17               	movwf	memset@c,c
   956  00109A  0E00               	movlw	0
   957  00109C  6E1A               	movwf	memset@n+1,c
   958  00109E  0E40               	movlw	64
   959  0010A0  6E19               	movwf	memset@n,c
   960  0010A2  EC87  F016         	call	_memset	;wreg free
   961                           
   962                           ;main.c: 70: init_buffer(&buffer);
   963  0010A6  0100               	movlb	0	; () banked
   964  0010A8  0E00               	movlw	high _buffer
   965  0010AA  6E16               	movwf	init_buffer@buffer+1,c
   966  0010AC  0100               	movlb	0	; () banked
   967  0010AE  0E60               	movlw	low _buffer
   968  0010B0  6E15               	movwf	init_buffer@buffer,c
   969  0010B2  EC16  F016         	call	_init_buffer	;wreg free
   970                           
   971                           ;main.c: 71: habilita_interrupcao(0x9D20);
   972  0010B6  0E9D               	movlw	157
   973  0010B8  6E16               	movwf	habilita_interrupcao@tipo+1,c
   974  0010BA  0E20               	movlw	32
   975  0010BC  6E15               	movwf	habilita_interrupcao@tipo,c
   976  0010BE  EC3A  F012         	call	_habilita_interrupcao	;wreg free
   977                           
   978                           ;main.c: 72: taxa_serial(9600);
   979  0010C2  0E80               	movlw	128
   980  0010C4  6E23               	movwf	taxa_serial@taxa,c
   981  0010C6  0E25               	movlw	37
   982  0010C8  6E24               	movwf	taxa_serial@taxa+1,c
   983  0010CA  0E00               	movlw	0
   984  0010CC  6E25               	movwf	taxa_serial@taxa+2,c
   985  0010CE  0E00               	movlw	0
   986  0010D0  6E26               	movwf	taxa_serial@taxa+3,c
   987  0010D2  ECB4  F013         	call	_taxa_serial	;wreg free
   988                           
   989                           ;main.c: 73: nivel_alto(31759);
   990  0010D6  0E7C               	movlw	124
   991  0010D8  6E16               	movwf	nivel_alto@pino+1,c
   992  0010DA  0E0F               	movlw	15
   993  0010DC  6E15               	movwf	nivel_alto@pino,c
   994  0010DE  EC29  F00C         	call	_nivel_alto	;wreg free
   995                           
   996                           ;main.c: 75: nivel_baixo(31759);
   997  0010E2  0E7C               	movlw	124
   998  0010E4  6E16               	movwf	nivel_baixo@pino+1,c
   999  0010E6  0E0F               	movlw	15
  1000  0010E8  6E15               	movwf	nivel_baixo@pino,c
  1001  0010EA  EC5E  F00B         	call	_nivel_baixo	;wreg free
  1002                           
  1003                           ;main.c: 76: nivel_baixo(31758);
  1004  0010EE  0E7C               	movlw	124
  1005  0010F0  6E16               	movwf	nivel_baixo@pino+1,c
  1006  0010F2  0E0E               	movlw	14
  1007  0010F4  6E15               	movwf	nivel_baixo@pino,c
  1008  0010F6  EC5E  F00B         	call	_nivel_baixo	;wreg free
  1009                           
  1010                           ;main.c: 77: lcd_ini();
  1011  0010FA  ECB5  F010         	call	_lcd_ini	;wreg free
  1012                           
  1013                           ;main.c: 78: Lcd_Cmd(12);
  1014  0010FE  0E0C               	movlw	12
  1015  001100  EC99  F00F         	call	_Lcd_Cmd
  1016  001104                     l5103:
  1017                           
  1018                           ;main.c: 81: if (!PORTEbits.RE3) {
  1019  001104  B684               	btfsc	3972,3,c	;volatile
  1020  001106  D027               	goto	l5111
  1021  001108  00FF               	reset		;# 
  1022  00110A  D025               	goto	l5111
  1023  00110C                     l5107:
  1024                           
  1025                           ;main.c: 85: nivel_baixo(31759);
  1026  00110C  0E7C               	movlw	124
  1027  00110E  6E16               	movwf	nivel_baixo@pino+1,c
  1028  001110  0E0F               	movlw	15
  1029  001112  6E15               	movwf	nivel_baixo@pino,c
  1030  001114  EC5E  F00B         	call	_nivel_baixo	;wreg free
  1031                           
  1032                           ;main.c: 86: nivel_alto(31758);
  1033  001118  0E7C               	movlw	124
  1034  00111A  6E16               	movwf	nivel_alto@pino+1,c
  1035  00111C  0E0E               	movlw	14
  1036  00111E  6E15               	movwf	nivel_alto@pino,c
  1037  001120  EC29  F00C         	call	_nivel_alto	;wreg free
  1038                           
  1039                           ;main.c: 87: timer0_ms(100);
  1040  001124  0E00               	movlw	0
  1041  001126  6E16               	movwf	timer0_ms@cx+1,c
  1042  001128  0E64               	movlw	100
  1043  00112A  6E15               	movwf	timer0_ms@cx,c
  1044  00112C  EC6F  F016         	call	_timer0_ms	;wreg free
  1045                           
  1046                           ;main.c: 88: nivel_alto(31759);
  1047  001130  0E7C               	movlw	124
  1048  001132  6E16               	movwf	nivel_alto@pino+1,c
  1049  001134  0E0F               	movlw	15
  1050  001136  6E15               	movwf	nivel_alto@pino,c
  1051  001138  EC29  F00C         	call	_nivel_alto	;wreg free
  1052                           
  1053                           ;main.c: 89: nivel_baixo(31758);
  1054  00113C  0E7C               	movlw	124
  1055  00113E  6E16               	movwf	nivel_baixo@pino+1,c
  1056  001140  0E0E               	movlw	14
  1057  001142  6E15               	movwf	nivel_baixo@pino,c
  1058  001144  EC5E  F00B         	call	_nivel_baixo	;wreg free
  1059                           
  1060                           ;main.c: 90: timer0_ms(100);
  1061  001148  0E00               	movlw	0
  1062  00114A  6E16               	movwf	timer0_ms@cx+1,c
  1063  00114C  0E64               	movlw	100
  1064  00114E  6E15               	movwf	timer0_ms@cx,c
  1065  001150  EC6F  F016         	call	_timer0_ms	;wreg free
  1066                           
  1067                           ;main.c: 91: blink--;
  1068  001154  0645               	decf	_blink,f,c
  1069  001156                     l5111:
  1070  001156  6645               	tstfsz	_blink,c
  1071  001158  D7D9               	goto	l5107
  1072                           
  1073                           ;main.c: 92: }
  1074                           ;main.c: 94: if (buffer.count > 0) {
  1075  00115A  0100               	movlb	0	; () banked
  1076  00115C  EE20  F0A4         	lfsr	2,_buffer+68
  1077  001160  52DE               	movf	postinc2,f,c
  1078  001162  50DD               	movf	postdec2,w,c
  1079  001164  0A80               	xorlw	128
  1080  001166  0F80               	addlw	128
  1081  001168  0E01               	movlw	1
  1082  00116A  B4D8               	btfsc	status,2,c
  1083  00116C  5CDF               	subwf	indf2,w,c
  1084  00116E  A0D8               	btfss	status,0,c
  1085  001170  D016               	goto	l5121
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;main.c: 95: c = pop(&buffer);
  1089  001172  0100               	movlb	0	; () banked
  1090  001174  0E00               	movlw	high _buffer
  1091  001176  6E16               	movwf	pop@buffer+1,c
  1092  001178  0100               	movlb	0	; () banked
  1093  00117A  0E60               	movlw	low _buffer
  1094  00117C  6E15               	movwf	pop@buffer,c
  1095  00117E  EC71  F014         	call	_pop	;wreg free
  1096  001182  6E46               	movwf	_c,c
  1097                           
  1098                           ;main.c: 96: recv[pos++] = c;
  1099  001184  5048               	movf	_pos,w,c
  1100  001186  0D01               	mullw	1
  1101  001188  0100               	movlb	0	; () banked
  1102  00118A  0EA6               	movlw	low _recv
  1103  00118C  24F3               	addwf	prodl,w,c
  1104  00118E  6ED9               	movwf	fsr2l,c
  1105  001190  0100               	movlb	0	; () banked
  1106  001192  0E00               	movlw	high _recv
  1107  001194  20F4               	addwfc	prodh,w,c
  1108  001196  6EDA               	movwf	fsr2h,c
  1109  001198  C046  FFDF         	movff	_c,indf2
  1110                           
  1111                           ; BSR set to: 0
  1112  00119C  2A48               	incf	_pos,f,c
  1113  00119E                     l5121:
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;main.c: 97: }
  1117                           ;main.c: 98: if (pos > 0) {
  1118  00119E  5048               	movf	_pos,w,c
  1119  0011A0  B4D8               	btfsc	status,2,c
  1120  0011A2  D7B0               	goto	l5103
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;main.c: 99: if (strchr(recv, '>')) {
  1124  0011A4  0100               	movlb	0	; () banked
  1125  0011A6  0E00               	movlw	high _recv
  1126  0011A8  6E16               	movwf	strchr@ptr+1,c
  1127  0011AA  0100               	movlb	0	; () banked
  1128  0011AC  0EA6               	movlw	low _recv
  1129  0011AE  6E15               	movwf	strchr@ptr,c
  1130  0011B0  0E00               	movlw	0
  1131  0011B2  6E18               	movwf	strchr@chr+1,c
  1132  0011B4  0E3E               	movlw	62
  1133  0011B6  6E17               	movwf	strchr@chr,c
  1134  0011B8  ECE2  F014         	call	_strchr	;wreg free
  1135  0011BC  5016               	movf	?_strchr+1,w,c
  1136  0011BE  1015               	iorwf	?_strchr,w,c
  1137  0011C0  B4D8               	btfsc	status,2,c
  1138  0011C2  D00E               	goto	l5131
  1139                           
  1140                           ;main.c: 100: tempo_ms(100);
  1141  0011C4  0E00               	movlw	0
  1142  0011C6  6E16               	movwf	tempo_ms@i+1,c
  1143  0011C8  0E64               	movlw	100
  1144  0011CA  6E15               	movwf	tempo_ms@i,c
  1145  0011CC  ECC7  F016         	call	_tempo_ms	;wreg free
  1146                           
  1147                           ;main.c: 101: sendsw(device_id);
  1148  0011D0  0E00               	movlw	high _device_id
  1149  0011D2  6E17               	movwf	sendsw@st+1,c
  1150  0011D4  0E3B               	movlw	low _device_id
  1151  0011D6  6E16               	movwf	sendsw@st,c
  1152  0011D8  EC35  F016         	call	_sendsw	;wreg free
  1153                           
  1154                           ;main.c: 102: clear_local_buffer();
  1155  0011DC  EC9D  F016         	call	_clear_local_buffer	;wreg free
  1156  0011E0                     l5131:
  1157                           
  1158                           ;main.c: 103: }
  1159                           ;main.c: 105: if (strstr(recv, "+IPD,") && strchr(recv, ':')) {
  1160  0011E0  0100               	movlb	0	; () banked
  1161  0011E2  0E00               	movlw	high _recv
  1162  0011E4  6E25               	movwf	strstr@s1+1,c
  1163  0011E6  0100               	movlb	0	; () banked
  1164  0011E8  0EA6               	movlw	low _recv
  1165  0011EA  6E24               	movwf	strstr@s1,c
  1166  0011EC  0E10               	movlw	high STR_1
  1167  0011EE  6E27               	movwf	strstr@s2+1,c
  1168  0011F0  0E75               	movlw	low STR_1
  1169  0011F2  6E26               	movwf	strstr@s2,c
  1170  0011F4  EC8C  F012         	call	_strstr	;wreg free
  1171  0011F8  5025               	movf	?_strstr+1,w,c
  1172  0011FA  1024               	iorwf	?_strstr,w,c
  1173  0011FC  B4D8               	btfsc	status,2,c
  1174  0011FE  D0B6               	goto	l5167
  1175  001200  0100               	movlb	0	; () banked
  1176  001202  0E00               	movlw	high _recv
  1177  001204  6E16               	movwf	strchr@ptr+1,c
  1178  001206  0100               	movlb	0	; () banked
  1179  001208  0EA6               	movlw	low _recv
  1180  00120A  6E15               	movwf	strchr@ptr,c
  1181  00120C  0E00               	movlw	0
  1182  00120E  6E18               	movwf	strchr@chr+1,c
  1183  001210  0E3A               	movlw	58
  1184  001212  6E17               	movwf	strchr@chr,c
  1185  001214  ECE2  F014         	call	_strchr	;wreg free
  1186  001218  5016               	movf	?_strchr+1,w,c
  1187  00121A  1015               	iorwf	?_strchr,w,c
  1188  00121C  B4D8               	btfsc	status,2,c
  1189  00121E  D0A6               	goto	l5167
  1190                           
  1191                           ;main.c: 106: unsigned char size, lcd_pos;
  1192                           ;main.c: 107: char* str = strchr(recv, ',') + 1;
  1193  001220  0100               	movlb	0	; () banked
  1194  001222  0E00               	movlw	high _recv
  1195  001224  6E16               	movwf	strchr@ptr+1,c
  1196  001226  0100               	movlb	0	; () banked
  1197  001228  0EA6               	movlw	low _recv
  1198  00122A  6E15               	movwf	strchr@ptr,c
  1199  00122C  0E00               	movlw	0
  1200  00122E  6E18               	movwf	strchr@chr+1,c
  1201  001230  0E2C               	movlw	44
  1202  001232  6E17               	movwf	strchr@chr,c
  1203  001234  ECE2  F014         	call	_strchr	;wreg free
  1204  001238  0E01               	movlw	1
  1205  00123A  2415               	addwf	?_strchr,w,c
  1206  00123C  0100               	movlb	0	; () banked
  1207  00123E  0100               	movlb	0	; () banked
  1208  001240  6FF3               	movwf	main@str& (0+255),b
  1209  001242  0E00               	movlw	0
  1210  001244  2016               	addwfc	?_strchr+1,w,c
  1211  001246  0100               	movlb	0	; () banked
  1212  001248  6FF4               	movwf	(main@str+1)& (0+255),b
  1213                           
  1214                           ;main.c: 108: str = strtok(str, ":");
  1215  00124A  0100               	movlb	0	; () banked
  1216  00124C  C0F4  F023         	movff	main@str+1,strtok@s1+1
  1217  001250  0100               	movlb	0	; () banked
  1218  001252  C0F3  F022         	movff	main@str,strtok@s1
  1219  001256  0E10               	movlw	high STR_2
  1220  001258  6E25               	movwf	strtok@s2+1,c
  1221  00125A  0E7B               	movlw	low STR_2
  1222  00125C  6E24               	movwf	strtok@s2,c
  1223  00125E  EC39  F010         	call	_strtok	;wreg free
  1224  001262  C022  F0F3         	movff	?_strtok,main@str
  1225  001266  C023  F0F4         	movff	?_strtok+1,main@str+1
  1226                           
  1227                           ;main.c: 109: size = atoi(str);
  1228  00126A  0100               	movlb	0	; () banked
  1229  00126C  C0F4  F01C         	movff	main@str+1,atoi@s+1
  1230  001270  0100               	movlb	0	; () banked
  1231  001272  C0F3  F01B         	movff	main@str,atoi@s
  1232  001276  EC4B  F00E         	call	_atoi	;wreg free
  1233  00127A  501B               	movf	?_atoi,w,c
  1234  00127C  0100               	movlb	0	; () banked
  1235  00127E  0100               	movlb	0	; () banked
  1236  001280  6FF2               	movwf	main@size& (0+255),b
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;main.c: 111: clear_local_buffer();
  1240  001282  EC9D  F016         	call	_clear_local_buffer	;wreg free
  1241                           
  1242                           ;main.c: 112: while (pos < size) {
  1243  001286  D022               	goto	l5147
  1244  001288                     l5141:
  1245                           
  1246                           ;main.c: 113: if (buffer.count > 0) {
  1247  001288  0100               	movlb	0	; () banked
  1248  00128A  EE20  F0A4         	lfsr	2,_buffer+68
  1249  00128E  52DE               	movf	postinc2,f,c
  1250  001290  50DD               	movf	postdec2,w,c
  1251  001292  0A80               	xorlw	128
  1252  001294  0F80               	addlw	128
  1253  001296  0E01               	movlw	1
  1254  001298  B4D8               	btfsc	status,2,c
  1255  00129A  5CDF               	subwf	indf2,w,c
  1256  00129C  A0D8               	btfss	status,0,c
  1257  00129E  D016               	goto	l5147
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;main.c: 114: recv[pos++] = pop(&buffer);
  1261  0012A0  0100               	movlb	0	; () banked
  1262  0012A2  0E00               	movlw	high _buffer
  1263  0012A4  6E16               	movwf	pop@buffer+1,c
  1264  0012A6  0100               	movlb	0	; () banked
  1265  0012A8  0E60               	movlw	low _buffer
  1266  0012AA  6E15               	movwf	pop@buffer,c
  1267  0012AC  EC71  F014         	call	_pop	;wreg free
  1268  0012B0  6E33               	movwf	??_main& (0+255),c
  1269  0012B2  5048               	movf	_pos,w,c
  1270  0012B4  0D01               	mullw	1
  1271  0012B6  0100               	movlb	0	; () banked
  1272  0012B8  0EA6               	movlw	low _recv
  1273  0012BA  24F3               	addwf	prodl,w,c
  1274  0012BC  6ED9               	movwf	fsr2l,c
  1275  0012BE  0100               	movlb	0	; () banked
  1276  0012C0  0E00               	movlw	high _recv
  1277  0012C2  20F4               	addwfc	prodh,w,c
  1278  0012C4  6EDA               	movwf	fsr2h,c
  1279  0012C6  C033  FFDF         	movff	??_main,indf2
  1280                           
  1281                           ; BSR set to: 0
  1282  0012CA  2A48               	incf	_pos,f,c
  1283  0012CC                     l5147:
  1284  0012CC  0100               	movlb	0	; () banked
  1285  0012CE  0100               	movlb	0	; () banked
  1286  0012D0  51F2               	movf	main@size& (0+255),w,b
  1287  0012D2  5C48               	subwf	_pos,w,c
  1288  0012D4  A0D8               	btfss	status,0,c
  1289  0012D6  D7D8               	goto	l5141
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;main.c: 115: }
  1293                           ;main.c: 116: }
  1294                           ;main.c: 120: blink = 5;
  1295                           
  1296                           ; BSR set to: 0
  1297  0012D8  6E33               	movwf	??_main& (0+255),c
  1298  0012DA  0E05               	movlw	5
  1299  0012DC  6E45               	movwf	_blink,c
  1300  0012DE  5033               	movf	??_main& (0+255),w,c
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;main.c: 122: str = strtok((0), ":");
  1304  0012E0  0E00               	movlw	0
  1305  0012E2  6E23               	movwf	strtok@s1+1,c
  1306  0012E4  0E00               	movlw	0
  1307  0012E6  6E22               	movwf	strtok@s1,c
  1308  0012E8  0E10               	movlw	high STR_2
  1309  0012EA  6E25               	movwf	strtok@s2+1,c
  1310  0012EC  0E7B               	movlw	low STR_2
  1311  0012EE  6E24               	movwf	strtok@s2,c
  1312  0012F0  EC39  F010         	call	_strtok	;wreg free
  1313  0012F4  C022  F0F3         	movff	?_strtok,main@str
  1314  0012F8  C023  F0F4         	movff	?_strtok+1,main@str+1
  1315                           
  1316                           ;main.c: 125: Lcd_Cmd(1);
  1317  0012FC  0E01               	movlw	1
  1318  0012FE  EC99  F00F         	call	_Lcd_Cmd
  1319                           
  1320                           ;main.c: 127: lcd_pos = size <= 18 ? (19 - size) / 2 : 1;
  1321  001302  0E12               	movlw	18
  1322  001304  0100               	movlb	0	; () banked
  1323  001306  0100               	movlb	0	; () banked
  1324  001308  65F2               	cpfsgt	main@size& (0+255),b
  1325  00130A  D008               	goto	l5159
  1326                           
  1327                           ; BSR set to: 0
  1328  00130C  0E00               	movlw	0
  1329  00130E  0100               	movlb	0	; () banked
  1330  001310  0100               	movlb	0	; () banked
  1331  001312  6FF1               	movwf	(_main$2030+1)& (0+255),b
  1332  001314  0E01               	movlw	1
  1333  001316  0100               	movlb	0	; () banked
  1334  001318  6FF0               	movwf	_main$2030& (0+255),b
  1335  00131A  D019               	goto	l5161
  1336  00131C                     l5159:
  1337                           
  1338                           ; BSR set to: 0
  1339  00131C  0100               	movlb	0	; () banked
  1340  00131E  0100               	movlb	0	; () banked
  1341  001320  51F2               	movf	main@size& (0+255),w,b
  1342  001322  6E33               	movwf	??_main& (0+255),c
  1343  001324  6A34               	clrf	(??_main+1)& (0+255),c
  1344  001326  1E33               	comf	??_main,f,c
  1345  001328  1E34               	comf	??_main+1,f,c
  1346  00132A  4A33               	infsnz	??_main,f,c
  1347  00132C  2A34               	incf	??_main+1,f,c
  1348  00132E  0E13               	movlw	19
  1349  001330  2433               	addwf	??_main,w,c
  1350  001332  6E15               	movwf	___awdiv@dividend,c
  1351  001334  0E00               	movlw	0
  1352  001336  2034               	addwfc	??_main+1,w,c
  1353  001338  6E16               	movwf	___awdiv@dividend+1,c
  1354  00133A  0E00               	movlw	0
  1355  00133C  6E18               	movwf	___awdiv@divisor+1,c
  1356  00133E  0E02               	movlw	2
  1357  001340  6E17               	movwf	___awdiv@divisor,c
  1358  001342  ECE2  F011         	call	___awdiv	;wreg free
  1359  001346  C015  F0F0         	movff	?___awdiv,_main$2030
  1360  00134A  C016  F0F1         	movff	?___awdiv+1,_main$2030+1
  1361  00134E                     l5161:
  1362  00134E  C0F0  F0EF         	movff	_main$2030,main@lcd_pos
  1363                           
  1364                           ;main.c: 128: lcd_escreve(1, lcd_pos, str);
  1365  001352  C0EF  F018         	movff	main@lcd_pos,lcd_escreve@x
  1366  001356  0100               	movlb	0	; () banked
  1367  001358  C0F4  F01A         	movff	main@str+1,lcd_escreve@buffer+1
  1368  00135C  0100               	movlb	0	; () banked
  1369  00135E  C0F3  F019         	movff	main@str,lcd_escreve@buffer
  1370  001362  0E01               	movlw	1
  1371  001364  EC28  F013         	call	_lcd_escreve
  1372                           
  1373                           ;main.c: 132: clear_local_buffer();
  1374  001368  EC9D  F016         	call	_clear_local_buffer	;wreg free
  1375  00136C                     l5167:
  1376                           
  1377                           ;main.c: 133: }
  1378                           ;main.c: 135: if (strstr(recv, "\r\n")) {
  1379  00136C  0100               	movlb	0	; () banked
  1380  00136E  0E00               	movlw	high _recv
  1381  001370  6E25               	movwf	strstr@s1+1,c
  1382  001372  0100               	movlb	0	; () banked
  1383  001374  0EA6               	movlw	low _recv
  1384  001376  6E24               	movwf	strstr@s1,c
  1385  001378  0E10               	movlw	high (STR_6+25)
  1386  00137A  6E27               	movwf	strstr@s2+1,c
  1387  00137C  0E40               	movlw	low (STR_6+25)
  1388  00137E  6E26               	movwf	strstr@s2,c
  1389  001380  EC8C  F012         	call	_strstr	;wreg free
  1390  001384  5025               	movf	?_strstr+1,w,c
  1391  001386  1024               	iorwf	?_strstr,w,c
  1392  001388  B4D8               	btfsc	status,2,c
  1393  00138A  D6BC               	goto	l5103
  1394                           
  1395                           ;main.c: 136: inverte_saida(31759);
  1396  00138C  0E7C               	movlw	124
  1397  00138E  6E16               	movwf	inverte_saida@pino+1,c
  1398  001390  0E0F               	movlw	15
  1399  001392  6E15               	movwf	inverte_saida@pino,c
  1400  001394  ECF1  F00C         	call	_inverte_saida	;wreg free
  1401                           
  1402                           ;main.c: 137: if (strstr(recv, "WIFI GOT IP")) {
  1403  001398  0100               	movlb	0	; () banked
  1404  00139A  0E00               	movlw	high _recv
  1405  00139C  6E25               	movwf	strstr@s1+1,c
  1406  00139E  0100               	movlb	0	; () banked
  1407  0013A0  0EA6               	movlw	low _recv
  1408  0013A2  6E24               	movwf	strstr@s1,c
  1409  0013A4  0E10               	movlw	high STR_5
  1410  0013A6  6E27               	movwf	strstr@s2+1,c
  1411  0013A8  0E53               	movlw	low STR_5
  1412  0013AA  6E26               	movwf	strstr@s2,c
  1413  0013AC  EC8C  F012         	call	_strstr	;wreg free
  1414  0013B0  5025               	movf	?_strstr+1,w,c
  1415  0013B2  1024               	iorwf	?_strstr,w,c
  1416  0013B4  B4D8               	btfsc	status,2,c
  1417  0013B6  D014               	goto	l5177
  1418                           
  1419                           ;main.c: 138: printf("AT+CIPSTART=\"TCP\",\"%s\",%d\r\n", ip_addr, ip_port);
  1420  0013B8  0E10               	movlw	high STR_6
  1421  0013BA  6E2B               	movwf	printf@f+1,c
  1422  0013BC  0E27               	movlw	low STR_6
  1423  0013BE  6E2A               	movwf	printf@f,c
  1424  0013C0  0101               	movlb	1	; () banked
  1425  0013C2  0E01               	movlw	high _ip_addr
  1426  0013C4  6E2D               	movwf	?_printf+3,c
  1427  0013C6  0101               	movlb	1	; () banked
  1428  0013C8  0E00               	movlw	low _ip_addr
  1429  0013CA  6E2C               	movwf	?_printf+2,c
  1430  0013CC  C037  F02E         	movff	_ip_port,?_printf+4
  1431  0013D0  C038  F02F         	movff	_ip_port+1,?_printf+5
  1432  0013D4  EC3E  F00A         	call	_printf	;wreg free
  1433                           
  1434                           ;main.c: 139: wifi_connected = 1;
  1435  0013D8  6E33               	movwf	??_main& (0+255),c
  1436  0013DA  0E01               	movlw	1
  1437  0013DC  6E4B               	movwf	_wifi_connected,c
  1438  0013DE  5033               	movf	??_main& (0+255),w,c
  1439  0013E0                     l5177:
  1440                           
  1441                           ;main.c: 140: }
  1442                           ;main.c: 141: if (strstr(recv, "CONNECT") && wifi_connected) {
  1443  0013E0  0100               	movlb	0	; () banked
  1444  0013E2  0E00               	movlw	high _recv
  1445  0013E4  6E25               	movwf	strstr@s1+1,c
  1446  0013E6  0100               	movlb	0	; () banked
  1447  0013E8  0EA6               	movlw	low _recv
  1448  0013EA  6E24               	movwf	strstr@s1,c
  1449  0013EC  0E10               	movlw	high STR_7
  1450  0013EE  6E27               	movwf	strstr@s2+1,c
  1451  0013F0  0E5F               	movlw	low STR_7
  1452  0013F2  6E26               	movwf	strstr@s2,c
  1453  0013F4  EC8C  F012         	call	_strstr	;wreg free
  1454  0013F8  5025               	movf	?_strstr+1,w,c
  1455  0013FA  1024               	iorwf	?_strstr,w,c
  1456  0013FC  B4D8               	btfsc	status,2,c
  1457  0013FE  D013               	goto	l5183
  1458  001400  504B               	movf	_wifi_connected,w,c
  1459  001402  B4D8               	btfsc	status,2,c
  1460  001404  D010               	goto	l5183
  1461                           
  1462                           ;main.c: 142: printf("AT+CIPSEND=%d\r\n", strlen(device_id));
  1463  001406  0E10               	movlw	high STR_8
  1464  001408  6E2B               	movwf	printf@f+1,c
  1465  00140A  0E43               	movlw	low STR_8
  1466  00140C  6E2A               	movwf	printf@f,c
  1467  00140E  0E00               	movlw	high _device_id
  1468  001410  6E16               	movwf	strlen@s+1,c
  1469  001412  0E3B               	movlw	low _device_id
  1470  001414  6E15               	movwf	strlen@s,c
  1471  001416  ECAA  F015         	call	_strlen	;wreg free
  1472  00141A  C015  F02C         	movff	?_strlen,?_printf+2
  1473  00141E  C016  F02D         	movff	?_strlen+1,?_printf+3
  1474  001422  EC3E  F00A         	call	_printf	;wreg free
  1475  001426                     l5183:
  1476                           
  1477                           ;main.c: 143: }
  1478                           ;main.c: 144: if (strstr(recv, "CLOSED") != (0)) {
  1479  001426  0100               	movlb	0	; () banked
  1480  001428  0E00               	movlw	high _recv
  1481  00142A  6E25               	movwf	strstr@s1+1,c
  1482  00142C  0100               	movlb	0	; () banked
  1483  00142E  0EA6               	movlw	low _recv
  1484  001430  6E24               	movwf	strstr@s1,c
  1485  001432  0E10               	movlw	high STR_9
  1486  001434  6E27               	movwf	strstr@s2+1,c
  1487  001436  0E6E               	movlw	low STR_9
  1488  001438  6E26               	movwf	strstr@s2,c
  1489  00143A  EC8C  F012         	call	_strstr	;wreg free
  1490  00143E  5025               	movf	?_strstr+1,w,c
  1491  001440  1024               	iorwf	?_strstr,w,c
  1492  001442  B4D8               	btfsc	status,2,c
  1493  001444  D006               	goto	l5187
  1494                           
  1495                           ;main.c: 145: nivel_baixo(31759);
  1496  001446  0E7C               	movlw	124
  1497  001448  6E16               	movwf	nivel_baixo@pino+1,c
  1498  00144A  0E0F               	movlw	15
  1499  00144C  6E15               	movwf	nivel_baixo@pino,c
  1500  00144E  EC5E  F00B         	call	_nivel_baixo	;wreg free
  1501  001452                     l5187:
  1502                           
  1503                           ;main.c: 146: }
  1504                           ;main.c: 147: memset(recv, '\0', 64);
  1505  001452  0100               	movlb	0	; () banked
  1506  001454  0E00               	movlw	high _recv
  1507  001456  6E16               	movwf	memset@p1+1,c
  1508  001458  0100               	movlb	0	; () banked
  1509  00145A  0EA6               	movlw	low _recv
  1510  00145C  6E15               	movwf	memset@p1,c
  1511  00145E  0E00               	movlw	0
  1512  001460  6E18               	movwf	memset@c+1,c
  1513  001462  0E00               	movlw	0
  1514  001464  6E17               	movwf	memset@c,c
  1515  001466  0E00               	movlw	0
  1516  001468  6E1A               	movwf	memset@n+1,c
  1517  00146A  0E40               	movlw	64
  1518  00146C  6E19               	movwf	memset@n,c
  1519  00146E  EC87  F016         	call	_memset	;wreg free
  1520                           
  1521                           ;main.c: 148: pos = 0;
  1522  001472  6E33               	movwf	??_main& (0+255),c
  1523  001474  0E00               	movlw	0
  1524  001476  6E48               	movwf	_pos,c
  1525  001478  5033               	movf	??_main& (0+255),w,c
  1526  00147A  D644               	goto	l5103
  1527  00147C                     __end_of_main:
  1528                           	opt stack 0
  1529                           tblptru	equ	0xFF8
  1530                           tblptrh	equ	0xFF7
  1531                           tblptrl	equ	0xFF6
  1532                           tablat	equ	0xFF5
  1533                           prodh	equ	0xFF4
  1534                           prodl	equ	0xFF3
  1535                           postinc0	equ	0xFEE
  1536                           wreg	equ	0xFE8
  1537                           postdec1	equ	0xFE5
  1538                           fsr1l	equ	0xFE1
  1539                           indf2	equ	0xFDF
  1540                           postinc2	equ	0xFDE
  1541                           postdec2	equ	0xFDD
  1542                           fsr2h	equ	0xFDA
  1543                           fsr2l	equ	0xFD9
  1544                           status	equ	0xFD8
  1545                           
  1546 ;; *************** function _timer0_ms *****************
  1547 ;; Defined at:
  1548 ;;		line 431 in file "SanUSB1X.h"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  cx              2   20[COMRAM] unsigned int 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  i               2   22[COMRAM] unsigned int 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;		None               void
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1562 ;;      Params:         2       0       0       0       0       0       0       0       0
  1563 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1565 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1566 ;;Total ram usage:        4 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    2
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text1
  1577  002CDE                     __ptext1:
  1578                           	opt stack 0
  1579  002CDE                     _timer0_ms:
  1580                           	opt stack 28
  1581                           
  1582                           ;SanUSB1X.h: 433: unsigned int i;
  1583                           ;SanUSB1X.h: 434: TMR0L = 0;
  1584                           
  1585                           ;incstack = 0
  1586  002CDE  0E00               	movlw	0
  1587  002CE0  6ED6               	movwf	4054,c	;volatile
  1588                           
  1589                           ;SanUSB1X.h: 435: T0CON =0B11000001;
  1590  002CE2  0EC1               	movlw	193
  1591  002CE4  6ED5               	movwf	4053,c	;volatile
  1592                           
  1593                           ;SanUSB1X.h: 438: for (i = 0; i < cx; i++) {
  1594  002CE6  0E00               	movlw	0
  1595  002CE8  6E18               	movwf	timer0_ms@i+1,c
  1596  002CEA  0E00               	movlw	0
  1597  002CEC  6E17               	movwf	timer0_ms@i,c
  1598  002CEE  D008               	goto	l4623
  1599  002CF0                     l4617:
  1600                           
  1601                           ;SanUSB1X.h: 439: TMR0L = TMR0L + 6;
  1602  002CF0  50D6               	movf	4054,w,c	;volatile
  1603  002CF2  0F06               	addlw	6
  1604  002CF4  6ED6               	movwf	4054,c	;volatile
  1605                           
  1606                           ;SanUSB1X.h: 440: INTCONbits.TMR0IF = 0;
  1607  002CF6  94F2               	bcf	intcon,2,c	;volatile
  1608  002CF8                     l429:
  1609  002CF8  A4F2               	btfss	intcon,2,c	;volatile
  1610  002CFA  D7FE               	goto	l429
  1611  002CFC  4A17               	infsnz	timer0_ms@i,f,c
  1612  002CFE  2A18               	incf	timer0_ms@i+1,f,c
  1613  002D00                     l4623:
  1614  002D00  5015               	movf	timer0_ms@cx,w,c
  1615  002D02  5C17               	subwf	timer0_ms@i,w,c
  1616  002D04  5016               	movf	timer0_ms@cx+1,w,c
  1617  002D06  5818               	subwfb	timer0_ms@i+1,w,c
  1618  002D08  B0D8               	btfsc	status,0,c
  1619  002D0A  0012               	return	
  1620  002D0C  D7F1               	goto	l4617
  1621  002D0E                     __end_of_timer0_ms:
  1622                           	opt stack 0
  1623                           tblptru	equ	0xFF8
  1624                           tblptrh	equ	0xFF7
  1625                           tblptrl	equ	0xFF6
  1626                           tablat	equ	0xFF5
  1627                           prodh	equ	0xFF4
  1628                           prodl	equ	0xFF3
  1629                           intcon	equ	0xFF2
  1630                           postinc0	equ	0xFEE
  1631                           wreg	equ	0xFE8
  1632                           postdec1	equ	0xFE5
  1633                           fsr1l	equ	0xFE1
  1634                           indf2	equ	0xFDF
  1635                           postinc2	equ	0xFDE
  1636                           postdec2	equ	0xFDD
  1637                           fsr2h	equ	0xFDA
  1638                           fsr2l	equ	0xFD9
  1639                           status	equ	0xFD8
  1640                           
  1641 ;; *************** function _tempo_ms *****************
  1642 ;; Defined at:
  1643 ;;		line 322 in file "SanUSB1X.h"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  i               2   20[COMRAM] unsigned int 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  k               2   22[COMRAM] unsigned int 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;		None               void
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1657 ;;      Params:         2       0       0       0       0       0       0       0       0
  1658 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1660 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1661 ;;Total ram usage:        4 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    2
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;;		_le_AD8bits
  1669 ;;		_le_AD10bits
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text2
  1674  002D8E                     __ptext2:
  1675                           	opt stack 0
  1676  002D8E                     _tempo_ms:
  1677                           	opt stack 28
  1678                           
  1679                           ;SanUSB1X.h: 324: unsigned int k;
  1680                           ;SanUSB1X.h: 328: for(k=0;k<i;k++) { _delay((unsigned long)((1)*(4000000/4000.0)));}
  1681                           
  1682                           ;incstack = 0
  1683  002D8E  0E00               	movlw	0
  1684  002D90  6E18               	movwf	tempo_ms@k+1,c
  1685  002D92  0E00               	movlw	0
  1686  002D94  6E17               	movwf	tempo_ms@k,c
  1687  002D96  D006               	goto	l341
  1688  002D98                     l4611:
  1689  002D98  0EFA               	movlw	250
  1690  002D9A                     u4437:
  1691  002D9A  F000               	nop	
  1692  002D9C  2EE8               	decfsz	wreg,f,c
  1693  002D9E  D7FD               	goto	u4437
  1694  002DA0  4A17               	infsnz	tempo_ms@k,f,c
  1695  002DA2  2A18               	incf	tempo_ms@k+1,f,c
  1696  002DA4                     l341:
  1697  002DA4  5015               	movf	tempo_ms@i,w,c
  1698  002DA6  5C17               	subwf	tempo_ms@k,w,c
  1699  002DA8  5016               	movf	tempo_ms@i+1,w,c
  1700  002DAA  5818               	subwfb	tempo_ms@k+1,w,c
  1701  002DAC  B0D8               	btfsc	status,0,c
  1702  002DAE  0012               	return	
  1703  002DB0  D7F3               	goto	l4611
  1704  002DB2                     __end_of_tempo_ms:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           prodh	equ	0xFF4
  1711                           prodl	equ	0xFF3
  1712                           intcon	equ	0xFF2
  1713                           postinc0	equ	0xFEE
  1714                           wreg	equ	0xFE8
  1715                           postdec1	equ	0xFE5
  1716                           fsr1l	equ	0xFE1
  1717                           indf2	equ	0xFDF
  1718                           postinc2	equ	0xFDE
  1719                           postdec2	equ	0xFDD
  1720                           fsr2h	equ	0xFDA
  1721                           fsr2l	equ	0xFD9
  1722                           status	equ	0xFD8
  1723                           
  1724 ;; *************** function _taxa_serial *****************
  1725 ;; Defined at:
  1726 ;;		line 494 in file "SanUSB1X.h"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  taxa            4   34[COMRAM] unsigned long 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  baud_sanusb     4   46[COMRAM] unsigned long 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;		None               void
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1740 ;;      Params:         4       0       0       0       0       0       0       0       0
  1741 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1742 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1743 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1744 ;;Total ram usage:       16 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    3
  1747 ;; This function calls:
  1748 ;;		___lldiv
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text3
  1755  002768                     __ptext3:
  1756                           	opt stack 0
  1757  002768                     _taxa_serial:
  1758                           	opt stack 27
  1759                           
  1760                           ;SanUSB1X.h: 495: unsigned long baud_sanusb;
  1761                           ;SanUSB1X.h: 496: TRISCbits.TRISC7=1;
  1762                           
  1763                           ;incstack = 0
  1764  002768  8E94               	bsf	3988,7,c	;volatile
  1765                           
  1766                           ;SanUSB1X.h: 497: TRISCbits.TRISC6=0;
  1767  00276A  9C94               	bcf	3988,6,c	;volatile
  1768                           
  1769                           ;SanUSB1X.h: 498: TXSTA = 0x24;
  1770  00276C  0E24               	movlw	36
  1771  00276E  6EAC               	movwf	4012,c	;volatile
  1772                           
  1773                           ;SanUSB1X.h: 499: RCSTA = 0x90;
  1774  002770  0E90               	movlw	144
  1775  002772  6EAB               	movwf	4011,c	;volatile
  1776                           
  1777                           ;SanUSB1X.h: 500: BAUDCON = 0x08;
  1778  002774  0E08               	movlw	8
  1779  002776  6EB8               	movwf	4024,c	;volatile
  1780                           
  1781                           ;SanUSB1X.h: 502: baud_sanusb = REG+((4000000/4)/ taxa) - 1;
  1782  002778  0E40               	movlw	64
  1783  00277A  6E15               	movwf	___lldiv@dividend,c
  1784  00277C  0E42               	movlw	66
  1785  00277E  6E16               	movwf	___lldiv@dividend+1,c
  1786  002780  0E0F               	movlw	15
  1787  002782  6E17               	movwf	___lldiv@dividend+2,c
  1788  002784  0E00               	movlw	0
  1789  002786  6E18               	movwf	___lldiv@dividend+3,c
  1790  002788  C023  F019         	movff	taxa_serial@taxa,___lldiv@divisor
  1791  00278C  C024  F01A         	movff	taxa_serial@taxa+1,___lldiv@divisor+1
  1792  002790  C025  F01B         	movff	taxa_serial@taxa+2,___lldiv@divisor+2
  1793  002794  C026  F01C         	movff	taxa_serial@taxa+3,___lldiv@divisor+3
  1794  002798  EC71  F013         	call	___lldiv	;wreg free
  1795  00279C  C015  F027         	movff	?___lldiv,??_taxa_serial
  1796  0027A0  C016  F028         	movff	?___lldiv+1,??_taxa_serial+1
  1797  0027A4  C017  F029         	movff	?___lldiv+2,??_taxa_serial+2
  1798  0027A8  C018  F02A         	movff	?___lldiv+3,??_taxa_serial+3
  1799  0027AC  5039               	movf	_REG,w,c
  1800  0027AE  2427               	addwf	??_taxa_serial,w,c
  1801  0027B0  6E2B               	movwf	(??_taxa_serial+4)& (0+255),c
  1802  0027B2  0E00               	movlw	0
  1803  0027B4  2028               	addwfc	??_taxa_serial+1,w,c
  1804  0027B6  6E2C               	movwf	(??_taxa_serial+5)& (0+255),c
  1805  0027B8  0E00               	movlw	0
  1806  0027BA  2029               	addwfc	??_taxa_serial+2,w,c
  1807  0027BC  6E2D               	movwf	(??_taxa_serial+6)& (0+255),c
  1808  0027BE  0E00               	movlw	0
  1809  0027C0  202A               	addwfc	??_taxa_serial+3,w,c
  1810  0027C2  6E2E               	movwf	(??_taxa_serial+7)& (0+255),c
  1811  0027C4  0EFF               	movlw	255
  1812  0027C6  242B               	addwf	??_taxa_serial+4,w,c
  1813  0027C8  6E2F               	movwf	taxa_serial@baud_sanusb,c
  1814  0027CA  0EFF               	movlw	255
  1815  0027CC  202C               	addwfc	??_taxa_serial+5,w,c
  1816  0027CE  6E30               	movwf	taxa_serial@baud_sanusb+1,c
  1817  0027D0  0EFF               	movlw	255
  1818  0027D2  202D               	addwfc	??_taxa_serial+6,w,c
  1819  0027D4  6E31               	movwf	taxa_serial@baud_sanusb+2,c
  1820  0027D6  0EFF               	movlw	255
  1821  0027D8  202E               	addwfc	??_taxa_serial+7,w,c
  1822  0027DA  6E32               	movwf	taxa_serial@baud_sanusb+3,c
  1823                           
  1824                           ;SanUSB1X.h: 503: SPBRGH = (unsigned char)(baud_sanusb >> 8);
  1825  0027DC  C030  FFB0         	movff	taxa_serial@baud_sanusb+1,4016	;volatile
  1826                           
  1827                           ;SanUSB1X.h: 504: SPBRG = (unsigned char)baud_sanusb; }
  1828  0027E0  C02F  FFAF         	movff	taxa_serial@baud_sanusb,4015	;volatile
  1829  0027E4  0012               	return	
  1830  0027E6                     __end_of_taxa_serial:
  1831                           	opt stack 0
  1832                           tblptru	equ	0xFF8
  1833                           tblptrh	equ	0xFF7
  1834                           tblptrl	equ	0xFF6
  1835                           tablat	equ	0xFF5
  1836                           prodh	equ	0xFF4
  1837                           prodl	equ	0xFF3
  1838                           intcon	equ	0xFF2
  1839                           postinc0	equ	0xFEE
  1840                           wreg	equ	0xFE8
  1841                           postdec1	equ	0xFE5
  1842                           fsr1l	equ	0xFE1
  1843                           indf2	equ	0xFDF
  1844                           postinc2	equ	0xFDE
  1845                           postdec2	equ	0xFDD
  1846                           fsr2h	equ	0xFDA
  1847                           fsr2l	equ	0xFD9
  1848                           status	equ	0xFD8
  1849                           
  1850 ;; *************** function ___lldiv *****************
  1851 ;; Defined at:
  1852 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lldiv.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  dividend        4   20[COMRAM] unsigned long 
  1855 ;;  divisor         4   24[COMRAM] unsigned long 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  quotient        4   29[COMRAM] unsigned long 
  1858 ;;  counter         1   33[COMRAM] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  4   20[COMRAM] unsigned long 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1868 ;;      Params:         8       0       0       0       0       0       0       0       0
  1869 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1870 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1871 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1872 ;;Total ram usage:       14 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    2
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_taxa_serial
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text4
  1883  0026E2                     __ptext4:
  1884                           	opt stack 0
  1885  0026E2                     ___lldiv:
  1886                           	opt stack 27
  1887                           
  1888                           ;incstack = 0
  1889  0026E2  0E00               	movlw	0
  1890  0026E4  6E1E               	movwf	___lldiv@quotient,c
  1891  0026E6  0E00               	movlw	0
  1892  0026E8  6E1F               	movwf	___lldiv@quotient+1,c
  1893  0026EA  0E00               	movlw	0
  1894  0026EC  6E20               	movwf	___lldiv@quotient+2,c
  1895  0026EE  0E00               	movlw	0
  1896  0026F0  6E21               	movwf	___lldiv@quotient+3,c
  1897  0026F2  501C               	movf	___lldiv@divisor+3,w,c
  1898  0026F4  1019               	iorwf	___lldiv@divisor,w,c
  1899  0026F6  101A               	iorwf	___lldiv@divisor+1,w,c
  1900  0026F8  101B               	iorwf	___lldiv@divisor+2,w,c
  1901  0026FA  B4D8               	btfsc	status,2,c
  1902  0026FC  D02C               	goto	l1134
  1903  0026FE  6E1D               	movwf	??___lldiv& (0+255),c
  1904  002700  0E01               	movlw	1
  1905  002702  6E22               	movwf	___lldiv@counter,c
  1906  002704  501D               	movf	??___lldiv& (0+255),w,c
  1907  002706  D006               	goto	l4439
  1908  002708                     l4437:
  1909  002708  90D8               	bcf	status,0,c
  1910  00270A  3619               	rlcf	___lldiv@divisor,f,c
  1911  00270C  361A               	rlcf	___lldiv@divisor+1,f,c
  1912  00270E  361B               	rlcf	___lldiv@divisor+2,f,c
  1913  002710  361C               	rlcf	___lldiv@divisor+3,f,c
  1914  002712  2A22               	incf	___lldiv@counter,f,c
  1915  002714                     l4439:
  1916  002714  AE1C               	btfss	___lldiv@divisor+3,7,c
  1917  002716  D7F8               	goto	l4437
  1918  002718                     l4441:
  1919  002718  90D8               	bcf	status,0,c
  1920  00271A  361E               	rlcf	___lldiv@quotient,f,c
  1921  00271C  361F               	rlcf	___lldiv@quotient+1,f,c
  1922  00271E  3620               	rlcf	___lldiv@quotient+2,f,c
  1923  002720  3621               	rlcf	___lldiv@quotient+3,f,c
  1924  002722  5019               	movf	___lldiv@divisor,w,c
  1925  002724  5C15               	subwf	___lldiv@dividend,w,c
  1926  002726  501A               	movf	___lldiv@divisor+1,w,c
  1927  002728  5816               	subwfb	___lldiv@dividend+1,w,c
  1928  00272A  501B               	movf	___lldiv@divisor+2,w,c
  1929  00272C  5817               	subwfb	___lldiv@dividend+2,w,c
  1930  00272E  501C               	movf	___lldiv@divisor+3,w,c
  1931  002730  5818               	subwfb	___lldiv@dividend+3,w,c
  1932  002732  A0D8               	btfss	status,0,c
  1933  002734  D009               	goto	l4449
  1934  002736  5019               	movf	___lldiv@divisor,w,c
  1935  002738  5E15               	subwf	___lldiv@dividend,f,c
  1936  00273A  501A               	movf	___lldiv@divisor+1,w,c
  1937  00273C  5A16               	subwfb	___lldiv@dividend+1,f,c
  1938  00273E  501B               	movf	___lldiv@divisor+2,w,c
  1939  002740  5A17               	subwfb	___lldiv@dividend+2,f,c
  1940  002742  501C               	movf	___lldiv@divisor+3,w,c
  1941  002744  5A18               	subwfb	___lldiv@dividend+3,f,c
  1942  002746  801E               	bsf	___lldiv@quotient,0,c
  1943  002748                     l4449:
  1944  002748  90D8               	bcf	status,0,c
  1945  00274A  321C               	rrcf	___lldiv@divisor+3,f,c
  1946  00274C  321B               	rrcf	___lldiv@divisor+2,f,c
  1947  00274E  321A               	rrcf	___lldiv@divisor+1,f,c
  1948  002750  3219               	rrcf	___lldiv@divisor,f,c
  1949  002752  2E22               	decfsz	___lldiv@counter,f,c
  1950  002754  D7E1               	goto	l4441
  1951  002756                     l1134:
  1952  002756  C01E  F015         	movff	___lldiv@quotient,?___lldiv
  1953  00275A  C01F  F016         	movff	___lldiv@quotient+1,?___lldiv+1
  1954  00275E  C020  F017         	movff	___lldiv@quotient+2,?___lldiv+2
  1955  002762  C021  F018         	movff	___lldiv@quotient+3,?___lldiv+3
  1956  002766  0012               	return	
  1957  002768                     __end_of___lldiv:
  1958                           	opt stack 0
  1959                           tblptru	equ	0xFF8
  1960                           tblptrh	equ	0xFF7
  1961                           tblptrl	equ	0xFF6
  1962                           tablat	equ	0xFF5
  1963                           prodh	equ	0xFF4
  1964                           prodl	equ	0xFF3
  1965                           intcon	equ	0xFF2
  1966                           postinc0	equ	0xFEE
  1967                           wreg	equ	0xFE8
  1968                           postdec1	equ	0xFE5
  1969                           fsr1l	equ	0xFE1
  1970                           indf2	equ	0xFDF
  1971                           postinc2	equ	0xFDE
  1972                           postdec2	equ	0xFDD
  1973                           fsr2h	equ	0xFDA
  1974                           fsr2l	equ	0xFD9
  1975                           status	equ	0xFD8
  1976                           
  1977 ;; *************** function _strtok *****************
  1978 ;; Defined at:
  1979 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\strtok.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  s1              2   33[COMRAM] PTR unsigned char 
  1982 ;;		 -> STR_3(2), STR_2(2), NULL(0), recv(64), 
  1983 ;;  s2              2   35[COMRAM] PTR const unsigned char 
  1984 ;;		 -> STR_3(2), STR_2(2), 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  2   33[COMRAM] PTR unsigned char 
  1989 ;; Registers used:
  1990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1996 ;;      Params:         4       0       0       0       0       0       0       0       0
  1997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1999 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2000 ;;Total ram usage:        4 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; Hardware stack levels required when called:    4
  2003 ;; This function calls:
  2004 ;;		_strcspn
  2005 ;;		_strspn
  2006 ;; This function is called by:
  2007 ;;		_main
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text5
  2012  002072                     __ptext5:
  2013                           	opt stack 0
  2014  002072                     _strtok:
  2015                           	opt stack 26
  2016                           
  2017                           ;incstack = 0
  2018  002072  5023               	movf	strtok@s1+1,w,c
  2019  002074  1022               	iorwf	strtok@s1,w,c
  2020  002076  A4D8               	btfss	status,2,c
  2021  002078  D004               	goto	l1272
  2022  00207A  C044  F023         	movff	strtok@sp+1,strtok@s1+1
  2023  00207E  C043  F022         	movff	strtok@sp,strtok@s1
  2024  002082                     l1272:
  2025  002082  5023               	movf	strtok@s1+1,w,c
  2026  002084  1022               	iorwf	strtok@s1,w,c
  2027  002086  A4D8               	btfss	status,2,c
  2028  002088  D005               	goto	l4749
  2029  00208A  0E00               	movlw	0
  2030  00208C  6E23               	movwf	?_strtok+1,c
  2031  00208E  0E00               	movlw	0
  2032  002090  6E22               	movwf	?_strtok,c
  2033  002092  D06A               	goto	l1274
  2034  002094                     l4749:
  2035  002094  C023  F01C         	movff	strtok@s1+1,strspn@s1+1
  2036  002098  C022  F01B         	movff	strtok@s1,strspn@s1
  2037  00209C  C025  F01E         	movff	strtok@s2+1,strspn@s2+1
  2038  0020A0  C024  F01D         	movff	strtok@s2,strspn@s2
  2039  0020A4  ECF3  F013         	call	_strspn	;wreg free
  2040  0020A8  501B               	movf	?_strspn,w,c
  2041  0020AA  2622               	addwf	strtok@s1,f,c
  2042  0020AC  501C               	movf	?_strspn+1,w,c
  2043  0020AE  2223               	addwfc	strtok@s1+1,f,c
  2044  0020B0  C022  FFF6         	movff	strtok@s1,tblptrl
  2045  0020B4  C023  FFF7         	movff	strtok@s1+1,tblptrh
  2046  0020B8  6AF8               	clrf	tblptru,c
  2047  0020BA  0E07               	movlw	(high __ramtop+-1)
  2048  0020BC  64F7               	cpfsgt	tblptrh,c
  2049  0020BE  D003               	bra	u3717
  2050  0020C0  0008               	tblrd		*
  2051  0020C2  50F5               	movf	tablat,w,c
  2052  0020C4  D005               	bra	u3710
  2053  0020C6                     u3717:
  2054  0020C6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2055  0020CA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2056  0020CE  50EF               	movf	indf0,w,c
  2057  0020D0                     u3710:
  2058  0020D0  0900               	iorlw	0
  2059  0020D2  A4D8               	btfss	status,2,c
  2060  0020D4  D009               	goto	l4757
  2061  0020D6  0E00               	movlw	0
  2062  0020D8  6E44               	movwf	strtok@sp+1,c
  2063  0020DA  0E00               	movlw	0
  2064  0020DC  6E43               	movwf	strtok@sp,c
  2065  0020DE  C044  F023         	movff	strtok@sp+1,?_strtok+1
  2066  0020E2  C043  F022         	movff	strtok@sp,?_strtok
  2067  0020E6  D040               	goto	l1274
  2068  0020E8                     l4757:
  2069  0020E8  C023  F01C         	movff	strtok@s1+1,strcspn@s1+1
  2070  0020EC  C022  F01B         	movff	strtok@s1,strcspn@s1
  2071  0020F0  C025  F01E         	movff	strtok@s2+1,strcspn@s2+1
  2072  0020F4  C024  F01D         	movff	strtok@s2,strcspn@s2
  2073  0020F8  EC32  F014         	call	_strcspn	;wreg free
  2074  0020FC  501B               	movf	?_strcspn,w,c
  2075  0020FE  2422               	addwf	strtok@s1,w,c
  2076  002100  6E43               	movwf	strtok@sp,c
  2077  002102  501C               	movf	?_strcspn+1,w,c
  2078  002104  2023               	addwfc	strtok@s1+1,w,c
  2079  002106  6E44               	movwf	strtok@sp+1,c
  2080  002108  C043  FFF6         	movff	strtok@sp,tblptrl
  2081  00210C  C044  FFF7         	movff	strtok@sp+1,tblptrh
  2082  002110  6AF8               	clrf	tblptru,c
  2083  002112  0E07               	movlw	(high __ramtop+-1)
  2084  002114  64F7               	cpfsgt	tblptrh,c
  2085  002116  D003               	bra	u3737
  2086  002118  0008               	tblrd		*
  2087  00211A  50F5               	movf	tablat,w,c
  2088  00211C  D005               	bra	u3730
  2089  00211E                     u3737:
  2090  00211E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2091  002122  CFF7 FFEA          	movff	tblptrh,fsr0h
  2092  002126  50EF               	movf	indf0,w,c
  2093  002128                     u3730:
  2094  002128  0900               	iorlw	0
  2095  00212A  B4D8               	btfsc	status,2,c
  2096  00212C  D015               	goto	l4765
  2097  00212E  C043  FFF6         	movff	strtok@sp,tblptrl
  2098  002132  C044  FFF7         	movff	strtok@sp+1,tblptrh
  2099  002136  6AF8               	clrf	tblptru,c
  2100  002138  0E07               	movlw	(high __ramtop+-1)
  2101  00213A  64F7               	cpfsgt	tblptrh,c
  2102  00213C  D004               	bra	u3757
  2103  00213E  0E00               	movlw	0
  2104  002140  6EF5               	movwf	tablat,c
  2105  002142  000C               	tblwt		*
  2106  002144  D006               	bra	u3750
  2107  002146                     u3757:
  2108  002146  CFF6 FFE9          	movff	tblptrl,fsr0l
  2109  00214A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2110  00214E  0E00               	movlw	0
  2111  002150  6EEF               	movwf	indf0,c
  2112  002152                     u3750:
  2113  002152  4A43               	infsnz	strtok@sp,f,c
  2114  002154  2A44               	incf	strtok@sp+1,f,c
  2115  002156  D004               	goto	l1277
  2116  002158                     l4765:
  2117  002158  0E00               	movlw	0
  2118  00215A  6E44               	movwf	strtok@sp+1,c
  2119  00215C  0E00               	movlw	0
  2120  00215E  6E43               	movwf	strtok@sp,c
  2121  002160                     l1277:
  2122  002160  C023  F023         	movff	strtok@s1+1,?_strtok+1
  2123  002164  C022  F022         	movff	strtok@s1,?_strtok
  2124  002168                     l1274:
  2125  002168  0012               	return	
  2126  00216A                     __end_of_strtok:
  2127                           	opt stack 0
  2128                           tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           prodh	equ	0xFF4
  2133                           prodl	equ	0xFF3
  2134                           intcon	equ	0xFF2
  2135                           indf0	equ	0xFEF
  2136                           postinc0	equ	0xFEE
  2137                           fsr0h	equ	0xFEA
  2138                           fsr0l	equ	0xFE9
  2139                           wreg	equ	0xFE8
  2140                           postdec1	equ	0xFE5
  2141                           fsr1l	equ	0xFE1
  2142                           indf2	equ	0xFDF
  2143                           postinc2	equ	0xFDE
  2144                           postdec2	equ	0xFDD
  2145                           fsr2h	equ	0xFDA
  2146                           fsr2l	equ	0xFD9
  2147                           status	equ	0xFD8
  2148                           
  2149 ;; *************** function _strspn *****************
  2150 ;; Defined at:
  2151 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\strspn.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  s1              2   26[COMRAM] PTR const unsigned char 
  2154 ;;		 -> STR_3(2), STR_2(2), NULL(0), recv(64), 
  2155 ;;  s2              2   28[COMRAM] PTR const unsigned char 
  2156 ;;		 -> STR_3(2), STR_2(2), 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  i               2   31[COMRAM] unsigned int 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  2   26[COMRAM] unsigned int 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2168 ;;      Params:         4       0       0       0       0       0       0       0       0
  2169 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2170 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2171 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2172 ;;Total ram usage:        7 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:    3
  2175 ;; This function calls:
  2176 ;;		_strchr
  2177 ;; This function is called by:
  2178 ;;		_strtok
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text6
  2183  0027E6                     __ptext6:
  2184                           	opt stack 0
  2185  0027E6                     _strspn:
  2186                           	opt stack 26
  2187                           
  2188                           ;incstack = 0
  2189  0027E6  0E00               	movlw	0
  2190  0027E8  6E21               	movwf	strspn@i+1,c
  2191  0027EA  0E00               	movlw	0
  2192  0027EC  6E20               	movwf	strspn@i,c
  2193  0027EE  D004               	goto	l4513
  2194  0027F0                     l4511:
  2195  0027F0  4A1B               	infsnz	strspn@s1,f,c
  2196  0027F2  2A1C               	incf	strspn@s1+1,f,c
  2197  0027F4  4A20               	infsnz	strspn@i,f,c
  2198  0027F6  2A21               	incf	strspn@i+1,f,c
  2199  0027F8                     l4513:
  2200  0027F8  C01B  FFF6         	movff	strspn@s1,tblptrl
  2201  0027FC  C01C  FFF7         	movff	strspn@s1+1,tblptrh
  2202  002800  6AF8               	clrf	tblptru,c
  2203  002802  0E07               	movlw	(high __ramtop+-1)
  2204  002804  64F7               	cpfsgt	tblptrh,c
  2205  002806  D003               	bra	u3467
  2206  002808  0008               	tblrd		*
  2207  00280A  50F5               	movf	tablat,w,c
  2208  00280C  D005               	bra	u3460
  2209  00280E                     u3467:
  2210  00280E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2211  002812  CFF7 FFEA          	movff	tblptrh,fsr0h
  2212  002816  50EF               	movf	indf0,w,c
  2213  002818                     u3460:
  2214  002818  0900               	iorlw	0
  2215  00281A  B4D8               	btfsc	status,2,c
  2216  00281C  D01E               	goto	l1314
  2217  00281E  C01E  F016         	movff	strspn@s2+1,strchr@ptr+1
  2218  002822  C01D  F015         	movff	strspn@s2,strchr@ptr
  2219  002826  C01B  FFF6         	movff	strspn@s1,tblptrl
  2220  00282A  C01C  FFF7         	movff	strspn@s1+1,tblptrh
  2221  00282E  6AF8               	clrf	tblptru,c
  2222  002830  0E07               	movlw	(high __ramtop+-1)
  2223  002832  64F7               	cpfsgt	tblptrh,c
  2224  002834  D003               	bra	u3487
  2225  002836  0008               	tblrd		*
  2226  002838  50F5               	movf	tablat,w,c
  2227  00283A  D005               	bra	u3480
  2228  00283C                     u3487:
  2229  00283C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2230  002840  CFF7 FFEA          	movff	tblptrh,fsr0h
  2231  002844  50EF               	movf	indf0,w,c
  2232  002846                     u3480:
  2233  002846  6E1F               	movwf	??_strspn& (0+255),c
  2234  002848  501F               	movf	??_strspn,w,c
  2235  00284A  6E17               	movwf	strchr@chr,c
  2236  00284C  6A18               	clrf	strchr@chr+1,c
  2237  00284E  ECE2  F014         	call	_strchr	;wreg free
  2238  002852  5016               	movf	?_strchr+1,w,c
  2239  002854  1015               	iorwf	?_strchr,w,c
  2240  002856  A4D8               	btfss	status,2,c
  2241  002858  D7CB               	goto	l4511
  2242  00285A                     l1314:
  2243  00285A  C020  F01B         	movff	strspn@i,?_strspn
  2244  00285E  C021  F01C         	movff	strspn@i+1,?_strspn+1
  2245  002862  0012               	return	
  2246  002864                     __end_of_strspn:
  2247                           	opt stack 0
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           prodh	equ	0xFF4
  2253                           prodl	equ	0xFF3
  2254                           intcon	equ	0xFF2
  2255                           indf0	equ	0xFEF
  2256                           postinc0	equ	0xFEE
  2257                           fsr0h	equ	0xFEA
  2258                           fsr0l	equ	0xFE9
  2259                           wreg	equ	0xFE8
  2260                           postdec1	equ	0xFE5
  2261                           fsr1l	equ	0xFE1
  2262                           indf2	equ	0xFDF
  2263                           postinc2	equ	0xFDE
  2264                           postdec2	equ	0xFDD
  2265                           fsr2h	equ	0xFDA
  2266                           fsr2l	equ	0xFD9
  2267                           status	equ	0xFD8
  2268                           
  2269 ;; *************** function _strcspn *****************
  2270 ;; Defined at:
  2271 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\strcspn.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  s1              2   26[COMRAM] PTR const unsigned char 
  2274 ;;		 -> STR_3(2), STR_2(2), NULL(0), recv(64), 
  2275 ;;  s2              2   28[COMRAM] PTR const unsigned char 
  2276 ;;		 -> STR_3(2), STR_2(2), 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  i               2   31[COMRAM] unsigned int 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  2   26[COMRAM] unsigned int 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2288 ;;      Params:         4       0       0       0       0       0       0       0       0
  2289 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2290 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2291 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2292 ;;Total ram usage:        7 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    3
  2295 ;; This function calls:
  2296 ;;		_strchr
  2297 ;; This function is called by:
  2298 ;;		_strtok
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text7
  2303  002864                     __ptext7:
  2304                           	opt stack 0
  2305  002864                     _strcspn:
  2306                           	opt stack 26
  2307                           
  2308                           ;incstack = 0
  2309  002864  0E00               	movlw	0
  2310  002866  6E21               	movwf	strcspn@i+1,c
  2311  002868  0E00               	movlw	0
  2312  00286A  6E20               	movwf	strcspn@i,c
  2313  00286C  D004               	goto	l4521
  2314  00286E                     l4519:
  2315  00286E  4A1B               	infsnz	strcspn@s1,f,c
  2316  002870  2A1C               	incf	strcspn@s1+1,f,c
  2317  002872  4A20               	infsnz	strcspn@i,f,c
  2318  002874  2A21               	incf	strcspn@i+1,f,c
  2319  002876                     l4521:
  2320  002876  C01B  FFF6         	movff	strcspn@s1,tblptrl
  2321  00287A  C01C  FFF7         	movff	strcspn@s1+1,tblptrh
  2322  00287E  6AF8               	clrf	tblptru,c
  2323  002880  0E07               	movlw	(high __ramtop+-1)
  2324  002882  64F7               	cpfsgt	tblptrh,c
  2325  002884  D003               	bra	u3507
  2326  002886  0008               	tblrd		*
  2327  002888  50F5               	movf	tablat,w,c
  2328  00288A  D005               	bra	u3500
  2329  00288C                     u3507:
  2330  00288C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2331  002890  CFF7 FFEA          	movff	tblptrh,fsr0h
  2332  002894  50EF               	movf	indf0,w,c
  2333  002896                     u3500:
  2334  002896  0900               	iorlw	0
  2335  002898  B4D8               	btfsc	status,2,c
  2336  00289A  D01E               	goto	l1295
  2337  00289C  C01E  F016         	movff	strcspn@s2+1,strchr@ptr+1
  2338  0028A0  C01D  F015         	movff	strcspn@s2,strchr@ptr
  2339  0028A4  C01B  FFF6         	movff	strcspn@s1,tblptrl
  2340  0028A8  C01C  FFF7         	movff	strcspn@s1+1,tblptrh
  2341  0028AC  6AF8               	clrf	tblptru,c
  2342  0028AE  0E07               	movlw	(high __ramtop+-1)
  2343  0028B0  64F7               	cpfsgt	tblptrh,c
  2344  0028B2  D003               	bra	u3527
  2345  0028B4  0008               	tblrd		*
  2346  0028B6  50F5               	movf	tablat,w,c
  2347  0028B8  D005               	bra	u3520
  2348  0028BA                     u3527:
  2349  0028BA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2350  0028BE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2351  0028C2  50EF               	movf	indf0,w,c
  2352  0028C4                     u3520:
  2353  0028C4  6E1F               	movwf	??_strcspn& (0+255),c
  2354  0028C6  501F               	movf	??_strcspn,w,c
  2355  0028C8  6E17               	movwf	strchr@chr,c
  2356  0028CA  6A18               	clrf	strchr@chr+1,c
  2357  0028CC  ECE2  F014         	call	_strchr	;wreg free
  2358  0028D0  5016               	movf	?_strchr+1,w,c
  2359  0028D2  1015               	iorwf	?_strchr,w,c
  2360  0028D4  B4D8               	btfsc	status,2,c
  2361  0028D6  D7CB               	goto	l4519
  2362  0028D8                     l1295:
  2363  0028D8  C020  F01B         	movff	strcspn@i,?_strcspn
  2364  0028DC  C021  F01C         	movff	strcspn@i+1,?_strcspn+1
  2365  0028E0  0012               	return	
  2366  0028E2                     __end_of_strcspn:
  2367                           	opt stack 0
  2368                           tblptru	equ	0xFF8
  2369                           tblptrh	equ	0xFF7
  2370                           tblptrl	equ	0xFF6
  2371                           tablat	equ	0xFF5
  2372                           prodh	equ	0xFF4
  2373                           prodl	equ	0xFF3
  2374                           intcon	equ	0xFF2
  2375                           indf0	equ	0xFEF
  2376                           postinc0	equ	0xFEE
  2377                           fsr0h	equ	0xFEA
  2378                           fsr0l	equ	0xFE9
  2379                           wreg	equ	0xFE8
  2380                           postdec1	equ	0xFE5
  2381                           fsr1l	equ	0xFE1
  2382                           indf2	equ	0xFDF
  2383                           postinc2	equ	0xFDE
  2384                           postdec2	equ	0xFDD
  2385                           fsr2h	equ	0xFDA
  2386                           fsr2l	equ	0xFD9
  2387                           status	equ	0xFD8
  2388                           
  2389 ;; *************** function _strstr *****************
  2390 ;; Defined at:
  2391 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\strstr.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  s1              2   35[COMRAM] PTR const unsigned char 
  2394 ;;		 -> STR_3(2), STR_2(2), NULL(0), recv(64), 
  2395 ;;  s2              2   37[COMRAM] PTR const unsigned char 
  2396 ;;		 -> STR_9(7), STR_7(8), STR_5(12), STR_4(3), 
  2397 ;;		 -> STR_1(6), 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  2   35[COMRAM] PTR unsigned char 
  2402 ;; Registers used:
  2403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2409 ;;      Params:         4       0       0       0       0       0       0       0       0
  2410 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2412 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2413 ;;Total ram usage:        4 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    3
  2416 ;; This function calls:
  2417 ;;		_strchr
  2418 ;;		_strlen
  2419 ;;		_strncmp
  2420 ;; This function is called by:
  2421 ;;		_main
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text8
  2426  002518                     __ptext8:
  2427                           	opt stack 0
  2428  002518                     _strstr:
  2429                           	opt stack 27
  2430                           
  2431                           ;incstack = 0
  2432  002518  D031               	goto	l4733
  2433  00251A                     l4725:
  2434  00251A  C025  F01C         	movff	strstr@s1+1,strncmp@s1+1
  2435  00251E  C024  F01B         	movff	strstr@s1,strncmp@s1
  2436  002522  C027  F01E         	movff	strstr@s2+1,strncmp@s2+1
  2437  002526  C026  F01D         	movff	strstr@s2,strncmp@s2
  2438  00252A  C027  F016         	movff	strstr@s2+1,strlen@s+1
  2439  00252E  C026  F015         	movff	strstr@s2,strlen@s
  2440  002532  ECAA  F015         	call	_strlen	;wreg free
  2441  002536  C015  F01F         	movff	?_strlen,strncmp@len
  2442  00253A  C016  F020         	movff	?_strlen+1,strncmp@len+1
  2443  00253E  EC20  F011         	call	_strncmp	;wreg free
  2444  002542  501C               	movf	?_strncmp+1,w,c
  2445  002544  101B               	iorwf	?_strncmp,w,c
  2446  002546  A4D8               	btfss	status,2,c
  2447  002548  D005               	goto	l4731
  2448  00254A  C025  F025         	movff	strstr@s1+1,?_strstr+1
  2449  00254E  C024  F024         	movff	strstr@s1,?_strstr
  2450  002552  D02F               	goto	l1260
  2451  002554                     l4731:
  2452  002554  0E01               	movlw	1
  2453  002556  2424               	addwf	strstr@s1,w,c
  2454  002558  6E15               	movwf	strchr@ptr,c
  2455  00255A  0E00               	movlw	0
  2456  00255C  2025               	addwfc	strstr@s1+1,w,c
  2457  00255E  6E16               	movwf	strchr@ptr+1,c
  2458  002560  C026  FFF6         	movff	strstr@s2,tblptrl
  2459  002564  C027  FFF7         	movff	strstr@s2+1,tblptrh
  2460  002568  0008               	tblrd		*
  2461  00256A  50F5               	movf	tablat,w,c
  2462  00256C  6E17               	movwf	strchr@chr,c
  2463  00256E  6A18               	clrf	strchr@chr+1,c
  2464  002570  ECE2  F014         	call	_strchr	;wreg free
  2465  002574  C015  F024         	movff	?_strchr,strstr@s1
  2466  002578  C016  F025         	movff	?_strchr+1,strstr@s1+1
  2467  00257C                     l4733:
  2468  00257C  5025               	movf	strstr@s1+1,w,c
  2469  00257E  1024               	iorwf	strstr@s1,w,c
  2470  002580  B4D8               	btfsc	status,2,c
  2471  002582  D013               	goto	l4737
  2472  002584  C024  FFF6         	movff	strstr@s1,tblptrl
  2473  002588  C025  FFF7         	movff	strstr@s1+1,tblptrh
  2474  00258C  6AF8               	clrf	tblptru,c
  2475  00258E  0E07               	movlw	(high __ramtop+-1)
  2476  002590  64F7               	cpfsgt	tblptrh,c
  2477  002592  D003               	bra	u3677
  2478  002594  0008               	tblrd		*
  2479  002596  50F5               	movf	tablat,w,c
  2480  002598  D005               	bra	u3670
  2481  00259A                     u3677:
  2482  00259A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2483  00259E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2484  0025A2  50EF               	movf	indf0,w,c
  2485  0025A4                     u3670:
  2486  0025A4  0900               	iorlw	0
  2487  0025A6  A4D8               	btfss	status,2,c
  2488  0025A8  D7B8               	goto	l4725
  2489  0025AA                     l4737:
  2490  0025AA  0E00               	movlw	0
  2491  0025AC  6E25               	movwf	?_strstr+1,c
  2492  0025AE  0E00               	movlw	0
  2493  0025B0  6E24               	movwf	?_strstr,c
  2494  0025B2                     l1260:
  2495  0025B2  0012               	return	
  2496  0025B4                     __end_of_strstr:
  2497                           	opt stack 0
  2498                           tblptru	equ	0xFF8
  2499                           tblptrh	equ	0xFF7
  2500                           tblptrl	equ	0xFF6
  2501                           tablat	equ	0xFF5
  2502                           prodh	equ	0xFF4
  2503                           prodl	equ	0xFF3
  2504                           intcon	equ	0xFF2
  2505                           indf0	equ	0xFEF
  2506                           postinc0	equ	0xFEE
  2507                           fsr0h	equ	0xFEA
  2508                           fsr0l	equ	0xFE9
  2509                           wreg	equ	0xFE8
  2510                           postdec1	equ	0xFE5
  2511                           fsr1l	equ	0xFE1
  2512                           indf2	equ	0xFDF
  2513                           postinc2	equ	0xFDE
  2514                           postdec2	equ	0xFDD
  2515                           fsr2h	equ	0xFDA
  2516                           fsr2l	equ	0xFD9
  2517                           status	equ	0xFD8
  2518                           
  2519 ;; *************** function _strncmp *****************
  2520 ;; Defined at:
  2521 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\strncmp.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  s1              2   26[COMRAM] PTR const unsigned char 
  2524 ;;		 -> STR_3(2), STR_2(2), NULL(0), recv(64), 
  2525 ;;  s2              2   28[COMRAM] PTR const unsigned char 
  2526 ;;		 -> STR_9(7), STR_7(8), STR_5(12), STR_4(3), 
  2527 ;;		 -> STR_1(6), 
  2528 ;;  len             2   30[COMRAM] unsigned int 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  2   26[COMRAM] int 
  2533 ;; Registers used:
  2534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2540 ;;      Params:         6       0       0       0       0       0       0       0       0
  2541 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2542 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2543 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2544 ;;Total ram usage:        9 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    2
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_strstr
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text9
  2555  002240                     __ptext9:
  2556                           	opt stack 0
  2557  002240                     _strncmp:
  2558                           	opt stack 27
  2559                           
  2560                           ;incstack = 0
  2561  002240  D055               	goto	l4503
  2562  002242                     l4493:
  2563  002242  C01B  FFF6         	movff	strncmp@s1,tblptrl
  2564  002246  C01C  FFF7         	movff	strncmp@s1+1,tblptrh
  2565  00224A  6AF8               	clrf	tblptru,c
  2566  00224C  0E07               	movlw	(high __ramtop+-1)
  2567  00224E  64F7               	cpfsgt	tblptrh,c
  2568  002250  D003               	bra	u3407
  2569  002252  0008               	tblrd		*
  2570  002254  50F5               	movf	tablat,w,c
  2571  002256  D005               	bra	u3400
  2572  002258                     u3407:
  2573  002258  CFF6 FFE9          	movff	tblptrl,fsr0l
  2574  00225C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2575  002260  50EF               	movf	indf0,w,c
  2576  002262                     u3400:
  2577  002262  0900               	iorlw	0
  2578  002264  B4D8               	btfsc	status,2,c
  2579  002266  D01A               	goto	l4497
  2580  002268  C01D  FFF6         	movff	strncmp@s2,tblptrl
  2581  00226C  C01E  FFF7         	movff	strncmp@s2+1,tblptrh
  2582  002270  0008               	tblrd		*
  2583  002272  CFF5 F021          	movff	tablat,??_strncmp
  2584  002276  C01B  FFF6         	movff	strncmp@s1,tblptrl
  2585  00227A  C01C  FFF7         	movff	strncmp@s1+1,tblptrh
  2586  00227E  6AF8               	clrf	tblptru,c
  2587  002280  0E07               	movlw	(high __ramtop+-1)
  2588  002282  64F7               	cpfsgt	tblptrh,c
  2589  002284  D003               	bra	u3427
  2590  002286  0008               	tblrd		*
  2591  002288  50F5               	movf	tablat,w,c
  2592  00228A  D005               	bra	u3420
  2593  00228C                     u3427:
  2594  00228C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2595  002290  CFF7 FFEA          	movff	tblptrh,fsr0h
  2596  002294  50EF               	movf	indf0,w,c
  2597  002296                     u3420:
  2598  002296  1821               	xorwf	??_strncmp,w,c
  2599  002298  B4D8               	btfsc	status,2,c
  2600  00229A  D024               	goto	l4501
  2601  00229C                     l4497:
  2602  00229C  C01D  FFF6         	movff	strncmp@s2,tblptrl
  2603  0022A0  C01E  FFF7         	movff	strncmp@s2+1,tblptrh
  2604  0022A4  0008               	tblrd		*
  2605  0022A6  50F5               	movf	tablat,w,c
  2606  0022A8  6E21               	movwf	??_strncmp& (0+255),c
  2607  0022AA  6A22               	clrf	(??_strncmp+1)& (0+255),c
  2608  0022AC  1E21               	comf	??_strncmp,f,c
  2609  0022AE  1E22               	comf	??_strncmp+1,f,c
  2610  0022B0  4A21               	infsnz	??_strncmp,f,c
  2611  0022B2  2A22               	incf	??_strncmp+1,f,c
  2612  0022B4  C01B  FFF6         	movff	strncmp@s1,tblptrl
  2613  0022B8  C01C  FFF7         	movff	strncmp@s1+1,tblptrh
  2614  0022BC  6AF8               	clrf	tblptru,c
  2615  0022BE  0E07               	movlw	(high __ramtop+-1)
  2616  0022C0  64F7               	cpfsgt	tblptrh,c
  2617  0022C2  D003               	bra	u3447
  2618  0022C4  0008               	tblrd		*
  2619  0022C6  50F5               	movf	tablat,w,c
  2620  0022C8  D005               	bra	u3440
  2621  0022CA                     u3447:
  2622  0022CA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2623  0022CE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2624  0022D2  50EF               	movf	indf0,w,c
  2625  0022D4                     u3440:
  2626  0022D4  6E23               	movwf	(??_strncmp+2)& (0+255),c
  2627  0022D6  5023               	movf	??_strncmp+2,w,c
  2628  0022D8  2421               	addwf	??_strncmp,w,c
  2629  0022DA  6E1B               	movwf	?_strncmp,c
  2630  0022DC  0E00               	movlw	0
  2631  0022DE  2022               	addwfc	??_strncmp+1,w,c
  2632  0022E0  6E1C               	movwf	?_strncmp+1,c
  2633  0022E2  D010               	goto	l1304
  2634  0022E4                     l4501:
  2635  0022E4  4A1B               	infsnz	strncmp@s1,f,c
  2636  0022E6  2A1C               	incf	strncmp@s1+1,f,c
  2637  0022E8  4A1D               	infsnz	strncmp@s2,f,c
  2638  0022EA  2A1E               	incf	strncmp@s2+1,f,c
  2639  0022EC                     l4503:
  2640  0022EC  061F               	decf	strncmp@len,f,c
  2641  0022EE  A0D8               	btfss	status,0,c
  2642  0022F0  0620               	decf	strncmp@len+1,f,c
  2643  0022F2  281F               	incf	strncmp@len& (0+255),w,c
  2644  0022F4  B4D8               	btfsc	status,2,c
  2645  0022F6  2820               	incf	(strncmp@len+1)& (0+255),w,c
  2646  0022F8  A4D8               	btfss	status,2,c
  2647  0022FA  D7A3               	goto	l4493
  2648  0022FC  0E00               	movlw	0
  2649  0022FE  6E1C               	movwf	?_strncmp+1,c
  2650  002300  0E00               	movlw	0
  2651  002302  6E1B               	movwf	?_strncmp,c
  2652  002304                     l1304:
  2653  002304  0012               	return	
  2654  002306                     __end_of_strncmp:
  2655                           	opt stack 0
  2656                           tblptru	equ	0xFF8
  2657                           tblptrh	equ	0xFF7
  2658                           tblptrl	equ	0xFF6
  2659                           tablat	equ	0xFF5
  2660                           prodh	equ	0xFF4
  2661                           prodl	equ	0xFF3
  2662                           intcon	equ	0xFF2
  2663                           indf0	equ	0xFEF
  2664                           postinc0	equ	0xFEE
  2665                           fsr0h	equ	0xFEA
  2666                           fsr0l	equ	0xFE9
  2667                           wreg	equ	0xFE8
  2668                           postdec1	equ	0xFE5
  2669                           fsr1l	equ	0xFE1
  2670                           indf2	equ	0xFDF
  2671                           postinc2	equ	0xFDE
  2672                           postdec2	equ	0xFDD
  2673                           fsr2h	equ	0xFDA
  2674                           fsr2l	equ	0xFD9
  2675                           status	equ	0xFD8
  2676                           
  2677 ;; *************** function _strlen *****************
  2678 ;; Defined at:
  2679 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\strlen.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  s               2   20[COMRAM] PTR const unsigned char 
  2682 ;;		 -> STR_9(7), STR_7(8), STR_5(12), STR_4(3), 
  2683 ;;		 -> STR_1(6), device_id(8), 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  cp              2   24[COMRAM] PTR const unsigned char 
  2686 ;;		 -> STR_9(7), STR_7(8), STR_5(12), STR_4(3), 
  2687 ;;		 -> STR_1(6), device_id(8), 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  2   20[COMRAM] unsigned int 
  2690 ;; Registers used:
  2691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2697 ;;      Params:         2       0       0       0       0       0       0       0       0
  2698 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2699 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2700 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2701 ;;Total ram usage:        6 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    2
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_main
  2708 ;;		_strstr
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text10
  2713  002B54                     __ptext10:
  2714                           	opt stack 0
  2715  002B54                     _strlen:
  2716                           	opt stack 27
  2717                           
  2718                           ;incstack = 0
  2719  002B54  C016  F01A         	movff	strlen@s+1,strlen@cp+1
  2720  002B58  C015  F019         	movff	strlen@s,strlen@cp
  2721  002B5C  D002               	goto	l4373
  2722  002B5E                     l4371:
  2723  002B5E  4A19               	infsnz	strlen@cp,f,c
  2724  002B60  2A1A               	incf	strlen@cp+1,f,c
  2725  002B62                     l4373:
  2726  002B62  C019  FFF6         	movff	strlen@cp,tblptrl
  2727  002B66  C01A  FFF7         	movff	strlen@cp+1,tblptrh
  2728  002B6A  6AF8               	clrf	tblptru,c
  2729  002B6C  0E07               	movlw	(high __ramtop+-1)
  2730  002B6E  64F7               	cpfsgt	tblptrh,c
  2731  002B70  D003               	bra	u3207
  2732  002B72  0008               	tblrd		*
  2733  002B74  50F5               	movf	tablat,w,c
  2734  002B76  D005               	bra	u3200
  2735  002B78                     u3207:
  2736  002B78  CFF6 FFE9          	movff	tblptrl,fsr0l
  2737  002B7C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2738  002B80  50EF               	movf	indf0,w,c
  2739  002B82                     u3200:
  2740  002B82  0900               	iorlw	0
  2741  002B84  A4D8               	btfss	status,2,c
  2742  002B86  D7EB               	goto	l4371
  2743  002B88  C015  F017         	movff	strlen@s,??_strlen
  2744  002B8C  C016  F018         	movff	strlen@s+1,??_strlen+1
  2745  002B90  1E17               	comf	??_strlen,f,c
  2746  002B92  1E18               	comf	??_strlen+1,f,c
  2747  002B94  4A17               	infsnz	??_strlen,f,c
  2748  002B96  2A18               	incf	??_strlen+1,f,c
  2749  002B98  5019               	movf	strlen@cp,w,c
  2750  002B9A  2417               	addwf	??_strlen,w,c
  2751  002B9C  6E15               	movwf	?_strlen,c
  2752  002B9E  501A               	movf	strlen@cp+1,w,c
  2753  002BA0  2018               	addwfc	??_strlen+1,w,c
  2754  002BA2  6E16               	movwf	?_strlen+1,c
  2755  002BA4  0012               	return	
  2756  002BA6                     __end_of_strlen:
  2757                           	opt stack 0
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           prodh	equ	0xFF4
  2763                           prodl	equ	0xFF3
  2764                           intcon	equ	0xFF2
  2765                           indf0	equ	0xFEF
  2766                           postinc0	equ	0xFEE
  2767                           fsr0h	equ	0xFEA
  2768                           fsr0l	equ	0xFE9
  2769                           wreg	equ	0xFE8
  2770                           postdec1	equ	0xFE5
  2771                           fsr1l	equ	0xFE1
  2772                           indf2	equ	0xFDF
  2773                           postinc2	equ	0xFDE
  2774                           postdec2	equ	0xFDD
  2775                           fsr2h	equ	0xFDA
  2776                           fsr2l	equ	0xFD9
  2777                           status	equ	0xFD8
  2778                           
  2779 ;; *************** function _strchr *****************
  2780 ;; Defined at:
  2781 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\strchr.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  ptr             2   20[COMRAM] PTR const unsigned char 
  2784 ;;		 -> STR_3(2), STR_2(2), NULL(0), recv(64), 
  2785 ;;  chr             2   22[COMRAM] int 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  2   20[COMRAM] PTR unsigned char 
  2790 ;; Registers used:
  2791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2797 ;;      Params:         4       0       0       0       0       0       0       0       0
  2798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2799 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2800 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2801 ;;Total ram usage:        6 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    2
  2804 ;; This function calls:
  2805 ;;		Nothing
  2806 ;; This function is called by:
  2807 ;;		_main
  2808 ;;		_strstr
  2809 ;;		_strcspn
  2810 ;;		_strspn
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text11
  2815  0029C4                     __ptext11:
  2816                           	opt stack 0
  2817  0029C4                     _strchr:
  2818                           	opt stack 26
  2819  0029C4                     l1239:
  2820  0029C4  C015  FFF6         	movff	strchr@ptr,tblptrl
  2821  0029C8  C016  FFF7         	movff	strchr@ptr+1,tblptrh
  2822  0029CC  6AF8               	clrf	tblptru,c
  2823  0029CE  0E07               	movlw	(high __ramtop+-1)
  2824  0029D0  64F7               	cpfsgt	tblptrh,c
  2825  0029D2  D003               	bra	u3077
  2826  0029D4  0008               	tblrd		*
  2827  0029D6  50F5               	movf	tablat,w,c
  2828  0029D8  D005               	bra	u3070
  2829  0029DA                     u3077:
  2830  0029DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2831  0029DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2832  0029E2  50EF               	movf	indf0,w,c
  2833  0029E4                     u3070:
  2834  0029E4  1817               	xorwf	strchr@chr,w,c
  2835  0029E6  A4D8               	btfss	status,2,c
  2836  0029E8  D005               	goto	l4219
  2837  0029EA  C016  F016         	movff	strchr@ptr+1,?_strchr+1
  2838  0029EE  C015  F015         	movff	strchr@ptr,?_strchr
  2839  0029F2  D01D               	goto	l1241
  2840  0029F4                     l4219:
  2841  0029F4  5015               	movf	strchr@ptr,w,c
  2842  0029F6  6E19               	movwf	??_strchr& (0+255),c
  2843  0029F8  5016               	movf	strchr@ptr+1,w,c
  2844  0029FA  6E1A               	movwf	(??_strchr+1)& (0+255),c
  2845  0029FC  4A15               	infsnz	strchr@ptr,f,c
  2846  0029FE  2A16               	incf	strchr@ptr+1,f,c
  2847  002A00  C019  FFF6         	movff	??_strchr,tblptrl
  2848  002A04  C01A  FFF7         	movff	??_strchr+1,tblptrh
  2849  002A08  6AF8               	clrf	tblptru,c
  2850  002A0A  0E07               	movlw	(high __ramtop+-1)
  2851  002A0C  64F7               	cpfsgt	tblptrh,c
  2852  002A0E  D003               	bra	u3097
  2853  002A10  0008               	tblrd		*
  2854  002A12  50F5               	movf	tablat,w,c
  2855  002A14  D005               	bra	u3090
  2856  002A16                     u3097:
  2857  002A16  CFF6 FFE9          	movff	tblptrl,fsr0l
  2858  002A1A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2859  002A1E  50EF               	movf	indf0,w,c
  2860  002A20                     u3090:
  2861  002A20  0900               	iorlw	0
  2862  002A22  A4D8               	btfss	status,2,c
  2863  002A24  D7CF               	goto	l1239
  2864  002A26  0E00               	movlw	0
  2865  002A28  6E16               	movwf	?_strchr+1,c
  2866  002A2A  0E00               	movlw	0
  2867  002A2C  6E15               	movwf	?_strchr,c
  2868  002A2E                     l1241:
  2869  002A2E  0012               	return	
  2870  002A30                     __end_of_strchr:
  2871                           	opt stack 0
  2872                           tblptru	equ	0xFF8
  2873                           tblptrh	equ	0xFF7
  2874                           tblptrl	equ	0xFF6
  2875                           tablat	equ	0xFF5
  2876                           prodh	equ	0xFF4
  2877                           prodl	equ	0xFF3
  2878                           intcon	equ	0xFF2
  2879                           indf0	equ	0xFEF
  2880                           postinc0	equ	0xFEE
  2881                           fsr0h	equ	0xFEA
  2882                           fsr0l	equ	0xFE9
  2883                           wreg	equ	0xFE8
  2884                           postdec1	equ	0xFE5
  2885                           fsr1l	equ	0xFE1
  2886                           indf2	equ	0xFDF
  2887                           postinc2	equ	0xFDE
  2888                           postdec2	equ	0xFDD
  2889                           fsr2h	equ	0xFDA
  2890                           fsr2l	equ	0xFD9
  2891                           status	equ	0xFD8
  2892                           
  2893 ;; *************** function _sendsw *****************
  2894 ;; Defined at:
  2895 ;;		line 532 in file "SanUSB1X.h"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  st              2   21[COMRAM] PTR unsigned char 
  2898 ;;		 -> device_id(8), 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;		None               void
  2903 ;; Registers used:
  2904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2910 ;;      Params:         2       0       0       0       0       0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2912 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2913 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2914 ;;Total ram usage:        3 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    3
  2917 ;; This function calls:
  2918 ;;		_swputc
  2919 ;; This function is called by:
  2920 ;;		_main
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text12
  2925  002C6A                     __ptext12:
  2926                           	opt stack 0
  2927  002C6A                     _sendsw:
  2928                           	opt stack 27
  2929                           
  2930                           ;SanUSB1X.h: 533: for(k=0;st[k]!='\0';k++) {swputc(st[k]);}
  2931                           
  2932                           ;incstack = 0
  2933  002C6A  6E18               	movwf	??_sendsw& (0+255),c
  2934  002C6C  0E00               	movlw	0
  2935  002C6E  6E47               	movwf	_k,c
  2936  002C70  5018               	movf	??_sendsw& (0+255),w,c
  2937  002C72  D00C               	goto	l4653
  2938  002C74                     l4649:
  2939  002C74  5047               	movf	_k,w,c
  2940  002C76  0D01               	mullw	1
  2941  002C78  50F3               	movf	prodl,w,c
  2942  002C7A  2416               	addwf	sendsw@st,w,c
  2943  002C7C  6ED9               	movwf	fsr2l,c
  2944  002C7E  50F4               	movf	prodh,w,c
  2945  002C80  2017               	addwfc	sendsw@st+1,w,c
  2946  002C82  6EDA               	movwf	fsr2h,c
  2947  002C84  50DF               	movf	indf2,w,c
  2948  002C86  ECE7  F016         	call	_swputc
  2949  002C8A  2A47               	incf	_k,f,c
  2950  002C8C                     l4653:
  2951  002C8C  5047               	movf	_k,w,c
  2952  002C8E  0D01               	mullw	1
  2953  002C90  50F3               	movf	prodl,w,c
  2954  002C92  2416               	addwf	sendsw@st,w,c
  2955  002C94  6ED9               	movwf	fsr2l,c
  2956  002C96  50F4               	movf	prodh,w,c
  2957  002C98  2017               	addwfc	sendsw@st+1,w,c
  2958  002C9A  6EDA               	movwf	fsr2h,c
  2959  002C9C  50DF               	movf	indf2,w,c
  2960  002C9E  B4D8               	btfsc	status,2,c
  2961  002CA0  0012               	return	
  2962  002CA2  D7E8               	goto	l4649
  2963  002CA4                     __end_of_sendsw:
  2964                           	opt stack 0
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           prodh	equ	0xFF4
  2970                           prodl	equ	0xFF3
  2971                           intcon	equ	0xFF2
  2972                           indf0	equ	0xFEF
  2973                           postinc0	equ	0xFEE
  2974                           fsr0h	equ	0xFEA
  2975                           fsr0l	equ	0xFE9
  2976                           wreg	equ	0xFE8
  2977                           postdec1	equ	0xFE5
  2978                           fsr1l	equ	0xFE1
  2979                           indf2	equ	0xFDF
  2980                           postinc2	equ	0xFDE
  2981                           postdec2	equ	0xFDD
  2982                           fsr2h	equ	0xFDA
  2983                           fsr2l	equ	0xFD9
  2984                           status	equ	0xFD8
  2985                           
  2986 ;; *************** function _swputc *****************
  2987 ;; Defined at:
  2988 ;;		line 513 in file "SanUSB1X.h"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  c               1    wreg     unsigned char 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  c               1   20[COMRAM] unsigned char 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;		None               void
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3002 ;;      Params:         0       0       0       0       0       0       0       0       0
  3003 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3005 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3006 ;;Total ram usage:        1 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    2
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_sendsw
  3013 ;;		_sendrw
  3014 ;;		_sendnum
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text13
  3019  002DCE                     __ptext13:
  3020                           	opt stack 0
  3021  002DCE                     _swputc:
  3022                           	opt stack 27
  3023                           
  3024                           ;incstack = 0
  3025                           ;swputc@c stored from wreg
  3026  002DCE  CFE8 F015          	movff	wreg,swputc@c
  3027  002DD2                     l463:
  3028  002DD2  A2AC               	btfss	4012,1,c	;volatile
  3029  002DD4  D7FE               	goto	l463
  3030                           
  3031                           ;SanUSB1X.h: 516: TXREG=REG+c;
  3032  002DD6  5039               	movf	_REG,w,c
  3033  002DD8  2415               	addwf	swputc@c,w,c
  3034  002DDA  6EAD               	movwf	4013,c	;volatile
  3035  002DDC  0012               	return	
  3036  002DDE                     __end_of_swputc:
  3037                           	opt stack 0
  3038                           tblptru	equ	0xFF8
  3039                           tblptrh	equ	0xFF7
  3040                           tblptrl	equ	0xFF6
  3041                           tablat	equ	0xFF5
  3042                           prodh	equ	0xFF4
  3043                           prodl	equ	0xFF3
  3044                           intcon	equ	0xFF2
  3045                           indf0	equ	0xFEF
  3046                           postinc0	equ	0xFEE
  3047                           fsr0h	equ	0xFEA
  3048                           fsr0l	equ	0xFE9
  3049                           wreg	equ	0xFE8
  3050                           postdec1	equ	0xFE5
  3051                           fsr1l	equ	0xFE1
  3052                           indf2	equ	0xFDF
  3053                           postinc2	equ	0xFDE
  3054                           postdec2	equ	0xFDD
  3055                           fsr2h	equ	0xFDA
  3056                           fsr2l	equ	0xFD9
  3057                           status	equ	0xFD8
  3058                           
  3059 ;; *************** function _printf *****************
  3060 ;; Defined at:
  3061 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\doprnt.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  f               2   41[COMRAM] PTR const unsigned char 
  3064 ;;		 -> STR_8(16), STR_6(28), 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  _val            4    4[BANK0 ] struct .
  3067 ;;  ap              2    2[BANK0 ] PTR void [1]
  3068 ;;		 -> ?_printf(2), 
  3069 ;;  c               1    8[BANK0 ] char 
  3070 ;;  prec            1    1[BANK0 ] char 
  3071 ;;  flag            1    0[BANK0 ] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  2   41[COMRAM] int 
  3074 ;; Registers used:
  3075 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3081 ;;      Params:         6       0       0       0       0       0       0       0       0
  3082 ;;      Locals:         0       9       0       0       0       0       0       0       0
  3083 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3084 ;;      Totals:         8       9       0       0       0       0       0       0       0
  3085 ;;Total ram usage:       17 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    3
  3088 ;; This function calls:
  3089 ;;		___lwdiv
  3090 ;;		___lwmod
  3091 ;;		_putch
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text14
  3098  00147C                     __ptext14:
  3099                           	opt stack 0
  3100  00147C                     _printf:
  3101                           	opt stack 27
  3102                           
  3103                           ;doprnt.c: 466: va_list ap;
  3104                           ;doprnt.c: 499: signed char c;
  3105                           ;doprnt.c: 506: signed char prec;
  3106                           ;doprnt.c: 508: unsigned char flag;
  3107                           ;doprnt.c: 527: union {
  3108                           ;doprnt.c: 528: unsigned int _val;
  3109                           ;doprnt.c: 529: struct {
  3110                           ;doprnt.c: 530: const char * _cp;
  3111                           ;doprnt.c: 531: unsigned _len;
  3112                           ;doprnt.c: 532: } _str;
  3113                           ;doprnt.c: 533: } _val;
  3114                           ;doprnt.c: 542: *ap = __va_start();
  3115                           
  3116                           ;incstack = 0
  3117  00147C  0E00               	movlw	high (?_printf+2)
  3118  00147E  0100               	movlb	0	; () banked
  3119  001480  0100               	movlb	0	; () banked
  3120  001482  6FE9               	movwf	(printf@ap+1)& (0+255),b
  3121  001484  0E2C               	movlw	low (?_printf+2)
  3122  001486  0100               	movlb	0	; () banked
  3123  001488  0100               	movlb	0	; () banked
  3124  00148A  6FE8               	movwf	printf@ap& (0+255),b
  3125                           
  3126                           ;doprnt.c: 545: while(c = *f++) {
  3127  00148C  D109               	goto	l4861
  3128  00148E                     l4801:
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;doprnt.c: 547: if(c != '%')
  3132  00148E  0100               	movlb	0	; () banked
  3133  001490  0100               	movlb	0	; () banked
  3134  001492  51EE               	movf	printf@c& (0+255),w,b
  3135  001494  0A25               	xorlw	37
  3136  001496  B4D8               	btfsc	status,2,c
  3137  001498  D006               	goto	l4805
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;doprnt.c: 549: {
  3141                           ;doprnt.c: 550: (putch(c) );
  3142  00149A  0100               	movlb	0	; () banked
  3143  00149C  0100               	movlb	0	; () banked
  3144  00149E  51EE               	movf	printf@c& (0+255),w,b
  3145  0014A0  ECF6  F016         	call	_putch
  3146                           
  3147                           ;doprnt.c: 551: continue;
  3148  0014A4  D0FD               	goto	l4861
  3149  0014A6                     l4805:
  3150                           
  3151                           ;doprnt.c: 552: }
  3152                           ;doprnt.c: 557: flag = 0;
  3153  0014A6  6E30               	movwf	??_printf& (0+255),c
  3154  0014A8  0E00               	movlw	0
  3155  0014AA  0100               	movlb	0	; () banked
  3156  0014AC  0100               	movlb	0	; () banked
  3157  0014AE  6FE6               	movwf	printf@flag& (0+255),b
  3158  0014B0  5030               	movf	??_printf& (0+255),w,c
  3159                           
  3160                           ;doprnt.c: 644: switch(c = *f++) {
  3161  0014B2  D04E               	goto	l4823
  3162  0014B4                     l4807:
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  3166  0014B4  C0E8  FFD9         	movff	printf@ap,fsr2l
  3167  0014B8  C0E9  FFDA         	movff	printf@ap+1,fsr2h
  3168  0014BC  0100               	movlb	0	; () banked
  3169  0014BE  CFDE F0EA          	movff	postinc2,printf@_val
  3170  0014C2  0100               	movlb	0	; () banked
  3171  0014C4  CFDD F0EB          	movff	postdec2,printf@_val+1
  3172                           
  3173                           ; BSR set to: 0
  3174  0014C8  0E02               	movlw	2
  3175  0014CA  0100               	movlb	0	; () banked
  3176  0014CC  0100               	movlb	0	; () banked
  3177  0014CE  27E8               	addwf	printf@ap& (0+255),f,b
  3178  0014D0  0E00               	movlw	0
  3179  0014D2  0100               	movlb	0	; () banked
  3180  0014D4  23E9               	addwfc	(printf@ap+1)& (0+255),f,b
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;doprnt.c: 749: if(!_val._str._cp)
  3184  0014D6  0100               	movlb	0	; () banked
  3185  0014D8  0100               	movlb	0	; () banked
  3186  0014DA  51EB               	movf	(printf@_val+1)& (0+255),w,b
  3187  0014DC  11EA               	iorwf	printf@_val& (0+255),w,b
  3188  0014DE  A4D8               	btfss	status,2,c
  3189  0014E0  D021               	goto	l4819
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;doprnt.c: 750: _val._str._cp = "(null)";
  3193  0014E2  0E10               	movlw	high STR_10
  3194  0014E4  0100               	movlb	0	; () banked
  3195  0014E6  0100               	movlb	0	; () banked
  3196  0014E8  6FEB               	movwf	(printf@_val+1)& (0+255),b
  3197  0014EA  0E67               	movlw	low STR_10
  3198  0014EC  0100               	movlb	0	; () banked
  3199  0014EE  0100               	movlb	0	; () banked
  3200  0014F0  6FEA               	movwf	printf@_val& (0+255),b
  3201  0014F2  D018               	goto	l4819
  3202  0014F4                     l4815:
  3203                           
  3204                           ;doprnt.c: 787: (putch(*_val._str._cp++) );
  3205  0014F4  0100               	movlb	0	; () banked
  3206  0014F6  C0EA  FFF6         	movff	printf@_val,tblptrl
  3207  0014FA  0100               	movlb	0	; () banked
  3208  0014FC  C0EB  FFF7         	movff	printf@_val+1,tblptrh
  3209  001500  6AF8               	clrf	tblptru,c
  3210  001502  0E07               	movlw	(high __ramtop+-1)
  3211  001504  64F7               	cpfsgt	tblptrh,c
  3212  001506  D003               	bra	u3907
  3213  001508  0008               	tblrd		*
  3214  00150A  50F5               	movf	tablat,w,c
  3215  00150C  D005               	bra	u3900
  3216  00150E                     u3907:
  3217  00150E  CFF6 FFE9          	movff	tblptrl,fsr0l
  3218  001512  CFF7 FFEA          	movff	tblptrh,fsr0h
  3219  001516  50EF               	movf	indf0,w,c
  3220  001518                     u3900:
  3221  001518  ECF6  F016         	call	_putch
  3222  00151C  0100               	movlb	0	; () banked
  3223  00151E  0100               	movlb	0	; () banked
  3224  001520  4BEA               	infsnz	printf@_val& (0+255),f,b
  3225  001522  2BEB               	incf	(printf@_val+1)& (0+255),f,b
  3226  001524                     l4819:
  3227                           
  3228                           ; BSR set to: 0
  3229  001524  0100               	movlb	0	; () banked
  3230  001526  C0EA  FFF6         	movff	printf@_val,tblptrl
  3231  00152A  0100               	movlb	0	; () banked
  3232  00152C  C0EB  FFF7         	movff	printf@_val+1,tblptrh
  3233  001530  6AF8               	clrf	tblptru,c
  3234  001532  0E07               	movlw	(high __ramtop+-1)
  3235  001534  64F7               	cpfsgt	tblptrh,c
  3236  001536  D003               	bra	u3917
  3237  001538  0008               	tblrd		*
  3238  00153A  50F5               	movf	tablat,w,c
  3239  00153C  D005               	bra	u3910
  3240  00153E                     u3917:
  3241  00153E  CFF6 FFE9          	movff	tblptrl,fsr0l
  3242  001542  CFF7 FFEA          	movff	tblptrh,fsr0h
  3243  001546  50EF               	movf	indf0,w,c
  3244  001548                     u3910:
  3245  001548  0900               	iorlw	0
  3246  00154A  B4D8               	btfsc	status,2,c
  3247  00154C  D0A9               	goto	l4861
  3248  00154E  D7D2               	goto	l4815
  3249  001550                     l4823:
  3250  001550  C02A  FFF6         	movff	printf@f,tblptrl
  3251  001554  C02B  FFF7         	movff	printf@f+1,tblptrh
  3252  001558  4A2A               	infsnz	printf@f,f,c
  3253  00155A  2A2B               	incf	printf@f+1,f,c
  3254  00155C  0008               	tblrd		*
  3255  00155E  0100               	movlb	0	; () banked
  3256  001560  CFF5 F0EE          	movff	tablat,printf@c
  3257  001564  0100               	movlb	0	; () banked
  3258  001566  51EE               	movf	printf@c& (0+255),w,b
  3259                           
  3260                           ; Switch size 1, requested type "space"
  3261                           ; Number of cases is 4, Range of values is 0 to 115
  3262                           ; switch strategies available:
  3263                           ; Name         Instructions Cycles
  3264                           ; simple_byte           13     7 (average)
  3265                           ;	Chosen strategy is simple_byte
  3266  001568  0A00               	xorlw	0	; case 0
  3267  00156A  B4D8               	btfsc	status,2,c
  3268  00156C  D0A6               	goto	l677
  3269  00156E  0A64               	xorlw	100	; case 100
  3270  001570  B4D8               	btfsc	status,2,c
  3271  001572  D007               	goto	l4825
  3272  001574  0A0D               	xorlw	13	; case 105
  3273  001576  B4D8               	btfsc	status,2,c
  3274  001578  D004               	goto	l4825
  3275  00157A  0A1A               	xorlw	26	; case 115
  3276  00157C  B4D8               	btfsc	status,2,c
  3277  00157E  D79A               	goto	l4807
  3278  001580  D08F               	goto	l4861
  3279  001582                     l4825:
  3280                           
  3281                           ;doprnt.c: 1262: {
  3282                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3283  001582  C0E8  FFD9         	movff	printf@ap,fsr2l
  3284  001586  C0E9  FFDA         	movff	printf@ap+1,fsr2h
  3285  00158A  0100               	movlb	0	; () banked
  3286  00158C  CFDE F0EA          	movff	postinc2,printf@_val
  3287  001590  0100               	movlb	0	; () banked
  3288  001592  CFDD F0EB          	movff	postdec2,printf@_val+1
  3289                           
  3290                           ; BSR set to: 0
  3291  001596  0E02               	movlw	2
  3292  001598  0100               	movlb	0	; () banked
  3293  00159A  0100               	movlb	0	; () banked
  3294  00159C  27E8               	addwf	printf@ap& (0+255),f,b
  3295  00159E  0E00               	movlw	0
  3296  0015A0  0100               	movlb	0	; () banked
  3297  0015A2  23E9               	addwfc	(printf@ap+1)& (0+255),f,b
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3301  0015A4  0100               	movlb	0	; () banked
  3302  0015A6  0100               	movlb	0	; () banked
  3303  0015A8  51EB               	movf	(printf@_val+1)& (0+255),w,b
  3304  0015AA  0A80               	xorlw	128
  3305  0015AC  6EF3               	movwf	prodl,c
  3306  0015AE  0E80               	movlw	128
  3307  0015B0  5CF3               	subwf	prodl,w,c
  3308  0015B2  0E00               	movlw	0
  3309  0015B4  B4D8               	btfsc	status,2,c
  3310  0015B6  5DEA               	subwf	printf@_val& (0+255),w,b
  3311  0015B8  B0D8               	btfsc	status,0,c
  3312  0015BA  D00B               	goto	l4835
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;doprnt.c: 1271: flag |= 0x03;
  3316  0015BC  0E03               	movlw	3
  3317  0015BE  0100               	movlb	0	; () banked
  3318  0015C0  0100               	movlb	0	; () banked
  3319  0015C2  13E6               	iorwf	printf@flag& (0+255),f,b
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;doprnt.c: 1272: _val._val = -_val._val;
  3323  0015C4  0100               	movlb	0	; () banked
  3324  0015C6  0100               	movlb	0	; () banked
  3325  0015C8  6DEA               	negf	printf@_val& (0+255),b
  3326  0015CA  0100               	movlb	0	; () banked
  3327  0015CC  1FEB               	comf	(printf@_val+1)& (0+255),f,b
  3328  0015CE  B0D8               	btfsc	status,0,c
  3329  0015D0  2BEB               	incf	(printf@_val+1)& (0+255),f,b
  3330  0015D2                     l4835:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;doprnt.c: 1273: }
  3334                           ;doprnt.c: 1275: }
  3335                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3336  0015D2  6E30               	movwf	??_printf& (0+255),c
  3337  0015D4  0E01               	movlw	1
  3338  0015D6  0100               	movlb	0	; () banked
  3339  0015D8  0100               	movlb	0	; () banked
  3340  0015DA  6FEE               	movwf	printf@c& (0+255),b
  3341  0015DC  5030               	movf	??_printf& (0+255),w,c
  3342  0015DE                     
  3343                           ; BSR set to: 0
  3344  0015DE  0100               	movlb	0	; () banked
  3345  0015E0  0100               	movlb	0	; () banked
  3346  0015E2  51EE               	movf	printf@c& (0+255),w,b
  3347  0015E4  0A05               	xorlw	5
  3348  0015E6  B4D8               	btfsc	status,2,c
  3349  0015E8  D01E               	goto	l4849
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3353                           
  3354                           ; BSR set to: 0
  3355                           
  3356                           ; BSR set to: 0
  3357  0015EA  0100               	movlb	0	; () banked
  3358  0015EC  0100               	movlb	0	; () banked
  3359  0015EE  51EE               	movf	printf@c& (0+255),w,b
  3360  0015F0  0D02               	mullw	2
  3361  0015F2  0E1D               	movlw	low _dpowers
  3362  0015F4  24F3               	addwf	prodl,w,c
  3363  0015F6  6EF6               	movwf	tblptrl,c
  3364  0015F8  0E10               	movlw	high _dpowers
  3365  0015FA  20F4               	addwfc	prodh,w,c
  3366  0015FC  6EF7               	movwf	tblptrh,c
  3367  0015FE  0009               	tblrd		*+
  3368  001600  CFF5 F030          	movff	tablat,??_printf
  3369  001604  0009               	tblrd		*+
  3370  001606  CFF5 F031          	movff	tablat,??_printf+1
  3371  00160A  5030               	movf	??_printf,w,c
  3372  00160C  0100               	movlb	0	; () banked
  3373  00160E  0100               	movlb	0	; () banked
  3374  001610  5DEA               	subwf	printf@_val& (0+255),w,b
  3375  001612  5031               	movf	??_printf+1,w,c
  3376  001614  0100               	movlb	0	; () banked
  3377  001616  0100               	movlb	0	; () banked
  3378  001618  59EB               	subwfb	(printf@_val+1)& (0+255),w,b
  3379  00161A  A0D8               	btfss	status,0,c
  3380  00161C  D004               	goto	l4849
  3381                           
  3382                           ; BSR set to: 0
  3383                           
  3384                           ; BSR set to: 0
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;doprnt.c: 1316: break;
  3388  00161E  0100               	movlb	0	; () banked
  3389  001620  0100               	movlb	0	; () banked
  3390  001622  2BEE               	incf	printf@c& (0+255),f,b
  3391  001624  D7DC               	goto	L1
  3392  001626                     l4849:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;doprnt.c: 1431: {
  3396                           ;doprnt.c: 1447: if(flag & 0x03)
  3397  001626  C0E6  F030         	movff	printf@flag,??_printf
  3398  00162A  0E03               	movlw	3
  3399  00162C  1630               	andwf	??_printf,f,c
  3400  00162E  B4D8               	btfsc	status,2,c
  3401  001630  D003               	goto	l4853
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;doprnt.c: 1448: (putch('-') );
  3405  001632  0E2D               	movlw	45
  3406  001634  ECF6  F016         	call	_putch
  3407  001638                     l4853:
  3408                           
  3409                           ;doprnt.c: 1478: }
  3410                           ;doprnt.c: 1481: prec = c;
  3411  001638  C0EE  F0E7         	movff	printf@c,printf@prec
  3412                           
  3413                           ;doprnt.c: 1483: while(prec--) {
  3414  00163C  D02A               	goto	l4859
  3415  00163E                     l4855:
  3416                           
  3417                           ;doprnt.c: 1487: {
  3418                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3419  00163E  0100               	movlb	0	; () banked
  3420  001640  0100               	movlb	0	; () banked
  3421  001642  51E7               	movf	printf@prec& (0+255),w,b
  3422  001644  0D02               	mullw	2
  3423  001646  0E1D               	movlw	low _dpowers
  3424  001648  24F3               	addwf	prodl,w,c
  3425  00164A  6EF6               	movwf	tblptrl,c
  3426  00164C  0E10               	movlw	high _dpowers
  3427  00164E  20F4               	addwfc	prodh,w,c
  3428  001650  6EF7               	movwf	tblptrh,c
  3429  001652  0009               	tblrd		*+
  3430  001654  CFF5 F01E          	movff	tablat,___lwdiv@divisor
  3431  001658  000A               	tblrd		*-
  3432  00165A  CFF5 F01F          	movff	tablat,___lwdiv@divisor+1
  3433  00165E  C0EA  F01C         	movff	printf@_val,___lwdiv@dividend
  3434  001662  C0EB  F01D         	movff	printf@_val+1,___lwdiv@dividend+1
  3435  001666  EC7F  F015         	call	___lwdiv	;wreg free
  3436  00166A  C01C  F024         	movff	?___lwdiv,___lwmod@dividend
  3437  00166E  C01D  F025         	movff	?___lwdiv+1,___lwmod@dividend+1
  3438  001672  0E00               	movlw	0
  3439  001674  6E27               	movwf	___lwmod@divisor+1,c
  3440  001676  0E0A               	movlw	10
  3441  001678  6E26               	movwf	___lwmod@divisor,c
  3442  00167A  ECD3  F015         	call	___lwmod	;wreg free
  3443  00167E  5024               	movf	?___lwmod,w,c
  3444  001680  0F30               	addlw	48
  3445  001682  0100               	movlb	0	; () banked
  3446  001684  0100               	movlb	0	; () banked
  3447  001686  6FEE               	movwf	printf@c& (0+255),b
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;doprnt.c: 1532: }
  3451                           ;doprnt.c: 1533: (putch(c) );
  3452  001688  0100               	movlb	0	; () banked
  3453  00168A  0100               	movlb	0	; () banked
  3454  00168C  51EE               	movf	printf@c& (0+255),w,b
  3455  00168E  ECF6  F016         	call	_putch
  3456  001692                     l4859:
  3457  001692  0100               	movlb	0	; () banked
  3458  001694  0100               	movlb	0	; () banked
  3459  001696  07E7               	decf	printf@prec& (0+255),f,b
  3460  001698  0100               	movlb	0	; () banked
  3461  00169A  29E7               	incf	printf@prec& (0+255),w,b
  3462  00169C  A4D8               	btfss	status,2,c
  3463  00169E  D7CF               	goto	l4855
  3464  0016A0                     l4861:
  3465  0016A0  C02A  FFF6         	movff	printf@f,tblptrl
  3466  0016A4  C02B  FFF7         	movff	printf@f+1,tblptrh
  3467  0016A8  4A2A               	infsnz	printf@f,f,c
  3468  0016AA  2A2B               	incf	printf@f+1,f,c
  3469  0016AC  0008               	tblrd		*
  3470  0016AE  0100               	movlb	0	; () banked
  3471  0016B0  CFF5 F0EE          	movff	tablat,printf@c
  3472  0016B4  0100               	movlb	0	; () banked
  3473  0016B6  67EE               	tstfsz	printf@c& (0+255),b
  3474  0016B8  D6EA               	goto	l4801
  3475  0016BA                     l677:
  3476                           
  3477                           ; BSR set to: 0
  3478  0016BA  0012               	return	
  3479  0016BC                     __end_of_printf:
  3480                           	opt stack 0
  3481                           tblptru	equ	0xFF8
  3482                           tblptrh	equ	0xFF7
  3483                           tblptrl	equ	0xFF6
  3484                           tablat	equ	0xFF5
  3485                           prodh	equ	0xFF4
  3486                           prodl	equ	0xFF3
  3487                           intcon	equ	0xFF2
  3488                           indf0	equ	0xFEF
  3489                           postinc0	equ	0xFEE
  3490                           fsr0h	equ	0xFEA
  3491                           fsr0l	equ	0xFE9
  3492                           wreg	equ	0xFE8
  3493                           postdec1	equ	0xFE5
  3494                           fsr1l	equ	0xFE1
  3495                           indf2	equ	0xFDF
  3496                           postinc2	equ	0xFDE
  3497                           postdec2	equ	0xFDD
  3498                           fsr2h	equ	0xFDA
  3499                           fsr2l	equ	0xFD9
  3500                           status	equ	0xFD8
  3501                           
  3502 ;; *************** function _putch *****************
  3503 ;; Defined at:
  3504 ;;		line 161 in file "main.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  data            1    wreg     unsigned char 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  data            1   20[COMRAM] unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;		None               void
  3511 ;; Registers used:
  3512 ;;		wreg
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3518 ;;      Params:         0       0       0       0       0       0       0       0       0
  3519 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3521 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3522 ;;Total ram usage:        1 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    2
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_printf
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text15
  3533  002DEC                     __ptext15:
  3534                           	opt stack 0
  3535  002DEC                     _putch:
  3536                           	opt stack 27
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;incstack = 0
  3540                           ;putch@data stored from wreg
  3541  002DEC  CFE8 F015          	movff	wreg,putch@data
  3542  002DF0                     l639:
  3543  002DF0  A89E               	btfss	3998,4,c	;volatile
  3544  002DF2  D7FE               	goto	l639
  3545                           
  3546                           ;main.c: 163: TXREG = data;
  3547  002DF4  C015  FFAD         	movff	putch@data,4013	;volatile
  3548  002DF8  0012               	return	
  3549  002DFA                     __end_of_putch:
  3550                           	opt stack 0
  3551                           tblptru	equ	0xFF8
  3552                           tblptrh	equ	0xFF7
  3553                           tblptrl	equ	0xFF6
  3554                           tablat	equ	0xFF5
  3555                           prodh	equ	0xFF4
  3556                           prodl	equ	0xFF3
  3557                           intcon	equ	0xFF2
  3558                           indf0	equ	0xFEF
  3559                           postinc0	equ	0xFEE
  3560                           fsr0h	equ	0xFEA
  3561                           fsr0l	equ	0xFE9
  3562                           wreg	equ	0xFE8
  3563                           postdec1	equ	0xFE5
  3564                           fsr1l	equ	0xFE1
  3565                           indf2	equ	0xFDF
  3566                           postinc2	equ	0xFDE
  3567                           postdec2	equ	0xFDD
  3568                           fsr2h	equ	0xFDA
  3569                           fsr2l	equ	0xFD9
  3570                           status	equ	0xFD8
  3571                           
  3572 ;; *************** function ___lwmod *****************
  3573 ;; Defined at:
  3574 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwmod.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  dividend        2   35[COMRAM] unsigned int 
  3577 ;;  divisor         2   37[COMRAM] unsigned int 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  counter         1   40[COMRAM] unsigned char 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  2   35[COMRAM] unsigned int 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3589 ;;      Params:         4       0       0       0       0       0       0       0       0
  3590 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3591 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3592 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3593 ;;Total ram usage:        6 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    2
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_printf
  3600 ;;		_sendnum
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text16
  3605  002BA6                     __ptext16:
  3606                           	opt stack 0
  3607  002BA6                     ___lwmod:
  3608                           	opt stack 27
  3609                           
  3610                           ;incstack = 0
  3611  002BA6  5027               	movf	___lwmod@divisor+1,w,c
  3612  002BA8  1026               	iorwf	___lwmod@divisor,w,c
  3613  002BAA  B4D8               	btfsc	status,2,c
  3614  002BAC  D01A               	goto	l1213
  3615  002BAE  6E28               	movwf	??___lwmod& (0+255),c
  3616  002BB0  0E01               	movlw	1
  3617  002BB2  6E29               	movwf	___lwmod@counter,c
  3618  002BB4  5028               	movf	??___lwmod& (0+255),w,c
  3619  002BB6  D004               	goto	l4481
  3620  002BB8                     l4479:
  3621  002BB8  90D8               	bcf	status,0,c
  3622  002BBA  3626               	rlcf	___lwmod@divisor,f,c
  3623  002BBC  3627               	rlcf	___lwmod@divisor+1,f,c
  3624  002BBE  2A29               	incf	___lwmod@counter,f,c
  3625  002BC0                     l4481:
  3626  002BC0  AE27               	btfss	___lwmod@divisor+1,7,c
  3627  002BC2  D7FA               	goto	l4479
  3628  002BC4                     l4483:
  3629  002BC4  5026               	movf	___lwmod@divisor,w,c
  3630  002BC6  5C24               	subwf	___lwmod@dividend,w,c
  3631  002BC8  5027               	movf	___lwmod@divisor+1,w,c
  3632  002BCA  5825               	subwfb	___lwmod@dividend+1,w,c
  3633  002BCC  A0D8               	btfss	status,0,c
  3634  002BCE  D004               	goto	l4487
  3635  002BD0  5026               	movf	___lwmod@divisor,w,c
  3636  002BD2  5E24               	subwf	___lwmod@dividend,f,c
  3637  002BD4  5027               	movf	___lwmod@divisor+1,w,c
  3638  002BD6  5A25               	subwfb	___lwmod@dividend+1,f,c
  3639  002BD8                     l4487:
  3640  002BD8  90D8               	bcf	status,0,c
  3641  002BDA  3227               	rrcf	___lwmod@divisor+1,f,c
  3642  002BDC  3226               	rrcf	___lwmod@divisor,f,c
  3643  002BDE  2E29               	decfsz	___lwmod@counter,f,c
  3644  002BE0  D7F1               	goto	l4483
  3645  002BE2                     l1213:
  3646  002BE2  C024  F024         	movff	___lwmod@dividend,?___lwmod
  3647  002BE6  C025  F025         	movff	___lwmod@dividend+1,?___lwmod+1
  3648  002BEA  0012               	return	
  3649  002BEC                     __end_of___lwmod:
  3650                           	opt stack 0
  3651                           tblptru	equ	0xFF8
  3652                           tblptrh	equ	0xFF7
  3653                           tblptrl	equ	0xFF6
  3654                           tablat	equ	0xFF5
  3655                           prodh	equ	0xFF4
  3656                           prodl	equ	0xFF3
  3657                           intcon	equ	0xFF2
  3658                           indf0	equ	0xFEF
  3659                           postinc0	equ	0xFEE
  3660                           fsr0h	equ	0xFEA
  3661                           fsr0l	equ	0xFE9
  3662                           wreg	equ	0xFE8
  3663                           postdec1	equ	0xFE5
  3664                           fsr1l	equ	0xFE1
  3665                           indf2	equ	0xFDF
  3666                           postinc2	equ	0xFDE
  3667                           postdec2	equ	0xFDD
  3668                           fsr2h	equ	0xFDA
  3669                           fsr2l	equ	0xFD9
  3670                           status	equ	0xFD8
  3671                           
  3672 ;; *************** function _pop *****************
  3673 ;; Defined at:
  3674 ;;		line 42 in file "main.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  buffer          2   20[COMRAM] PTR struct .
  3677 ;;		 -> buffer(70), 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  ret             1   24[COMRAM] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      unsigned char 
  3682 ;; Registers used:
  3683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3689 ;;      Params:         2       0       0       0       0       0       0       0       0
  3690 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3691 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3692 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3693 ;;Total ram usage:        5 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    2
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_main
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text17
  3704  0028E2                     __ptext17:
  3705                           	opt stack 0
  3706  0028E2                     _pop:
  3707                           	opt stack 28
  3708                           
  3709                           ;main.c: 43: char ret = buffer->items[buffer->first];
  3710                           
  3711                           ;incstack = 0
  3712  0028E2  EE20 F040          	lfsr	2,64
  3713  0028E6  5015               	movf	pop@buffer,w,c
  3714  0028E8  26D9               	addwf	fsr2l,f,c
  3715  0028EA  5016               	movf	pop@buffer+1,w,c
  3716  0028EC  22DA               	addwfc	fsr2h,f,c
  3717  0028EE  CFDE F017          	movff	postinc2,??_pop
  3718  0028F2  CFDD F018          	movff	postdec2,??_pop+1
  3719  0028F6  5017               	movf	??_pop,w,c
  3720  0028F8  2415               	addwf	pop@buffer,w,c
  3721  0028FA  6ED9               	movwf	fsr2l,c
  3722  0028FC  5018               	movf	??_pop+1,w,c
  3723  0028FE  2016               	addwfc	pop@buffer+1,w,c
  3724  002900  6EDA               	movwf	fsr2h,c
  3725  002902  50DF               	movf	indf2,w,c
  3726  002904  6E19               	movwf	pop@ret,c
  3727                           
  3728                           ;main.c: 44: buffer->first = (buffer->first + 1) % 64;
  3729  002906  EE20 F040          	lfsr	2,64
  3730  00290A  5015               	movf	pop@buffer,w,c
  3731  00290C  26D9               	addwf	fsr2l,f,c
  3732  00290E  5016               	movf	pop@buffer+1,w,c
  3733  002910  22DA               	addwfc	fsr2h,f,c
  3734  002912  CFDE F017          	movff	postinc2,??_pop
  3735  002916  CFDD F018          	movff	postdec2,??_pop+1
  3736  00291A  0E01               	movlw	1
  3737  00291C  2617               	addwf	??_pop,f,c
  3738  00291E  0E00               	movlw	0
  3739  002920  2218               	addwfc	??_pop+1,f,c
  3740  002922  0E3F               	movlw	63
  3741  002924  1617               	andwf	??_pop,f,c
  3742  002926  0E00               	movlw	0
  3743  002928  1618               	andwf	??_pop+1,f,c
  3744  00292A  EE20 F040          	lfsr	2,64
  3745  00292E  5015               	movf	pop@buffer,w,c
  3746  002930  26D9               	addwf	fsr2l,f,c
  3747  002932  5016               	movf	pop@buffer+1,w,c
  3748  002934  22DA               	addwfc	fsr2h,f,c
  3749  002936  C017  FFDE         	movff	??_pop,postinc2
  3750  00293A  C018  FFDD         	movff	??_pop+1,postdec2
  3751                           
  3752                           ;main.c: 45: buffer->count--;
  3753  00293E  EE20 F044          	lfsr	2,68
  3754  002942  5015               	movf	pop@buffer,w,c
  3755  002944  26D9               	addwf	fsr2l,f,c
  3756  002946  5016               	movf	pop@buffer+1,w,c
  3757  002948  22DA               	addwfc	fsr2h,f,c
  3758  00294A  06DE               	decf	postinc2,f,c
  3759  00294C  0E00               	movlw	0
  3760  00294E  5ADD               	subwfb	postdec2,f,c
  3761                           
  3762                           ;main.c: 47: return ret;
  3763  002950  5019               	movf	pop@ret,w,c
  3764  002952  0012               	return	
  3765  002954                     __end_of_pop:
  3766                           	opt stack 0
  3767                           tblptru	equ	0xFF8
  3768                           tblptrh	equ	0xFF7
  3769                           tblptrl	equ	0xFF6
  3770                           tablat	equ	0xFF5
  3771                           prodh	equ	0xFF4
  3772                           prodl	equ	0xFF3
  3773                           intcon	equ	0xFF2
  3774                           indf0	equ	0xFEF
  3775                           postinc0	equ	0xFEE
  3776                           fsr0h	equ	0xFEA
  3777                           fsr0l	equ	0xFE9
  3778                           wreg	equ	0xFE8
  3779                           postdec1	equ	0xFE5
  3780                           fsr1l	equ	0xFE1
  3781                           indf2	equ	0xFDF
  3782                           postinc2	equ	0xFDE
  3783                           postdec2	equ	0xFDD
  3784                           fsr2h	equ	0xFDA
  3785                           fsr2l	equ	0xFD9
  3786                           status	equ	0xFD8
  3787                           
  3788 ;; *************** function _nivel_baixo *****************
  3789 ;; Defined at:
  3790 ;;		line 216 in file "SanUSB1X.h"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  pino            2   20[COMRAM] unsigned int 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;		None               void
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3804 ;;      Params:         2       0       0       0       0       0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3806 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3807 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3808 ;;Total ram usage:        4 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    2
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_main
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text18
  3819  0016BC                     __ptext18:
  3820                           	opt stack 0
  3821  0016BC                     _nivel_baixo:
  3822                           	opt stack 28
  3823                           
  3824                           ;SanUSB1X.h: 218: switch(pino){
  3825                           
  3826                           ;incstack = 0
  3827  0016BC  D060               	goto	l4589
  3828  0016BE                     l245:
  3829  0016BE  9092               	bcf	3986,0,c	;volatile
  3830  0016C0  9080               	bcf	3968,0,c	;volatile
  3831  0016C2  D0C6               	goto	l276
  3832  0016C4                     l247:
  3833  0016C4  9292               	bcf	3986,1,c	;volatile
  3834  0016C6  9280               	bcf	3968,1,c	;volatile
  3835  0016C8  D0C3               	goto	l276
  3836  0016CA                     l248:
  3837  0016CA  9492               	bcf	3986,2,c	;volatile
  3838  0016CC  9480               	bcf	3968,2,c	;volatile
  3839  0016CE  D0C0               	goto	l276
  3840  0016D0                     l249:
  3841  0016D0  9692               	bcf	3986,3,c	;volatile
  3842  0016D2  9680               	bcf	3968,3,c	;volatile
  3843  0016D4  D0BD               	goto	l276
  3844  0016D6                     l250:
  3845  0016D6  9892               	bcf	3986,4,c	;volatile
  3846  0016D8  9880               	bcf	3968,4,c	;volatile
  3847  0016DA  D0BA               	goto	l276
  3848  0016DC                     l251:
  3849  0016DC  9A92               	bcf	3986,5,c	;volatile
  3850  0016DE  9A80               	bcf	3968,5,c	;volatile
  3851  0016E0  D0B7               	goto	l276
  3852  0016E2                     l4581:
  3853  0016E2  0E00               	movlw	0
  3854  0016E4  6E92               	movwf	3986,c	;volatile
  3855  0016E6  0E00               	movlw	0
  3856  0016E8  6E89               	movwf	3977,c	;volatile
  3857  0016EA  D0B2               	goto	l276
  3858  0016EC                     l253:
  3859  0016EC  9093               	bcf	3987,0,c	;volatile
  3860  0016EE  9081               	bcf	3969,0,c	;volatile
  3861  0016F0  D0AF               	goto	l276
  3862  0016F2                     l254:
  3863  0016F2  9293               	bcf	3987,1,c	;volatile
  3864  0016F4  9281               	bcf	3969,1,c	;volatile
  3865  0016F6  D0AC               	goto	l276
  3866  0016F8                     l255:
  3867  0016F8  9493               	bcf	3987,2,c	;volatile
  3868  0016FA  9481               	bcf	3969,2,c	;volatile
  3869  0016FC  D0A9               	goto	l276
  3870  0016FE                     l256:
  3871  0016FE  9693               	bcf	3987,3,c	;volatile
  3872  001700  9681               	bcf	3969,3,c	;volatile
  3873  001702  D0A6               	goto	l276
  3874  001704                     l257:
  3875  001704  9893               	bcf	3987,4,c	;volatile
  3876  001706  9881               	bcf	3969,4,c	;volatile
  3877  001708  D0A3               	goto	l276
  3878  00170A                     l258:
  3879  00170A  9A93               	bcf	3987,5,c	;volatile
  3880  00170C  9A81               	bcf	3969,5,c	;volatile
  3881  00170E  D0A0               	goto	l276
  3882  001710                     l259:
  3883  001710  9C93               	bcf	3987,6,c	;volatile
  3884  001712  9C81               	bcf	3969,6,c	;volatile
  3885  001714  D09D               	goto	l276
  3886  001716                     l260:
  3887  001716  9E93               	bcf	3987,7,c	;volatile
  3888  001718  9E81               	bcf	3969,7,c	;volatile
  3889  00171A  D09A               	goto	l276
  3890  00171C                     l4583:
  3891  00171C  0E00               	movlw	0
  3892  00171E  6E93               	movwf	3987,c	;volatile
  3893  001720  0E00               	movlw	0
  3894  001722  6E8A               	movwf	3978,c	;volatile
  3895  001724  D095               	goto	l276
  3896  001726                     l262:
  3897  001726  9094               	bcf	3988,0,c	;volatile
  3898  001728  9082               	bcf	3970,0,c	;volatile
  3899  00172A  D092               	goto	l276
  3900  00172C                     l263:
  3901  00172C  9294               	bcf	3988,1,c	;volatile
  3902  00172E  9282               	bcf	3970,1,c	;volatile
  3903  001730  D08F               	goto	l276
  3904  001732                     l264:
  3905  001732  9494               	bcf	3988,2,c	;volatile
  3906  001734  9482               	bcf	3970,2,c	;volatile
  3907  001736  D08C               	goto	l276
  3908  001738                     l265:
  3909  001738  9C94               	bcf	3988,6,c	;volatile
  3910  00173A  9C82               	bcf	3970,6,c	;volatile
  3911  00173C  D089               	goto	l276
  3912  00173E                     l266:
  3913  00173E  9E94               	bcf	3988,7,c	;volatile
  3914  001740  9E82               	bcf	3970,7,c	;volatile
  3915  001742  D086               	goto	l276
  3916  001744                     l4585:
  3917  001744  0E00               	movlw	0
  3918  001746  6E94               	movwf	3988,c	;volatile
  3919  001748  0E00               	movlw	0
  3920  00174A  6E8B               	movwf	3979,c	;volatile
  3921  00174C  D081               	goto	l276
  3922  00174E                     l268:
  3923  00174E  9095               	bcf	3989,0,c	;volatile
  3924  001750  9083               	bcf	3971,0,c	;volatile
  3925  001752  D07E               	goto	l276
  3926  001754                     l269:
  3927  001754  9295               	bcf	3989,1,c	;volatile
  3928  001756  9283               	bcf	3971,1,c	;volatile
  3929  001758  D07B               	goto	l276
  3930  00175A                     l270:
  3931  00175A  9495               	bcf	3989,2,c	;volatile
  3932  00175C  9483               	bcf	3971,2,c	;volatile
  3933  00175E  D078               	goto	l276
  3934  001760                     l271:
  3935  001760  9695               	bcf	3989,3,c	;volatile
  3936  001762  9683               	bcf	3971,3,c	;volatile
  3937  001764  D075               	goto	l276
  3938  001766                     l272:
  3939  001766  9895               	bcf	3989,4,c	;volatile
  3940  001768  9883               	bcf	3971,4,c	;volatile
  3941  00176A  D072               	goto	l276
  3942  00176C                     l273:
  3943  00176C  9A95               	bcf	3989,5,c	;volatile
  3944  00176E  9A83               	bcf	3971,5,c	;volatile
  3945  001770  D06F               	goto	l276
  3946  001772                     l274:
  3947  001772  9C95               	bcf	3989,6,c	;volatile
  3948  001774  9C83               	bcf	3971,6,c	;volatile
  3949  001776  D06C               	goto	l276
  3950  001778                     l275:
  3951  001778  9E95               	bcf	3989,7,c	;volatile
  3952  00177A  9E83               	bcf	3971,7,c	;volatile
  3953  00177C  D069               	goto	l276
  3954  00177E                     l4589:
  3955  00177E  C015  F017         	movff	nivel_baixo@pino,??_nivel_baixo
  3956  001782  C016  F018         	movff	nivel_baixo@pino+1,??_nivel_baixo+1
  3957                           
  3958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3959                           ; Switch size 1, requested type "space"
  3960                           ; Number of cases is 2, Range of values is 15 to 124
  3961                           ; switch strategies available:
  3962                           ; Name         Instructions Cycles
  3963                           ; simple_byte            7     4 (average)
  3964                           ;	Chosen strategy is simple_byte
  3965  001786  5018               	movf	??_nivel_baixo+1,w,c
  3966  001788  0A0F               	xorlw	15	; case 15
  3967  00178A  B4D8               	btfsc	status,2,c
  3968  00178C  D004               	goto	l5391
  3969  00178E  0A73               	xorlw	115	; case 124
  3970  001790  B4D8               	btfsc	status,2,c
  3971  001792  D00C               	goto	l5393
  3972  001794  D05D               	goto	l276
  3973  001796                     l5391:
  3974                           
  3975                           ; Switch size 1, requested type "space"
  3976                           ; Number of cases is 3, Range of values is 128 to 130
  3977                           ; switch strategies available:
  3978                           ; Name         Instructions Cycles
  3979                           ; simple_byte           10     6 (average)
  3980                           ;	Chosen strategy is simple_byte
  3981  001796  5017               	movf	??_nivel_baixo,w,c
  3982  001798  0A80               	xorlw	128	; case 128
  3983  00179A  B4D8               	btfsc	status,2,c
  3984  00179C  D7A2               	goto	l4581
  3985  00179E  0A01               	xorlw	1	; case 129
  3986  0017A0  B4D8               	btfsc	status,2,c
  3987  0017A2  D7BC               	goto	l4583
  3988  0017A4  0A03               	xorlw	3	; case 130
  3989  0017A6  B4D8               	btfsc	status,2,c
  3990  0017A8  D7CD               	goto	l4585
  3991  0017AA  D052               	goto	l276
  3992  0017AC                     l5393:
  3993                           
  3994                           ; Switch size 1, requested type "space"
  3995                           ; Number of cases is 27, Range of values is 0 to 31
  3996                           ; switch strategies available:
  3997                           ; Name         Instructions Cycles
  3998                           ; simple_byte           82    42 (average)
  3999                           ;	Chosen strategy is simple_byte
  4000  0017AC  5017               	movf	??_nivel_baixo,w,c
  4001  0017AE  0A00               	xorlw	0	; case 0
  4002  0017B0  B4D8               	btfsc	status,2,c
  4003  0017B2  D785               	goto	l245
  4004  0017B4  0A01               	xorlw	1	; case 1
  4005  0017B6  B4D8               	btfsc	status,2,c
  4006  0017B8  D785               	goto	l247
  4007  0017BA  0A03               	xorlw	3	; case 2
  4008  0017BC  B4D8               	btfsc	status,2,c
  4009  0017BE  D785               	goto	l248
  4010  0017C0  0A01               	xorlw	1	; case 3
  4011  0017C2  B4D8               	btfsc	status,2,c
  4012  0017C4  D785               	goto	l249
  4013  0017C6  0A07               	xorlw	7	; case 4
  4014  0017C8  B4D8               	btfsc	status,2,c
  4015  0017CA  D785               	goto	l250
  4016  0017CC  0A01               	xorlw	1	; case 5
  4017  0017CE  B4D8               	btfsc	status,2,c
  4018  0017D0  D785               	goto	l251
  4019  0017D2  0A0D               	xorlw	13	; case 8
  4020  0017D4  B4D8               	btfsc	status,2,c
  4021  0017D6  D78A               	goto	l253
  4022  0017D8  0A01               	xorlw	1	; case 9
  4023  0017DA  B4D8               	btfsc	status,2,c
  4024  0017DC  D78A               	goto	l254
  4025  0017DE  0A03               	xorlw	3	; case 10
  4026  0017E0  B4D8               	btfsc	status,2,c
  4027  0017E2  D78A               	goto	l255
  4028  0017E4  0A01               	xorlw	1	; case 11
  4029  0017E6  B4D8               	btfsc	status,2,c
  4030  0017E8  D78A               	goto	l256
  4031  0017EA  0A07               	xorlw	7	; case 12
  4032  0017EC  B4D8               	btfsc	status,2,c
  4033  0017EE  D78A               	goto	l257
  4034  0017F0  0A01               	xorlw	1	; case 13
  4035  0017F2  B4D8               	btfsc	status,2,c
  4036  0017F4  D78A               	goto	l258
  4037  0017F6  0A03               	xorlw	3	; case 14
  4038  0017F8  B4D8               	btfsc	status,2,c
  4039  0017FA  D78A               	goto	l259
  4040  0017FC  0A01               	xorlw	1	; case 15
  4041  0017FE  B4D8               	btfsc	status,2,c
  4042  001800  D78A               	goto	l260
  4043  001802  0A1F               	xorlw	31	; case 16
  4044  001804  B4D8               	btfsc	status,2,c
  4045  001806  D78F               	goto	l262
  4046  001808  0A01               	xorlw	1	; case 17
  4047  00180A  B4D8               	btfsc	status,2,c
  4048  00180C  D78F               	goto	l263
  4049  00180E  0A03               	xorlw	3	; case 18
  4050  001810  B4D8               	btfsc	status,2,c
  4051  001812  D78F               	goto	l264
  4052  001814  0A04               	xorlw	4	; case 22
  4053  001816  B4D8               	btfsc	status,2,c
  4054  001818  D78F               	goto	l265
  4055  00181A  0A01               	xorlw	1	; case 23
  4056  00181C  B4D8               	btfsc	status,2,c
  4057  00181E  D78F               	goto	l266
  4058  001820  0A0F               	xorlw	15	; case 24
  4059  001822  B4D8               	btfsc	status,2,c
  4060  001824  D794               	goto	l268
  4061  001826  0A01               	xorlw	1	; case 25
  4062  001828  B4D8               	btfsc	status,2,c
  4063  00182A  D794               	goto	l269
  4064  00182C  0A03               	xorlw	3	; case 26
  4065  00182E  B4D8               	btfsc	status,2,c
  4066  001830  D794               	goto	l270
  4067  001832  0A01               	xorlw	1	; case 27
  4068  001834  B4D8               	btfsc	status,2,c
  4069  001836  D794               	goto	l271
  4070  001838  0A07               	xorlw	7	; case 28
  4071  00183A  B4D8               	btfsc	status,2,c
  4072  00183C  D794               	goto	l272
  4073  00183E  0A01               	xorlw	1	; case 29
  4074  001840  B4D8               	btfsc	status,2,c
  4075  001842  D794               	goto	l273
  4076  001844  0A03               	xorlw	3	; case 30
  4077  001846  B4D8               	btfsc	status,2,c
  4078  001848  D794               	goto	l274
  4079  00184A  0A01               	xorlw	1	; case 31
  4080  00184C  B4D8               	btfsc	status,2,c
  4081  00184E  D794               	goto	l275
  4082  001850                     l276:
  4083  001850  0012               	return	
  4084  001852                     __end_of_nivel_baixo:
  4085                           	opt stack 0
  4086                           tblptru	equ	0xFF8
  4087                           tblptrh	equ	0xFF7
  4088                           tblptrl	equ	0xFF6
  4089                           tablat	equ	0xFF5
  4090                           prodh	equ	0xFF4
  4091                           prodl	equ	0xFF3
  4092                           intcon	equ	0xFF2
  4093                           indf0	equ	0xFEF
  4094                           postinc0	equ	0xFEE
  4095                           fsr0h	equ	0xFEA
  4096                           fsr0l	equ	0xFE9
  4097                           wreg	equ	0xFE8
  4098                           postdec1	equ	0xFE5
  4099                           fsr1l	equ	0xFE1
  4100                           indf2	equ	0xFDF
  4101                           postinc2	equ	0xFDE
  4102                           postdec2	equ	0xFDD
  4103                           fsr2h	equ	0xFDA
  4104                           fsr2l	equ	0xFD9
  4105                           status	equ	0xFD8
  4106                           
  4107 ;; *************** function _nivel_alto *****************
  4108 ;; Defined at:
  4109 ;;		line 177 in file "SanUSB1X.h"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  pino            2   20[COMRAM] unsigned int 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;		None               void
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4123 ;;      Params:         2       0       0       0       0       0       0       0       0
  4124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4125 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4126 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4127 ;;Total ram usage:        4 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; Hardware stack levels required when called:    2
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_main
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text19
  4138  001852                     __ptext19:
  4139                           	opt stack 0
  4140  001852                     _nivel_alto:
  4141                           	opt stack 28
  4142                           
  4143                           ;SanUSB1X.h: 180: switch(pino){
  4144                           
  4145                           ;incstack = 0
  4146  001852  D05D               	goto	l4569
  4147  001854                     l210:
  4148  001854  9092               	bcf	3986,0,c	;volatile
  4149  001856  8080               	bsf	3968,0,c	;volatile
  4150  001858  D0C3               	goto	l241
  4151  00185A                     l212:
  4152  00185A  9292               	bcf	3986,1,c	;volatile
  4153  00185C  8280               	bsf	3968,1,c	;volatile
  4154  00185E  D0C0               	goto	l241
  4155  001860                     l213:
  4156  001860  9492               	bcf	3986,2,c	;volatile
  4157  001862  8480               	bsf	3968,2,c	;volatile
  4158  001864  D0BD               	goto	l241
  4159  001866                     l214:
  4160  001866  9692               	bcf	3986,3,c	;volatile
  4161  001868  8680               	bsf	3968,3,c	;volatile
  4162  00186A  D0BA               	goto	l241
  4163  00186C                     l215:
  4164  00186C  9892               	bcf	3986,4,c	;volatile
  4165  00186E  8880               	bsf	3968,4,c	;volatile
  4166  001870  D0B7               	goto	l241
  4167  001872                     l216:
  4168  001872  9A92               	bcf	3986,5,c	;volatile
  4169  001874  8A80               	bsf	3968,5,c	;volatile
  4170  001876  D0B4               	goto	l241
  4171  001878                     l4555:
  4172  001878  0E00               	movlw	0
  4173  00187A  6E92               	movwf	3986,c	;volatile
  4174  00187C  6889               	setf	3977,c	;volatile
  4175  00187E  D0B0               	goto	l241
  4176  001880                     l218:
  4177  001880  9093               	bcf	3987,0,c	;volatile
  4178  001882  8081               	bsf	3969,0,c	;volatile
  4179  001884  D0AD               	goto	l241
  4180  001886                     l219:
  4181  001886  9293               	bcf	3987,1,c	;volatile
  4182  001888  8281               	bsf	3969,1,c	;volatile
  4183  00188A  D0AA               	goto	l241
  4184  00188C                     l220:
  4185  00188C  9493               	bcf	3987,2,c	;volatile
  4186  00188E  8481               	bsf	3969,2,c	;volatile
  4187  001890  D0A7               	goto	l241
  4188  001892                     l221:
  4189  001892  9693               	bcf	3987,3,c	;volatile
  4190  001894  8681               	bsf	3969,3,c	;volatile
  4191  001896  D0A4               	goto	l241
  4192  001898                     l222:
  4193  001898  9893               	bcf	3987,4,c	;volatile
  4194  00189A  8881               	bsf	3969,4,c	;volatile
  4195  00189C  D0A1               	goto	l241
  4196  00189E                     l223:
  4197  00189E  9A93               	bcf	3987,5,c	;volatile
  4198  0018A0  8A81               	bsf	3969,5,c	;volatile
  4199  0018A2  D09E               	goto	l241
  4200  0018A4                     l224:
  4201  0018A4  9C93               	bcf	3987,6,c	;volatile
  4202  0018A6  8C81               	bsf	3969,6,c	;volatile
  4203  0018A8  D09B               	goto	l241
  4204  0018AA                     l225:
  4205  0018AA  9E93               	bcf	3987,7,c	;volatile
  4206  0018AC  8E81               	bsf	3969,7,c	;volatile
  4207  0018AE  D098               	goto	l241
  4208  0018B0                     l4559:
  4209  0018B0  0E00               	movlw	0
  4210  0018B2  6E93               	movwf	3987,c	;volatile
  4211  0018B4  688A               	setf	3978,c	;volatile
  4212  0018B6  D094               	goto	l241
  4213  0018B8                     l227:
  4214  0018B8  9094               	bcf	3988,0,c	;volatile
  4215  0018BA  8082               	bsf	3970,0,c	;volatile
  4216  0018BC  D091               	goto	l241
  4217  0018BE                     l228:
  4218  0018BE  9294               	bcf	3988,1,c	;volatile
  4219  0018C0  8282               	bsf	3970,1,c	;volatile
  4220  0018C2  D08E               	goto	l241
  4221  0018C4                     l229:
  4222  0018C4  9494               	bcf	3988,2,c	;volatile
  4223  0018C6  8482               	bsf	3970,2,c	;volatile
  4224  0018C8  D08B               	goto	l241
  4225  0018CA                     l230:
  4226  0018CA  9C94               	bcf	3988,6,c	;volatile
  4227  0018CC  8C82               	bsf	3970,6,c	;volatile
  4228  0018CE  D088               	goto	l241
  4229  0018D0                     l231:
  4230  0018D0  9E94               	bcf	3988,7,c	;volatile
  4231  0018D2  8E82               	bsf	3970,7,c	;volatile
  4232  0018D4  D085               	goto	l241
  4233  0018D6                     l4563:
  4234  0018D6  0E00               	movlw	0
  4235  0018D8  6E94               	movwf	3988,c	;volatile
  4236  0018DA  688B               	setf	3979,c	;volatile
  4237  0018DC  D081               	goto	l241
  4238  0018DE                     l233:
  4239  0018DE  9095               	bcf	3989,0,c	;volatile
  4240  0018E0  8083               	bsf	3971,0,c	;volatile
  4241  0018E2  D07E               	goto	l241
  4242  0018E4                     l234:
  4243  0018E4  9295               	bcf	3989,1,c	;volatile
  4244  0018E6  8283               	bsf	3971,1,c	;volatile
  4245  0018E8  D07B               	goto	l241
  4246  0018EA                     l235:
  4247  0018EA  9495               	bcf	3989,2,c	;volatile
  4248  0018EC  8483               	bsf	3971,2,c	;volatile
  4249  0018EE  D078               	goto	l241
  4250  0018F0                     l236:
  4251  0018F0  9695               	bcf	3989,3,c	;volatile
  4252  0018F2  8683               	bsf	3971,3,c	;volatile
  4253  0018F4  D075               	goto	l241
  4254  0018F6                     l237:
  4255  0018F6  9895               	bcf	3989,4,c	;volatile
  4256  0018F8  8883               	bsf	3971,4,c	;volatile
  4257  0018FA  D072               	goto	l241
  4258  0018FC                     l238:
  4259  0018FC  9A95               	bcf	3989,5,c	;volatile
  4260  0018FE  8A83               	bsf	3971,5,c	;volatile
  4261  001900  D06F               	goto	l241
  4262  001902                     l239:
  4263  001902  9C95               	bcf	3989,6,c	;volatile
  4264  001904  8C83               	bsf	3971,6,c	;volatile
  4265  001906  D06C               	goto	l241
  4266  001908                     l240:
  4267  001908  9E95               	bcf	3989,7,c	;volatile
  4268  00190A  8E83               	bsf	3971,7,c	;volatile
  4269  00190C  D069               	goto	l241
  4270  00190E                     l4569:
  4271  00190E  C015  F017         	movff	nivel_alto@pino,??_nivel_alto
  4272  001912  C016  F018         	movff	nivel_alto@pino+1,??_nivel_alto+1
  4273                           
  4274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4275                           ; Switch size 1, requested type "space"
  4276                           ; Number of cases is 2, Range of values is 15 to 124
  4277                           ; switch strategies available:
  4278                           ; Name         Instructions Cycles
  4279                           ; simple_byte            7     4 (average)
  4280                           ;	Chosen strategy is simple_byte
  4281  001916  5018               	movf	??_nivel_alto+1,w,c
  4282  001918  0A0F               	xorlw	15	; case 15
  4283  00191A  B4D8               	btfsc	status,2,c
  4284  00191C  D004               	goto	l5395
  4285  00191E  0A73               	xorlw	115	; case 124
  4286  001920  B4D8               	btfsc	status,2,c
  4287  001922  D00C               	goto	l5397
  4288  001924  D05D               	goto	l241
  4289  001926                     l5395:
  4290                           
  4291                           ; Switch size 1, requested type "space"
  4292                           ; Number of cases is 3, Range of values is 128 to 130
  4293                           ; switch strategies available:
  4294                           ; Name         Instructions Cycles
  4295                           ; simple_byte           10     6 (average)
  4296                           ;	Chosen strategy is simple_byte
  4297  001926  5017               	movf	??_nivel_alto,w,c
  4298  001928  0A80               	xorlw	128	; case 128
  4299  00192A  B4D8               	btfsc	status,2,c
  4300  00192C  D7A5               	goto	l4555
  4301  00192E  0A01               	xorlw	1	; case 129
  4302  001930  B4D8               	btfsc	status,2,c
  4303  001932  D7BE               	goto	l4559
  4304  001934  0A03               	xorlw	3	; case 130
  4305  001936  B4D8               	btfsc	status,2,c
  4306  001938  D7CE               	goto	l4563
  4307  00193A  D052               	goto	l241
  4308  00193C                     l5397:
  4309                           
  4310                           ; Switch size 1, requested type "space"
  4311                           ; Number of cases is 27, Range of values is 0 to 31
  4312                           ; switch strategies available:
  4313                           ; Name         Instructions Cycles
  4314                           ; simple_byte           82    42 (average)
  4315                           ;	Chosen strategy is simple_byte
  4316  00193C  5017               	movf	??_nivel_alto,w,c
  4317  00193E  0A00               	xorlw	0	; case 0
  4318  001940  B4D8               	btfsc	status,2,c
  4319  001942  D788               	goto	l210
  4320  001944  0A01               	xorlw	1	; case 1
  4321  001946  B4D8               	btfsc	status,2,c
  4322  001948  D788               	goto	l212
  4323  00194A  0A03               	xorlw	3	; case 2
  4324  00194C  B4D8               	btfsc	status,2,c
  4325  00194E  D788               	goto	l213
  4326  001950  0A01               	xorlw	1	; case 3
  4327  001952  B4D8               	btfsc	status,2,c
  4328  001954  D788               	goto	l214
  4329  001956  0A07               	xorlw	7	; case 4
  4330  001958  B4D8               	btfsc	status,2,c
  4331  00195A  D788               	goto	l215
  4332  00195C  0A01               	xorlw	1	; case 5
  4333  00195E  B4D8               	btfsc	status,2,c
  4334  001960  D788               	goto	l216
  4335  001962  0A0D               	xorlw	13	; case 8
  4336  001964  B4D8               	btfsc	status,2,c
  4337  001966  D78C               	goto	l218
  4338  001968  0A01               	xorlw	1	; case 9
  4339  00196A  B4D8               	btfsc	status,2,c
  4340  00196C  D78C               	goto	l219
  4341  00196E  0A03               	xorlw	3	; case 10
  4342  001970  B4D8               	btfsc	status,2,c
  4343  001972  D78C               	goto	l220
  4344  001974  0A01               	xorlw	1	; case 11
  4345  001976  B4D8               	btfsc	status,2,c
  4346  001978  D78C               	goto	l221
  4347  00197A  0A07               	xorlw	7	; case 12
  4348  00197C  B4D8               	btfsc	status,2,c
  4349  00197E  D78C               	goto	l222
  4350  001980  0A01               	xorlw	1	; case 13
  4351  001982  B4D8               	btfsc	status,2,c
  4352  001984  D78C               	goto	l223
  4353  001986  0A03               	xorlw	3	; case 14
  4354  001988  B4D8               	btfsc	status,2,c
  4355  00198A  D78C               	goto	l224
  4356  00198C  0A01               	xorlw	1	; case 15
  4357  00198E  B4D8               	btfsc	status,2,c
  4358  001990  D78C               	goto	l225
  4359  001992  0A1F               	xorlw	31	; case 16
  4360  001994  B4D8               	btfsc	status,2,c
  4361  001996  D790               	goto	l227
  4362  001998  0A01               	xorlw	1	; case 17
  4363  00199A  B4D8               	btfsc	status,2,c
  4364  00199C  D790               	goto	l228
  4365  00199E  0A03               	xorlw	3	; case 18
  4366  0019A0  B4D8               	btfsc	status,2,c
  4367  0019A2  D790               	goto	l229
  4368  0019A4  0A04               	xorlw	4	; case 22
  4369  0019A6  B4D8               	btfsc	status,2,c
  4370  0019A8  D790               	goto	l230
  4371  0019AA  0A01               	xorlw	1	; case 23
  4372  0019AC  B4D8               	btfsc	status,2,c
  4373  0019AE  D790               	goto	l231
  4374  0019B0  0A0F               	xorlw	15	; case 24
  4375  0019B2  B4D8               	btfsc	status,2,c
  4376  0019B4  D794               	goto	l233
  4377  0019B6  0A01               	xorlw	1	; case 25
  4378  0019B8  B4D8               	btfsc	status,2,c
  4379  0019BA  D794               	goto	l234
  4380  0019BC  0A03               	xorlw	3	; case 26
  4381  0019BE  B4D8               	btfsc	status,2,c
  4382  0019C0  D794               	goto	l235
  4383  0019C2  0A01               	xorlw	1	; case 27
  4384  0019C4  B4D8               	btfsc	status,2,c
  4385  0019C6  D794               	goto	l236
  4386  0019C8  0A07               	xorlw	7	; case 28
  4387  0019CA  B4D8               	btfsc	status,2,c
  4388  0019CC  D794               	goto	l237
  4389  0019CE  0A01               	xorlw	1	; case 29
  4390  0019D0  B4D8               	btfsc	status,2,c
  4391  0019D2  D794               	goto	l238
  4392  0019D4  0A03               	xorlw	3	; case 30
  4393  0019D6  B4D8               	btfsc	status,2,c
  4394  0019D8  D794               	goto	l239
  4395  0019DA  0A01               	xorlw	1	; case 31
  4396  0019DC  B4D8               	btfsc	status,2,c
  4397  0019DE  D794               	goto	l240
  4398  0019E0                     l241:
  4399  0019E0  0012               	return	
  4400  0019E2                     __end_of_nivel_alto:
  4401                           	opt stack 0
  4402                           tblptru	equ	0xFF8
  4403                           tblptrh	equ	0xFF7
  4404                           tblptrl	equ	0xFF6
  4405                           tablat	equ	0xFF5
  4406                           prodh	equ	0xFF4
  4407                           prodl	equ	0xFF3
  4408                           intcon	equ	0xFF2
  4409                           indf0	equ	0xFEF
  4410                           postinc0	equ	0xFEE
  4411                           fsr0h	equ	0xFEA
  4412                           fsr0l	equ	0xFE9
  4413                           wreg	equ	0xFE8
  4414                           postdec1	equ	0xFE5
  4415                           fsr1l	equ	0xFE1
  4416                           indf2	equ	0xFDF
  4417                           postinc2	equ	0xFDE
  4418                           postdec2	equ	0xFDD
  4419                           fsr2h	equ	0xFDA
  4420                           fsr2l	equ	0xFD9
  4421                           status	equ	0xFD8
  4422                           
  4423 ;; *************** function _lcd_ini *****************
  4424 ;; Defined at:
  4425 ;;		line 88 in file "lcd.h"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;		None
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  data            1   24[COMRAM] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;		None               void
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4439 ;;      Params:         0       0       0       0       0       0       0       0       0
  4440 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4441 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4442 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4443 ;;Total ram usage:        2 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    3
  4446 ;; This function calls:
  4447 ;;		_Lcd_Cmd
  4448 ;; This function is called by:
  4449 ;;		_main
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text20
  4454  00216A                     __ptext20:
  4455                           	opt stack 0
  4456  00216A                     _lcd_ini:
  4457                           	opt stack 27
  4458                           
  4459                           ;lcd.h: 89: unsigned char data;
  4460                           ;lcd.h: 90: TRISBbits.TRISB5 = 0; TRISBbits.TRISB4 = 0; TRISBbits.TRISB3 = 0; TRISBbits.
      +                          TRISB2 = 0; TRISBbits.TRISB1 = 0; TRISBbits.TRISB0 = 0;
  4461                           
  4462                           ;incstack = 0
  4463  00216A  9A93               	bcf	3987,5,c	;volatile
  4464  00216C  9893               	bcf	3987,4,c	;volatile
  4465  00216E  9693               	bcf	3987,3,c	;volatile
  4466  002170  9493               	bcf	3987,2,c	;volatile
  4467  002172  9293               	bcf	3987,1,c	;volatile
  4468  002174  9093               	bcf	3987,0,c	;volatile
  4469                           
  4470                           ;lcd.h: 91: LATBbits.LATB5 = 0; LATBbits.LATB4 = 0; LATBbits.LATB3 = 0; LATBbits.LATB2 =
      +                           0; LATBbits.LATB1 = 0; LATBbits.LATB0 = 0;
  4471  002176  9A8A               	bcf	3978,5,c	;volatile
  4472  002178  988A               	bcf	3978,4,c	;volatile
  4473  00217A  968A               	bcf	3978,3,c	;volatile
  4474  00217C  948A               	bcf	3978,2,c	;volatile
  4475  00217E  928A               	bcf	3978,1,c	;volatile
  4476  002180  908A               	bcf	3978,0,c	;volatile
  4477                           
  4478                           ;lcd.h: 92: _delay((unsigned long)((20)*(4000000/4000.0)));
  4479  002182  0E1A               	movlw	26
  4480  002184  6E18               	movwf	??_lcd_ini& (0+255),c
  4481  002186  0EF8               	movlw	248
  4482  002188                     u4447:
  4483  002188  2EE8               	decfsz	wreg,f,c
  4484  00218A  D7FE               	goto	u4447
  4485  00218C  2E18               	decfsz	??_lcd_ini& (0+255),f,c
  4486  00218E  D7FC               	goto	u4447
  4487  002190  D000               	nop2	
  4488                           
  4489                           ;lcd.h: 93: for(data = 1; data < 4; data ++)
  4490  002192  6E18               	movwf	??_lcd_ini& (0+255),c
  4491  002194  0E01               	movlw	1
  4492  002196  6E19               	movwf	lcd_ini@data,c
  4493  002198  5018               	movf	??_lcd_ini& (0+255),w,c
  4494  00219A  D015               	goto	L2
  4495  00219C                     l520:
  4496                           
  4497                           ;lcd.h: 94: {
  4498                           ;lcd.h: 95: LATBbits.LATB5 = 0; LATBbits.LATB4 = 0; LATBbits.LATB3 = 1; LATBbits.LATB2 =
      +                           1; LATBbits.LATB1 = 0; LATBbits.LATB0 = 0;
  4499  00219C  9A8A               	bcf	3978,5,c	;volatile
  4500  00219E  988A               	bcf	3978,4,c	;volatile
  4501  0021A0  868A               	bsf	3978,3,c	;volatile
  4502  0021A2  848A               	bsf	3978,2,c	;volatile
  4503  0021A4  928A               	bcf	3978,1,c	;volatile
  4504  0021A6  908A               	bcf	3978,0,c	;volatile
  4505                           
  4506                           ;lcd.h: 96: LATBbits.LATB5 = 0; LATBbits.LATB4 = 0; LATBbits.LATB3 = 1; LATBbits.LATB2 =
      +                           1; LATBbits.LATB1 = 1; LATBbits.LATB0 = 0;
  4507  0021A8  9A8A               	bcf	3978,5,c	;volatile
  4508  0021AA  988A               	bcf	3978,4,c	;volatile
  4509  0021AC  868A               	bsf	3978,3,c	;volatile
  4510  0021AE  848A               	bsf	3978,2,c	;volatile
  4511  0021B0  828A               	bsf	3978,1,c	;volatile
  4512  0021B2  908A               	bcf	3978,0,c	;volatile
  4513                           
  4514                           ;lcd.h: 97: _delay((unsigned long)((5)*(4000000/4000.0)));
  4515  0021B4  0E07               	movlw	7
  4516  0021B6  6E18               	movwf	??_lcd_ini& (0+255),c
  4517  0021B8  0E7D               	movlw	125
  4518  0021BA                     u4457:
  4519  0021BA  2EE8               	decfsz	wreg,f,c
  4520  0021BC  D7FE               	goto	u4457
  4521  0021BE  2E18               	decfsz	??_lcd_ini& (0+255),f,c
  4522  0021C0  D7FC               	goto	u4457
  4523  0021C2  F000               	nop	
  4524  0021C4  2A19               	incf	lcd_ini@data,f,c
  4525  0021C6                     L2:
  4526  0021C6  0E03               	movlw	3
  4527  0021C8  6419               	cpfsgt	lcd_ini@data,c
  4528  0021CA  D7E8               	goto	l520
  4529                           
  4530                           ;lcd.h: 98: }
  4531                           ;lcd.h: 99: LATBbits.LATB5 = 0; LATBbits.LATB4 = 0; LATBbits.LATB3 = 1; LATBbits.LATB2 =
      +                           0; LATBbits.LATB1 = 0; LATBbits.LATB0 = 0;
  4532  0021CC  9A8A               	bcf	3978,5,c	;volatile
  4533  0021CE  988A               	bcf	3978,4,c	;volatile
  4534  0021D0  868A               	bsf	3978,3,c	;volatile
  4535  0021D2  948A               	bcf	3978,2,c	;volatile
  4536  0021D4  928A               	bcf	3978,1,c	;volatile
  4537  0021D6  908A               	bcf	3978,0,c	;volatile
  4538                           
  4539                           ;lcd.h: 100: LATBbits.LATB5 = 0; LATBbits.LATB4 = 0; LATBbits.LATB3 = 1; LATBbits.LATB2 
      +                          = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 = 0;
  4540  0021D8  9A8A               	bcf	3978,5,c	;volatile
  4541  0021DA  988A               	bcf	3978,4,c	;volatile
  4542  0021DC  868A               	bsf	3978,3,c	;volatile
  4543  0021DE  948A               	bcf	3978,2,c	;volatile
  4544  0021E0  828A               	bsf	3978,1,c	;volatile
  4545  0021E2  908A               	bcf	3978,0,c	;volatile
  4546                           
  4547                           ;lcd.h: 101: _delay((unsigned long)((5)*(4000000/4000000.0)));
  4548  0021E4  F000               	nop	
  4549  0021E6  D000               	nop2		;2 cycle nop
  4550  0021E8  D000               	nop2		;2 cycle nop
  4551                           
  4552                           ;lcd.h: 102: LATBbits.LATB5 = 0; LATBbits.LATB4 = 0; LATBbits.LATB3 = 1; LATBbits.LATB2 
      +                          = 0; LATBbits.LATB1 = 0; LATBbits.LATB0 = 0;
  4553  0021EA  9A8A               	bcf	3978,5,c	;volatile
  4554  0021EC  988A               	bcf	3978,4,c	;volatile
  4555  0021EE  868A               	bsf	3978,3,c	;volatile
  4556  0021F0  948A               	bcf	3978,2,c	;volatile
  4557  0021F2  928A               	bcf	3978,1,c	;volatile
  4558  0021F4  908A               	bcf	3978,0,c	;volatile
  4559                           
  4560                           ;lcd.h: 103: _delay((unsigned long)((5)*(4000000/4000.0)));
  4561  0021F6  0E07               	movlw	7
  4562  0021F8  6E18               	movwf	??_lcd_ini& (0+255),c
  4563  0021FA  0E7D               	movlw	125
  4564  0021FC                     u4467:
  4565  0021FC  2EE8               	decfsz	wreg,f,c
  4566  0021FE  D7FE               	goto	u4467
  4567  002200  2E18               	decfsz	??_lcd_ini& (0+255),f,c
  4568  002202  D7FC               	goto	u4467
  4569  002204  F000               	nop	
  4570                           
  4571                           ;lcd.h: 104: data = 40; Lcd_Cmd(data);
  4572  002206  6E18               	movwf	??_lcd_ini& (0+255),c
  4573  002208  0E28               	movlw	40
  4574  00220A  6E19               	movwf	lcd_ini@data,c
  4575  00220C  5018               	movf	??_lcd_ini& (0+255),w,c
  4576  00220E  5019               	movf	lcd_ini@data,w,c
  4577  002210  EC99  F00F         	call	_Lcd_Cmd
  4578                           
  4579                           ;lcd.h: 105: data = 16; Lcd_Cmd(data);
  4580  002214  6E18               	movwf	??_lcd_ini& (0+255),c
  4581  002216  0E10               	movlw	16
  4582  002218  6E19               	movwf	lcd_ini@data,c
  4583  00221A  5018               	movf	??_lcd_ini& (0+255),w,c
  4584  00221C  5019               	movf	lcd_ini@data,w,c
  4585  00221E  EC99  F00F         	call	_Lcd_Cmd
  4586                           
  4587                           ;lcd.h: 106: data = 1; Lcd_Cmd(data);
  4588  002222  6E18               	movwf	??_lcd_ini& (0+255),c
  4589  002224  0E01               	movlw	1
  4590  002226  6E19               	movwf	lcd_ini@data,c
  4591  002228  5018               	movf	??_lcd_ini& (0+255),w,c
  4592  00222A  5019               	movf	lcd_ini@data,w,c
  4593  00222C  EC99  F00F         	call	_Lcd_Cmd
  4594                           
  4595                           ;lcd.h: 107: data = 15; Lcd_Cmd(data);
  4596  002230  6E18               	movwf	??_lcd_ini& (0+255),c
  4597  002232  0E0F               	movlw	15
  4598  002234  6E19               	movwf	lcd_ini@data,c
  4599  002236  5018               	movf	??_lcd_ini& (0+255),w,c
  4600  002238  5019               	movf	lcd_ini@data,w,c
  4601  00223A  EC99  F00F         	call	_Lcd_Cmd
  4602  00223E  0012               	return	
  4603  002240                     __end_of_lcd_ini:
  4604                           	opt stack 0
  4605                           tblptru	equ	0xFF8
  4606                           tblptrh	equ	0xFF7
  4607                           tblptrl	equ	0xFF6
  4608                           tablat	equ	0xFF5
  4609                           prodh	equ	0xFF4
  4610                           prodl	equ	0xFF3
  4611                           intcon	equ	0xFF2
  4612                           indf0	equ	0xFEF
  4613                           postinc0	equ	0xFEE
  4614                           fsr0h	equ	0xFEA
  4615                           fsr0l	equ	0xFE9
  4616                           wreg	equ	0xFE8
  4617                           postdec1	equ	0xFE5
  4618                           fsr1l	equ	0xFE1
  4619                           indf2	equ	0xFDF
  4620                           postinc2	equ	0xFDE
  4621                           postdec2	equ	0xFDD
  4622                           fsr2h	equ	0xFDA
  4623                           fsr2l	equ	0xFD9
  4624                           status	equ	0xFD8
  4625                           
  4626 ;; *************** function _lcd_escreve *****************
  4627 ;; Defined at:
  4628 ;;		line 110 in file "lcd.h"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  y               1    wreg     unsigned char 
  4631 ;;  x               1   23[COMRAM] unsigned char 
  4632 ;;  buffer          2   24[COMRAM] PTR const unsigned char 
  4633 ;;		 -> STR_3(2), STR_2(2), NULL(0), recv(64), 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  y               1   26[COMRAM] unsigned char 
  4636 ;;  data            1   27[COMRAM] unsigned char 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;		None               void
  4639 ;; Registers used:
  4640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4646 ;;      Params:         3       0       0       0       0       0       0       0       0
  4647 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4649 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4650 ;;Total ram usage:        5 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    3
  4653 ;; This function calls:
  4654 ;;		_Lcd_Chr_CP
  4655 ;;		_Lcd_Cmd
  4656 ;; This function is called by:
  4657 ;;		_main
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text21
  4662  002650                     __ptext21:
  4663                           	opt stack 0
  4664  002650                     _lcd_escreve:
  4665                           	opt stack 27
  4666                           
  4667                           ;incstack = 0
  4668                           ;lcd_escreve@y stored from wreg
  4669  002650  CFE8 F01B          	movff	wreg,lcd_escreve@y
  4670                           
  4671                           ;lcd.h: 111: unsigned char data;
  4672                           ;lcd.h: 112: switch(y){
  4673  002654  D00D               	goto	l4701
  4674  002656                     l4691:
  4675  002656  5018               	movf	lcd_escreve@x,w,c
  4676  002658  0F7F               	addlw	127
  4677  00265A  D008               	goto	L5
  4678  00265C                     l4693:
  4679  00265C  5018               	movf	lcd_escreve@x,w,c
  4680  00265E  0FBF               	addlw	191
  4681  002660  D005               	goto	L5
  4682  002662                     l4695:
  4683  002662  5018               	movf	lcd_escreve@x,w,c
  4684  002664  0F93               	addlw	147
  4685  002666  D002               	goto	L5
  4686  002668                     l4697:
  4687  002668  5018               	movf	lcd_escreve@x,w,c
  4688  00266A  0FD3               	addlw	211
  4689  00266C                     L5:
  4690  00266C  6E1C               	movwf	lcd_escreve@data,c
  4691  00266E  D00D               	goto	l4703
  4692  002670                     l4701:
  4693  002670  501B               	movf	lcd_escreve@y,w,c
  4694                           
  4695                           ; Switch size 1, requested type "space"
  4696                           ; Number of cases is 4, Range of values is 1 to 4
  4697                           ; switch strategies available:
  4698                           ; Name         Instructions Cycles
  4699                           ; simple_byte           13     7 (average)
  4700                           ;	Chosen strategy is simple_byte
  4701  002672  0A01               	xorlw	1	; case 1
  4702  002674  B4D8               	btfsc	status,2,c
  4703  002676  D7EF               	goto	l4691
  4704  002678  0A03               	xorlw	3	; case 2
  4705  00267A  B4D8               	btfsc	status,2,c
  4706  00267C  D7EF               	goto	l4693
  4707  00267E  0A01               	xorlw	1	; case 3
  4708  002680  B4D8               	btfsc	status,2,c
  4709  002682  D7EF               	goto	l4695
  4710  002684  0A07               	xorlw	7	; case 4
  4711  002686  B4D8               	btfsc	status,2,c
  4712  002688  D7EF               	goto	l4697
  4713  00268A                     l4703:
  4714                           
  4715                           ;lcd.h: 118: Lcd_Cmd(data);
  4716  00268A  501C               	movf	lcd_escreve@data,w,c
  4717  00268C  EC99  F00F         	call	_Lcd_Cmd
  4718                           
  4719                           ;lcd.h: 119: while(*buffer)
  4720  002690  D014               	goto	l4709
  4721  002692                     l4705:
  4722                           
  4723                           ;lcd.h: 120: {
  4724                           ;lcd.h: 121: Lcd_Chr_CP(*buffer);
  4725  002692  C019  FFF6         	movff	lcd_escreve@buffer,tblptrl
  4726  002696  C01A  FFF7         	movff	lcd_escreve@buffer+1,tblptrh
  4727  00269A  6AF8               	clrf	tblptru,c
  4728  00269C  0E07               	movlw	(high __ramtop+-1)
  4729  00269E  64F7               	cpfsgt	tblptrh,c
  4730  0026A0  D003               	bra	u3627
  4731  0026A2  0008               	tblrd		*
  4732  0026A4  50F5               	movf	tablat,w,c
  4733  0026A6  D005               	bra	u3620
  4734  0026A8                     u3627:
  4735  0026A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  4736  0026AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  4737  0026B0  50EF               	movf	indf0,w,c
  4738  0026B2                     u3620:
  4739  0026B2  ECF6  F00E         	call	_Lcd_Chr_CP
  4740                           
  4741                           ;lcd.h: 122: buffer++;
  4742  0026B6  4A19               	infsnz	lcd_escreve@buffer,f,c
  4743  0026B8  2A1A               	incf	lcd_escreve@buffer+1,f,c
  4744  0026BA                     l4709:
  4745  0026BA  C019  FFF6         	movff	lcd_escreve@buffer,tblptrl
  4746  0026BE  C01A  FFF7         	movff	lcd_escreve@buffer+1,tblptrh
  4747  0026C2  6AF8               	clrf	tblptru,c
  4748  0026C4  0E07               	movlw	(high __ramtop+-1)
  4749  0026C6  64F7               	cpfsgt	tblptrh,c
  4750  0026C8  D003               	bra	u3637
  4751  0026CA  0008               	tblrd		*
  4752  0026CC  50F5               	movf	tablat,w,c
  4753  0026CE  D005               	bra	u3630
  4754  0026D0                     u3637:
  4755  0026D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  4756  0026D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  4757  0026D8  50EF               	movf	indf0,w,c
  4758  0026DA                     u3630:
  4759  0026DA  0900               	iorlw	0
  4760  0026DC  B4D8               	btfsc	status,2,c
  4761                           
  4762                           ;lcd.h: 123: }
  4763                           ;lcd.h: 124: return;
  4764  0026DE  0012               	return	
  4765  0026E0  D7D8               	goto	l4705
  4766  0026E2                     __end_of_lcd_escreve:
  4767                           	opt stack 0
  4768                           tblptru	equ	0xFF8
  4769                           tblptrh	equ	0xFF7
  4770                           tblptrl	equ	0xFF6
  4771                           tablat	equ	0xFF5
  4772                           prodh	equ	0xFF4
  4773                           prodl	equ	0xFF3
  4774                           intcon	equ	0xFF2
  4775                           indf0	equ	0xFEF
  4776                           postinc0	equ	0xFEE
  4777                           fsr0h	equ	0xFEA
  4778                           fsr0l	equ	0xFE9
  4779                           wreg	equ	0xFE8
  4780                           postdec1	equ	0xFE5
  4781                           fsr1l	equ	0xFE1
  4782                           indf2	equ	0xFDF
  4783                           postinc2	equ	0xFDE
  4784                           postdec2	equ	0xFDD
  4785                           fsr2h	equ	0xFDA
  4786                           fsr2l	equ	0xFD9
  4787                           status	equ	0xFD8
  4788                           
  4789 ;; *************** function _Lcd_Cmd *****************
  4790 ;; Defined at:
  4791 ;;		line 170 in file "lcd.h"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  Cmd             1    wreg     unsigned char 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  Cmd             1   22[COMRAM] unsigned char 
  4796 ;; Return value:  Size  Location     Type
  4797 ;;		None               void
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4805 ;;      Params:         0       0       0       0       0       0       0       0       0
  4806 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4807 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4808 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4809 ;;Total ram usage:        3 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    2
  4812 ;; This function calls:
  4813 ;;		Nothing
  4814 ;; This function is called by:
  4815 ;;		_lcd_ini
  4816 ;;		_lcd_escreve
  4817 ;;		_main
  4818 ;;		_lcd_escreve2
  4819 ;;		_Lcd_Chr
  4820 ;;		_CGRAM_SanUSB
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text22
  4825  001F32                     __ptext22:
  4826                           	opt stack 0
  4827  001F32                     _Lcd_Cmd:
  4828                           	opt stack 27
  4829                           
  4830                           ;incstack = 0
  4831                           ;Lcd_Cmd@Cmd stored from wreg
  4832  001F32  CFE8 F017          	movff	wreg,Lcd_Cmd@Cmd
  4833                           
  4834                           ;lcd.h: 171: LATBbits.LATB1 = 0; LATBbits.LATB0 = 0;
  4835  001F36  928A               	bcf	3978,1,c	;volatile
  4836  001F38  908A               	bcf	3978,0,c	;volatile
  4837                           
  4838                           ;lcd.h: 172: LATBbits.LATB5 = (Cmd & 0b10000000)>>7; LATBbits.LATB4 = (Cmd & 0b01000000)
      +                          >>6;
  4839  001F3A  6A15               	clrf	??_Lcd_Cmd& (0+255),c
  4840  001F3C  AE17               	btfss	Lcd_Cmd@Cmd,7,c
  4841  001F3E  D001               	bra	u3135
  4842  001F40  2A15               	incf	??_Lcd_Cmd& (0+255),f,c
  4843  001F42                     u3135:
  4844  001F42  0E01               	movlw	1
  4845  001F44  1615               	andwf	??_Lcd_Cmd,f,c
  4846  001F46  3A15               	swapf	??_Lcd_Cmd,f,c
  4847  001F48  4615               	rlncf	??_Lcd_Cmd,f,c
  4848  001F4A  508A               	movf	3978,w,c	;volatile
  4849  001F4C  1815               	xorwf	??_Lcd_Cmd,w,c
  4850  001F4E  0BDF               	andlw	-33
  4851  001F50  1815               	xorwf	??_Lcd_Cmd,w,c
  4852  001F52  6E8A               	movwf	3978,c	;volatile
  4853  001F54  C017  F015         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  4854  001F58  0E06               	movlw	6
  4855  001F5A  6E16               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  4856  001F5C                     u3145:
  4857  001F5C  90D8               	bcf	status,0,c
  4858  001F5E  3215               	rrcf	??_Lcd_Cmd,f,c
  4859  001F60  2E16               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  4860  001F62  D7FC               	goto	u3145
  4861  001F64  0E01               	movlw	1
  4862  001F66  1615               	andwf	??_Lcd_Cmd,f,c
  4863  001F68  3A15               	swapf	??_Lcd_Cmd,f,c
  4864  001F6A  508A               	movf	3978,w,c	;volatile
  4865  001F6C  1815               	xorwf	??_Lcd_Cmd,w,c
  4866  001F6E  0BEF               	andlw	-17
  4867  001F70  1815               	xorwf	??_Lcd_Cmd,w,c
  4868  001F72  6E8A               	movwf	3978,c	;volatile
  4869                           
  4870                           ;lcd.h: 173: LATBbits.LATB3 = (Cmd & 0b00100000)>>5; LATBbits.LATB2 = (Cmd & 0b00010000)
      +                          >>4;
  4871  001F74  C017  F015         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  4872  001F78  0E05               	movlw	5
  4873  001F7A  6E16               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  4874  001F7C                     u3155:
  4875  001F7C  90D8               	bcf	status,0,c
  4876  001F7E  3215               	rrcf	??_Lcd_Cmd,f,c
  4877  001F80  2E16               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  4878  001F82  D7FC               	goto	u3155
  4879  001F84  0E01               	movlw	1
  4880  001F86  1615               	andwf	??_Lcd_Cmd,f,c
  4881  001F88  4615               	rlncf	??_Lcd_Cmd,f,c
  4882  001F8A  4615               	rlncf	??_Lcd_Cmd,f,c
  4883  001F8C  4615               	rlncf	??_Lcd_Cmd,f,c
  4884  001F8E  508A               	movf	3978,w,c	;volatile
  4885  001F90  1815               	xorwf	??_Lcd_Cmd,w,c
  4886  001F92  0BF7               	andlw	-9
  4887  001F94  1815               	xorwf	??_Lcd_Cmd,w,c
  4888  001F96  6E8A               	movwf	3978,c	;volatile
  4889  001F98  C017  F015         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  4890  001F9C  3A15               	swapf	??_Lcd_Cmd,f,c
  4891  001F9E  0E0F               	movlw	15
  4892  001FA0  1615               	andwf	??_Lcd_Cmd,f,c
  4893  001FA2  0E01               	movlw	1
  4894  001FA4  1615               	andwf	??_Lcd_Cmd,f,c
  4895  001FA6  4615               	rlncf	??_Lcd_Cmd,f,c
  4896  001FA8  4615               	rlncf	??_Lcd_Cmd,f,c
  4897  001FAA  508A               	movf	3978,w,c	;volatile
  4898  001FAC  1815               	xorwf	??_Lcd_Cmd,w,c
  4899  001FAE  0BFB               	andlw	-5
  4900  001FB0  1815               	xorwf	??_Lcd_Cmd,w,c
  4901  001FB2  6E8A               	movwf	3978,c	;volatile
  4902                           
  4903                           ;lcd.h: 174: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  4904  001FB4  F000               	nop	
  4905  001FB6  F000               	nop	
  4906  001FB8  F000               	nop	
  4907  001FBA  F000               	nop	
  4908  001FBC  F000               	nop	
  4909  001FBE  F000               	nop	
  4910  001FC0  F000               	nop	
  4911  001FC2  F000               	nop	
  4912  001FC4  F000               	nop	
  4913  001FC6  F000               	nop	
  4914                           
  4915                           ;lcd.h: 175: LATBbits.LATB1 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); LATBb
      +                          its.LATB1 = 0;
  4916  001FC8  828A               	bsf	3978,1,c	;volatile
  4917  001FCA  F000               	nop	
  4918  001FCC  D000               	nop2		;2 cycle nop
  4919  001FCE  D000               	nop2		;2 cycle nop
  4920  001FD0  928A               	bcf	3978,1,c	;volatile
  4921                           
  4922                           ;lcd.h: 177: LATBbits.LATB5 = (Cmd & 0b00001000)>>3; LATBbits.LATB4 = (Cmd & 0b00000100)
      +                          >>2;
  4923  001FD2  C017  F015         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  4924  001FD6  90D8               	bcf	status,0,c
  4925  001FD8  3215               	rrcf	??_Lcd_Cmd,f,c
  4926  001FDA  90D8               	bcf	status,0,c
  4927  001FDC  3215               	rrcf	??_Lcd_Cmd,f,c
  4928  001FDE  90D8               	bcf	status,0,c
  4929  001FE0  3215               	rrcf	??_Lcd_Cmd,f,c
  4930  001FE2  0E01               	movlw	1
  4931  001FE4  1615               	andwf	??_Lcd_Cmd,f,c
  4932  001FE6  3A15               	swapf	??_Lcd_Cmd,f,c
  4933  001FE8  4615               	rlncf	??_Lcd_Cmd,f,c
  4934  001FEA  508A               	movf	3978,w,c	;volatile
  4935  001FEC  1815               	xorwf	??_Lcd_Cmd,w,c
  4936  001FEE  0BDF               	andlw	-33
  4937  001FF0  1815               	xorwf	??_Lcd_Cmd,w,c
  4938  001FF2  6E8A               	movwf	3978,c	;volatile
  4939  001FF4  C017  F015         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  4940  001FF8  90D8               	bcf	status,0,c
  4941  001FFA  3215               	rrcf	??_Lcd_Cmd,f,c
  4942  001FFC  90D8               	bcf	status,0,c
  4943  001FFE  3215               	rrcf	??_Lcd_Cmd,f,c
  4944  002000  0E01               	movlw	1
  4945  002002  1615               	andwf	??_Lcd_Cmd,f,c
  4946  002004  3A15               	swapf	??_Lcd_Cmd,f,c
  4947  002006  508A               	movf	3978,w,c	;volatile
  4948  002008  1815               	xorwf	??_Lcd_Cmd,w,c
  4949  00200A  0BEF               	andlw	-17
  4950  00200C  1815               	xorwf	??_Lcd_Cmd,w,c
  4951  00200E  6E8A               	movwf	3978,c	;volatile
  4952                           
  4953                           ;lcd.h: 178: LATBbits.LATB3 = (Cmd & 0b00000010)>>1; LATBbits.LATB2 = (Cmd & 0b00000001);
  4954  002010  C017  F015         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  4955  002014  90D8               	bcf	status,0,c
  4956  002016  3215               	rrcf	??_Lcd_Cmd,f,c
  4957  002018  0E01               	movlw	1
  4958  00201A  1615               	andwf	??_Lcd_Cmd,f,c
  4959  00201C  4615               	rlncf	??_Lcd_Cmd,f,c
  4960  00201E  4615               	rlncf	??_Lcd_Cmd,f,c
  4961  002020  4615               	rlncf	??_Lcd_Cmd,f,c
  4962  002022  508A               	movf	3978,w,c	;volatile
  4963  002024  1815               	xorwf	??_Lcd_Cmd,w,c
  4964  002026  0BF7               	andlw	-9
  4965  002028  1815               	xorwf	??_Lcd_Cmd,w,c
  4966  00202A  6E8A               	movwf	3978,c	;volatile
  4967  00202C  C017  F015         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  4968  002030  0E01               	movlw	1
  4969  002032  1615               	andwf	??_Lcd_Cmd,f,c
  4970  002034  4615               	rlncf	??_Lcd_Cmd,f,c
  4971  002036  4615               	rlncf	??_Lcd_Cmd,f,c
  4972  002038  508A               	movf	3978,w,c	;volatile
  4973  00203A  1815               	xorwf	??_Lcd_Cmd,w,c
  4974  00203C  0BFB               	andlw	-5
  4975  00203E  1815               	xorwf	??_Lcd_Cmd,w,c
  4976  002040  6E8A               	movwf	3978,c	;volatile
  4977                           
  4978                           ;lcd.h: 179: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  4979  002042  F000               	nop	
  4980  002044  F000               	nop	
  4981  002046  F000               	nop	
  4982  002048  F000               	nop	
  4983  00204A  F000               	nop	
  4984  00204C  F000               	nop	
  4985  00204E  F000               	nop	
  4986  002050  F000               	nop	
  4987  002052  F000               	nop	
  4988  002054  F000               	nop	
  4989                           
  4990                           ;lcd.h: 180: LATBbits.LATB1 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); LATBb
      +                          its.LATB1 = 0;
  4991  002056  828A               	bsf	3978,1,c	;volatile
  4992  002058  F000               	nop	
  4993  00205A  D000               	nop2		;2 cycle nop
  4994  00205C  D000               	nop2		;2 cycle nop
  4995  00205E  928A               	bcf	3978,1,c	;volatile
  4996                           
  4997                           ;lcd.h: 181: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4998  002060  0E08               	movlw	8
  4999  002062  6E15               	movwf	??_Lcd_Cmd& (0+255),c
  5000  002064  0E23               	movlw	35
  5001  002066                     u4477:
  5002  002066  2EE8               	decfsz	wreg,f,c
  5003  002068  D7FE               	goto	u4477
  5004  00206A  2E15               	decfsz	??_Lcd_Cmd& (0+255),f,c
  5005  00206C  D7FC               	goto	u4477
  5006  00206E  F000               	nop	
  5007  002070  0012               	return	
  5008  002072                     __end_of_Lcd_Cmd:
  5009                           	opt stack 0
  5010                           tblptru	equ	0xFF8
  5011                           tblptrh	equ	0xFF7
  5012                           tblptrl	equ	0xFF6
  5013                           tablat	equ	0xFF5
  5014                           prodh	equ	0xFF4
  5015                           prodl	equ	0xFF3
  5016                           intcon	equ	0xFF2
  5017                           indf0	equ	0xFEF
  5018                           postinc0	equ	0xFEE
  5019                           fsr0h	equ	0xFEA
  5020                           fsr0l	equ	0xFE9
  5021                           wreg	equ	0xFE8
  5022                           postdec1	equ	0xFE5
  5023                           fsr1l	equ	0xFE1
  5024                           indf2	equ	0xFDF
  5025                           postinc2	equ	0xFDE
  5026                           postdec2	equ	0xFDD
  5027                           fsr2h	equ	0xFDA
  5028                           fsr2l	equ	0xFD9
  5029                           status	equ	0xFD8
  5030                           
  5031 ;; *************** function _Lcd_Chr_CP *****************
  5032 ;; Defined at:
  5033 ;;		line 156 in file "lcd.h"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  Chr_CP          1    wreg     unsigned char 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;  Chr_CP          1   22[COMRAM] unsigned char 
  5038 ;; Return value:  Size  Location     Type
  5039 ;;		None               void
  5040 ;; Registers used:
  5041 ;;		wreg, status,2, status,0
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5047 ;;      Params:         0       0       0       0       0       0       0       0       0
  5048 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5049 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5050 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5051 ;;Total ram usage:        3 bytes
  5052 ;; Hardware stack levels used:    1
  5053 ;; Hardware stack levels required when called:    2
  5054 ;; This function calls:
  5055 ;;		Nothing
  5056 ;; This function is called by:
  5057 ;;		_lcd_escreve
  5058 ;;		_lcd_escreve2
  5059 ;;		_Lcd_Chr
  5060 ;;		_CGRAM_SanUSB
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text23
  5065  001DEC                     __ptext23:
  5066                           	opt stack 0
  5067  001DEC                     _Lcd_Chr_CP:
  5068                           	opt stack 27
  5069                           
  5070                           ;incstack = 0
  5071                           ;Lcd_Chr_CP@Chr_CP stored from wreg
  5072  001DEC  CFE8 F017          	movff	wreg,Lcd_Chr_CP@Chr_CP
  5073                           
  5074                           ;lcd.h: 157: LATBbits.LATB1 = 0; LATBbits.LATB0 = 1;
  5075  001DF0  928A               	bcf	3978,1,c	;volatile
  5076  001DF2  808A               	bsf	3978,0,c	;volatile
  5077                           
  5078                           ;lcd.h: 158: LATBbits.LATB5 = (Chr_CP & 0b10000000)>>7; LATBbits.LATB4 = (Chr_CP & 0b010
      +                          00000)>>6;
  5079  001DF4  6A15               	clrf	??_Lcd_Chr_CP& (0+255),c
  5080  001DF6  AE17               	btfss	Lcd_Chr_CP@Chr_CP,7,c
  5081  001DF8  D001               	bra	u3165
  5082  001DFA  2A15               	incf	??_Lcd_Chr_CP& (0+255),f,c
  5083  001DFC                     u3165:
  5084  001DFC  0E01               	movlw	1
  5085  001DFE  1615               	andwf	??_Lcd_Chr_CP,f,c
  5086  001E00  3A15               	swapf	??_Lcd_Chr_CP,f,c
  5087  001E02  4615               	rlncf	??_Lcd_Chr_CP,f,c
  5088  001E04  508A               	movf	3978,w,c	;volatile
  5089  001E06  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5090  001E08  0BDF               	andlw	-33
  5091  001E0A  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5092  001E0C  6E8A               	movwf	3978,c	;volatile
  5093  001E0E  C017  F015         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  5094  001E12  0E06               	movlw	6
  5095  001E14  6E16               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  5096  001E16                     u3175:
  5097  001E16  90D8               	bcf	status,0,c
  5098  001E18  3215               	rrcf	??_Lcd_Chr_CP,f,c
  5099  001E1A  2E16               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  5100  001E1C  D7FC               	goto	u3175
  5101  001E1E  0E01               	movlw	1
  5102  001E20  1615               	andwf	??_Lcd_Chr_CP,f,c
  5103  001E22  3A15               	swapf	??_Lcd_Chr_CP,f,c
  5104  001E24  508A               	movf	3978,w,c	;volatile
  5105  001E26  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5106  001E28  0BEF               	andlw	-17
  5107  001E2A  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5108  001E2C  6E8A               	movwf	3978,c	;volatile
  5109                           
  5110                           ;lcd.h: 159: LATBbits.LATB3 = (Chr_CP & 0b00100000)>>5; LATBbits.LATB2 = (Chr_CP & 0b000
      +                          10000)>>4;
  5111  001E2E  C017  F015         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  5112  001E32  0E05               	movlw	5
  5113  001E34  6E16               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  5114  001E36                     u3185:
  5115  001E36  90D8               	bcf	status,0,c
  5116  001E38  3215               	rrcf	??_Lcd_Chr_CP,f,c
  5117  001E3A  2E16               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  5118  001E3C  D7FC               	goto	u3185
  5119  001E3E  0E01               	movlw	1
  5120  001E40  1615               	andwf	??_Lcd_Chr_CP,f,c
  5121  001E42  4615               	rlncf	??_Lcd_Chr_CP,f,c
  5122  001E44  4615               	rlncf	??_Lcd_Chr_CP,f,c
  5123  001E46  4615               	rlncf	??_Lcd_Chr_CP,f,c
  5124  001E48  508A               	movf	3978,w,c	;volatile
  5125  001E4A  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5126  001E4C  0BF7               	andlw	-9
  5127  001E4E  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5128  001E50  6E8A               	movwf	3978,c	;volatile
  5129  001E52  C017  F015         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  5130  001E56  3A15               	swapf	??_Lcd_Chr_CP,f,c
  5131  001E58  0E0F               	movlw	15
  5132  001E5A  1615               	andwf	??_Lcd_Chr_CP,f,c
  5133  001E5C  0E01               	movlw	1
  5134  001E5E  1615               	andwf	??_Lcd_Chr_CP,f,c
  5135  001E60  4615               	rlncf	??_Lcd_Chr_CP,f,c
  5136  001E62  4615               	rlncf	??_Lcd_Chr_CP,f,c
  5137  001E64  508A               	movf	3978,w,c	;volatile
  5138  001E66  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5139  001E68  0BFB               	andlw	-5
  5140  001E6A  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5141  001E6C  6E8A               	movwf	3978,c	;volatile
  5142                           
  5143                           ;lcd.h: 160: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  5144  001E6E  F000               	nop	
  5145  001E70  F000               	nop	
  5146  001E72  F000               	nop	
  5147  001E74  F000               	nop	
  5148  001E76  F000               	nop	
  5149  001E78  F000               	nop	
  5150  001E7A  F000               	nop	
  5151  001E7C  F000               	nop	
  5152  001E7E  F000               	nop	
  5153  001E80  F000               	nop	
  5154                           
  5155                           ;lcd.h: 161: LATBbits.LATB1 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); LATBb
      +                          its.LATB1 = 0;
  5156  001E82  828A               	bsf	3978,1,c	;volatile
  5157  001E84  F000               	nop	
  5158  001E86  D000               	nop2		;2 cycle nop
  5159  001E88  D000               	nop2		;2 cycle nop
  5160  001E8A  928A               	bcf	3978,1,c	;volatile
  5161                           
  5162                           ;lcd.h: 163: LATBbits.LATB5 = (Chr_CP & 0b00001000)>>3; LATBbits.LATB4 = (Chr_CP & 0b000
      +                          00100)>>2;
  5163  001E8C  C017  F015         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  5164  001E90  90D8               	bcf	status,0,c
  5165  001E92  3215               	rrcf	??_Lcd_Chr_CP,f,c
  5166  001E94  90D8               	bcf	status,0,c
  5167  001E96  3215               	rrcf	??_Lcd_Chr_CP,f,c
  5168  001E98  90D8               	bcf	status,0,c
  5169  001E9A  3215               	rrcf	??_Lcd_Chr_CP,f,c
  5170  001E9C  0E01               	movlw	1
  5171  001E9E  1615               	andwf	??_Lcd_Chr_CP,f,c
  5172  001EA0  3A15               	swapf	??_Lcd_Chr_CP,f,c
  5173  001EA2  4615               	rlncf	??_Lcd_Chr_CP,f,c
  5174  001EA4  508A               	movf	3978,w,c	;volatile
  5175  001EA6  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5176  001EA8  0BDF               	andlw	-33
  5177  001EAA  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5178  001EAC  6E8A               	movwf	3978,c	;volatile
  5179  001EAE  C017  F015         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  5180  001EB2  90D8               	bcf	status,0,c
  5181  001EB4  3215               	rrcf	??_Lcd_Chr_CP,f,c
  5182  001EB6  90D8               	bcf	status,0,c
  5183  001EB8  3215               	rrcf	??_Lcd_Chr_CP,f,c
  5184  001EBA  0E01               	movlw	1
  5185  001EBC  1615               	andwf	??_Lcd_Chr_CP,f,c
  5186  001EBE  3A15               	swapf	??_Lcd_Chr_CP,f,c
  5187  001EC0  508A               	movf	3978,w,c	;volatile
  5188  001EC2  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5189  001EC4  0BEF               	andlw	-17
  5190  001EC6  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5191  001EC8  6E8A               	movwf	3978,c	;volatile
  5192                           
  5193                           ;lcd.h: 164: LATBbits.LATB3 = (Chr_CP & 0b00000010)>>1; LATBbits.LATB2 = (Chr_CP & 0b000
      +                          00001);
  5194  001ECA  C017  F015         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  5195  001ECE  90D8               	bcf	status,0,c
  5196  001ED0  3215               	rrcf	??_Lcd_Chr_CP,f,c
  5197  001ED2  0E01               	movlw	1
  5198  001ED4  1615               	andwf	??_Lcd_Chr_CP,f,c
  5199  001ED6  4615               	rlncf	??_Lcd_Chr_CP,f,c
  5200  001ED8  4615               	rlncf	??_Lcd_Chr_CP,f,c
  5201  001EDA  4615               	rlncf	??_Lcd_Chr_CP,f,c
  5202  001EDC  508A               	movf	3978,w,c	;volatile
  5203  001EDE  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5204  001EE0  0BF7               	andlw	-9
  5205  001EE2  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5206  001EE4  6E8A               	movwf	3978,c	;volatile
  5207  001EE6  C017  F015         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  5208  001EEA  0E01               	movlw	1
  5209  001EEC  1615               	andwf	??_Lcd_Chr_CP,f,c
  5210  001EEE  4615               	rlncf	??_Lcd_Chr_CP,f,c
  5211  001EF0  4615               	rlncf	??_Lcd_Chr_CP,f,c
  5212  001EF2  508A               	movf	3978,w,c	;volatile
  5213  001EF4  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5214  001EF6  0BFB               	andlw	-5
  5215  001EF8  1815               	xorwf	??_Lcd_Chr_CP,w,c
  5216  001EFA  6E8A               	movwf	3978,c	;volatile
  5217                           
  5218                           ;lcd.h: 165: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  5219  001EFC  F000               	nop	
  5220  001EFE  F000               	nop	
  5221  001F00  F000               	nop	
  5222  001F02  F000               	nop	
  5223  001F04  F000               	nop	
  5224  001F06  F000               	nop	
  5225  001F08  F000               	nop	
  5226  001F0A  F000               	nop	
  5227  001F0C  F000               	nop	
  5228  001F0E  F000               	nop	
  5229                           
  5230                           ;lcd.h: 166: LATBbits.LATB1 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); LATBb
      +                          its.LATB1 = 0;
  5231  001F10  828A               	bsf	3978,1,c	;volatile
  5232  001F12  F000               	nop	
  5233  001F14  D000               	nop2		;2 cycle nop
  5234  001F16  D000               	nop2		;2 cycle nop
  5235  001F18  928A               	bcf	3978,1,c	;volatile
  5236                           
  5237                           ;lcd.h: 167: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned long)((5
      +                          500)*(4000000/4000000.0)));
  5238  001F1A  F000               	nop	
  5239  001F1C  D000               	nop2		;2 cycle nop
  5240  001F1E  D000               	nop2		;2 cycle nop
  5241  001F20  0E08               	movlw	8
  5242  001F22  6E15               	movwf	??_Lcd_Chr_CP& (0+255),c
  5243  001F24  0E23               	movlw	35
  5244  001F26                     u4487:
  5245  001F26  2EE8               	decfsz	wreg,f,c
  5246  001F28  D7FE               	goto	u4487
  5247  001F2A  2E15               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  5248  001F2C  D7FC               	goto	u4487
  5249  001F2E  F000               	nop	
  5250  001F30  0012               	return	
  5251  001F32                     __end_of_Lcd_Chr_CP:
  5252                           	opt stack 0
  5253                           tblptru	equ	0xFF8
  5254                           tblptrh	equ	0xFF7
  5255                           tblptrl	equ	0xFF6
  5256                           tablat	equ	0xFF5
  5257                           prodh	equ	0xFF4
  5258                           prodl	equ	0xFF3
  5259                           intcon	equ	0xFF2
  5260                           indf0	equ	0xFEF
  5261                           postinc0	equ	0xFEE
  5262                           fsr0h	equ	0xFEA
  5263                           fsr0l	equ	0xFE9
  5264                           wreg	equ	0xFE8
  5265                           postdec1	equ	0xFE5
  5266                           fsr1l	equ	0xFE1
  5267                           indf2	equ	0xFDF
  5268                           postinc2	equ	0xFDE
  5269                           postdec2	equ	0xFDD
  5270                           fsr2h	equ	0xFDA
  5271                           fsr2l	equ	0xFD9
  5272                           status	equ	0xFD8
  5273                           
  5274 ;; *************** function _inverte_saida *****************
  5275 ;; Defined at:
  5276 ;;		line 254 in file "SanUSB1X.h"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  pino            2   20[COMRAM] unsigned int 
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;		None               void
  5283 ;; Registers used:
  5284 ;;		wreg, status,2, status,0
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5290 ;;      Params:         2       0       0       0       0       0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5292 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5293 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5294 ;;Total ram usage:        4 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    2
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_main
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text24
  5305  0019E2                     __ptext24:
  5306                           	opt stack 0
  5307  0019E2                     _inverte_saida:
  5308                           	opt stack 28
  5309                           
  5310                           ;SanUSB1X.h: 256: switch(pino){
  5311                           
  5312                           ;incstack = 0
  5313  0019E2  D051               	goto	l4603
  5314  0019E4                     l280:
  5315  0019E4  9092               	bcf	3986,0,c	;volatile
  5316  0019E6  7080               	btg	3968,0,c	;volatile
  5317  0019E8  D0A8               	goto	l308
  5318  0019EA                     l282:
  5319  0019EA  9292               	bcf	3986,1,c	;volatile
  5320  0019EC  7280               	btg	3968,1,c	;volatile
  5321  0019EE  D0A5               	goto	l308
  5322  0019F0                     l283:
  5323  0019F0  9492               	bcf	3986,2,c	;volatile
  5324  0019F2  7480               	btg	3968,2,c	;volatile
  5325  0019F4  D0A2               	goto	l308
  5326  0019F6                     l284:
  5327  0019F6  9692               	bcf	3986,3,c	;volatile
  5328  0019F8  7680               	btg	3968,3,c	;volatile
  5329  0019FA  D09F               	goto	l308
  5330  0019FC                     l285:
  5331  0019FC  9892               	bcf	3986,4,c	;volatile
  5332  0019FE  7880               	btg	3968,4,c	;volatile
  5333  001A00  D09C               	goto	l308
  5334  001A02                     l286:
  5335  001A02  9A92               	bcf	3986,5,c	;volatile
  5336  001A04  7A80               	btg	3968,5,c	;volatile
  5337  001A06  D099               	goto	l308
  5338  001A08                     l287:
  5339  001A08  9093               	bcf	3987,0,c	;volatile
  5340  001A0A  7081               	btg	3969,0,c	;volatile
  5341  001A0C  D096               	goto	l308
  5342  001A0E                     l288:
  5343  001A0E  9293               	bcf	3987,1,c	;volatile
  5344  001A10  7281               	btg	3969,1,c	;volatile
  5345  001A12  D093               	goto	l308
  5346  001A14                     l289:
  5347  001A14  9493               	bcf	3987,2,c	;volatile
  5348  001A16  7481               	btg	3969,2,c	;volatile
  5349  001A18  D090               	goto	l308
  5350  001A1A                     l290:
  5351  001A1A  9693               	bcf	3987,3,c	;volatile
  5352  001A1C  7681               	btg	3969,3,c	;volatile
  5353  001A1E  D08D               	goto	l308
  5354  001A20                     l291:
  5355  001A20  9893               	bcf	3987,4,c	;volatile
  5356  001A22  7881               	btg	3969,4,c	;volatile
  5357  001A24  D08A               	goto	l308
  5358  001A26                     l292:
  5359  001A26  9A93               	bcf	3987,5,c	;volatile
  5360  001A28  7A81               	btg	3969,5,c	;volatile
  5361  001A2A  D087               	goto	l308
  5362  001A2C                     l293:
  5363  001A2C  9C93               	bcf	3987,6,c	;volatile
  5364  001A2E  7C81               	btg	3969,6,c	;volatile
  5365  001A30  D084               	goto	l308
  5366  001A32                     l294:
  5367  001A32  9E93               	bcf	3987,7,c	;volatile
  5368  001A34  7E81               	btg	3969,7,c	;volatile
  5369  001A36  D081               	goto	l308
  5370  001A38                     l295:
  5371  001A38  9094               	bcf	3988,0,c	;volatile
  5372  001A3A  7082               	btg	3970,0,c	;volatile
  5373  001A3C  D07E               	goto	l308
  5374  001A3E                     l296:
  5375  001A3E  9294               	bcf	3988,1,c	;volatile
  5376  001A40  7282               	btg	3970,1,c	;volatile
  5377  001A42  D07B               	goto	l308
  5378  001A44                     l297:
  5379  001A44  9494               	bcf	3988,2,c	;volatile
  5380  001A46  7482               	btg	3970,2,c	;volatile
  5381  001A48  D078               	goto	l308
  5382  001A4A                     l298:
  5383  001A4A  9C94               	bcf	3988,6,c	;volatile
  5384  001A4C  7C82               	btg	3970,6,c	;volatile
  5385  001A4E  D075               	goto	l308
  5386  001A50                     l299:
  5387  001A50  9E94               	bcf	3988,7,c	;volatile
  5388  001A52  7E82               	btg	3970,7,c	;volatile
  5389  001A54  D072               	goto	l308
  5390  001A56                     l300:
  5391  001A56  9095               	bcf	3989,0,c	;volatile
  5392  001A58  7083               	btg	3971,0,c	;volatile
  5393  001A5A  D06F               	goto	l308
  5394  001A5C                     l301:
  5395  001A5C  9295               	bcf	3989,1,c	;volatile
  5396  001A5E  7283               	btg	3971,1,c	;volatile
  5397  001A60  D06C               	goto	l308
  5398  001A62                     l302:
  5399  001A62  9495               	bcf	3989,2,c	;volatile
  5400  001A64  7483               	btg	3971,2,c	;volatile
  5401  001A66  D069               	goto	l308
  5402  001A68                     l303:
  5403  001A68  9695               	bcf	3989,3,c	;volatile
  5404  001A6A  7683               	btg	3971,3,c	;volatile
  5405  001A6C  D066               	goto	l308
  5406  001A6E                     l304:
  5407  001A6E  9895               	bcf	3989,4,c	;volatile
  5408  001A70  7883               	btg	3971,4,c	;volatile
  5409  001A72  D063               	goto	l308
  5410  001A74                     l305:
  5411  001A74  9A95               	bcf	3989,5,c	;volatile
  5412  001A76  7A83               	btg	3971,5,c	;volatile
  5413  001A78  D060               	goto	l308
  5414  001A7A                     l306:
  5415  001A7A  9C95               	bcf	3989,6,c	;volatile
  5416  001A7C  7C83               	btg	3971,6,c	;volatile
  5417  001A7E  D05D               	goto	l308
  5418  001A80                     l307:
  5419  001A80  9E95               	bcf	3989,7,c	;volatile
  5420  001A82  7E83               	btg	3971,7,c	;volatile
  5421  001A84  D05A               	goto	l308
  5422  001A86                     l4603:
  5423  001A86  C015  F017         	movff	inverte_saida@pino,??_inverte_saida
  5424  001A8A  C016  F018         	movff	inverte_saida@pino+1,??_inverte_saida+1
  5425                           
  5426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5427                           ; Switch size 1, requested type "space"
  5428                           ; Number of cases is 1, Range of values is 124 to 124
  5429                           ; switch strategies available:
  5430                           ; Name         Instructions Cycles
  5431                           ; simple_byte            4     3 (average)
  5432                           ;	Chosen strategy is simple_byte
  5433  001A8E  5018               	movf	??_inverte_saida+1,w,c
  5434  001A90  0A7C               	xorlw	124	; case 124
  5435  001A92  A4D8               	btfss	status,2,c
  5436  001A94  D052               	goto	l308
  5437                           
  5438                           ; Switch size 1, requested type "space"
  5439                           ; Number of cases is 27, Range of values is 0 to 31
  5440                           ; switch strategies available:
  5441                           ; Name         Instructions Cycles
  5442                           ; simple_byte           82    42 (average)
  5443                           ;	Chosen strategy is simple_byte
  5444  001A96  5017               	movf	??_inverte_saida,w,c
  5445  001A98  0A00               	xorlw	0	; case 0
  5446  001A9A  B4D8               	btfsc	status,2,c
  5447  001A9C  D7A3               	goto	l280
  5448  001A9E  0A01               	xorlw	1	; case 1
  5449  001AA0  B4D8               	btfsc	status,2,c
  5450  001AA2  D7A3               	goto	l282
  5451  001AA4  0A03               	xorlw	3	; case 2
  5452  001AA6  B4D8               	btfsc	status,2,c
  5453  001AA8  D7A3               	goto	l283
  5454  001AAA  0A01               	xorlw	1	; case 3
  5455  001AAC  B4D8               	btfsc	status,2,c
  5456  001AAE  D7A3               	goto	l284
  5457  001AB0  0A07               	xorlw	7	; case 4
  5458  001AB2  B4D8               	btfsc	status,2,c
  5459  001AB4  D7A3               	goto	l285
  5460  001AB6  0A01               	xorlw	1	; case 5
  5461  001AB8  B4D8               	btfsc	status,2,c
  5462  001ABA  D7A3               	goto	l286
  5463  001ABC  0A0D               	xorlw	13	; case 8
  5464  001ABE  B4D8               	btfsc	status,2,c
  5465  001AC0  D7A3               	goto	l287
  5466  001AC2  0A01               	xorlw	1	; case 9
  5467  001AC4  B4D8               	btfsc	status,2,c
  5468  001AC6  D7A3               	goto	l288
  5469  001AC8  0A03               	xorlw	3	; case 10
  5470  001ACA  B4D8               	btfsc	status,2,c
  5471  001ACC  D7A3               	goto	l289
  5472  001ACE  0A01               	xorlw	1	; case 11
  5473  001AD0  B4D8               	btfsc	status,2,c
  5474  001AD2  D7A3               	goto	l290
  5475  001AD4  0A07               	xorlw	7	; case 12
  5476  001AD6  B4D8               	btfsc	status,2,c
  5477  001AD8  D7A3               	goto	l291
  5478  001ADA  0A01               	xorlw	1	; case 13
  5479  001ADC  B4D8               	btfsc	status,2,c
  5480  001ADE  D7A3               	goto	l292
  5481  001AE0  0A03               	xorlw	3	; case 14
  5482  001AE2  B4D8               	btfsc	status,2,c
  5483  001AE4  D7A3               	goto	l293
  5484  001AE6  0A01               	xorlw	1	; case 15
  5485  001AE8  B4D8               	btfsc	status,2,c
  5486  001AEA  D7A3               	goto	l294
  5487  001AEC  0A1F               	xorlw	31	; case 16
  5488  001AEE  B4D8               	btfsc	status,2,c
  5489  001AF0  D7A3               	goto	l295
  5490  001AF2  0A01               	xorlw	1	; case 17
  5491  001AF4  B4D8               	btfsc	status,2,c
  5492  001AF6  D7A3               	goto	l296
  5493  001AF8  0A03               	xorlw	3	; case 18
  5494  001AFA  B4D8               	btfsc	status,2,c
  5495  001AFC  D7A3               	goto	l297
  5496  001AFE  0A04               	xorlw	4	; case 22
  5497  001B00  B4D8               	btfsc	status,2,c
  5498  001B02  D7A3               	goto	l298
  5499  001B04  0A01               	xorlw	1	; case 23
  5500  001B06  B4D8               	btfsc	status,2,c
  5501  001B08  D7A3               	goto	l299
  5502  001B0A  0A0F               	xorlw	15	; case 24
  5503  001B0C  B4D8               	btfsc	status,2,c
  5504  001B0E  D7A3               	goto	l300
  5505  001B10  0A01               	xorlw	1	; case 25
  5506  001B12  B4D8               	btfsc	status,2,c
  5507  001B14  D7A3               	goto	l301
  5508  001B16  0A03               	xorlw	3	; case 26
  5509  001B18  B4D8               	btfsc	status,2,c
  5510  001B1A  D7A3               	goto	l302
  5511  001B1C  0A01               	xorlw	1	; case 27
  5512  001B1E  B4D8               	btfsc	status,2,c
  5513  001B20  D7A3               	goto	l303
  5514  001B22  0A07               	xorlw	7	; case 28
  5515  001B24  B4D8               	btfsc	status,2,c
  5516  001B26  D7A3               	goto	l304
  5517  001B28  0A01               	xorlw	1	; case 29
  5518  001B2A  B4D8               	btfsc	status,2,c
  5519  001B2C  D7A3               	goto	l305
  5520  001B2E  0A03               	xorlw	3	; case 30
  5521  001B30  B4D8               	btfsc	status,2,c
  5522  001B32  D7A3               	goto	l306
  5523  001B34  0A01               	xorlw	1	; case 31
  5524  001B36  B4D8               	btfsc	status,2,c
  5525  001B38  D7A3               	goto	l307
  5526  001B3A                     l308:
  5527  001B3A  0012               	return	
  5528  001B3C                     __end_of_inverte_saida:
  5529                           	opt stack 0
  5530                           tblptru	equ	0xFF8
  5531                           tblptrh	equ	0xFF7
  5532                           tblptrl	equ	0xFF6
  5533                           tablat	equ	0xFF5
  5534                           prodh	equ	0xFF4
  5535                           prodl	equ	0xFF3
  5536                           intcon	equ	0xFF2
  5537                           indf0	equ	0xFEF
  5538                           postinc0	equ	0xFEE
  5539                           fsr0h	equ	0xFEA
  5540                           fsr0l	equ	0xFE9
  5541                           wreg	equ	0xFE8
  5542                           postdec1	equ	0xFE5
  5543                           fsr1l	equ	0xFE1
  5544                           indf2	equ	0xFDF
  5545                           postinc2	equ	0xFDE
  5546                           postdec2	equ	0xFDD
  5547                           fsr2h	equ	0xFDA
  5548                           fsr2l	equ	0xFD9
  5549                           status	equ	0xFD8
  5550                           
  5551 ;; *************** function _init_buffer *****************
  5552 ;; Defined at:
  5553 ;;		line 30 in file "main.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  buffer          2   20[COMRAM] PTR struct .
  5556 ;;		 -> buffer(70), 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;		None
  5559 ;; Return value:  Size  Location     Type
  5560 ;;		None               void
  5561 ;; Registers used:
  5562 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5568 ;;      Params:         2       0       0       0       0       0       0       0       0
  5569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5571 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5572 ;;Total ram usage:        2 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:    2
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_main
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text25
  5583  002C2C                     __ptext25:
  5584                           	opt stack 0
  5585  002C2C                     _init_buffer:
  5586                           	opt stack 28
  5587                           
  5588                           ;main.c: 31: buffer->first = 0;
  5589                           
  5590                           ;incstack = 0
  5591  002C2C  EE20 F040          	lfsr	2,64
  5592  002C30  5015               	movf	init_buffer@buffer,w,c
  5593  002C32  26D9               	addwf	fsr2l,f,c
  5594  002C34  5016               	movf	init_buffer@buffer+1,w,c
  5595  002C36  22DA               	addwfc	fsr2h,f,c
  5596  002C38  0E00               	movlw	0
  5597  002C3A  6EDE               	movwf	postinc2,c
  5598  002C3C  0E00               	movlw	0
  5599  002C3E  6EDD               	movwf	postdec2,c
  5600                           
  5601                           ;main.c: 32: buffer->last = 0;
  5602  002C40  EE20 F042          	lfsr	2,66
  5603  002C44  5015               	movf	init_buffer@buffer,w,c
  5604  002C46  26D9               	addwf	fsr2l,f,c
  5605  002C48  5016               	movf	init_buffer@buffer+1,w,c
  5606  002C4A  22DA               	addwfc	fsr2h,f,c
  5607  002C4C  0E00               	movlw	0
  5608  002C4E  6EDE               	movwf	postinc2,c
  5609  002C50  0E00               	movlw	0
  5610  002C52  6EDD               	movwf	postdec2,c
  5611                           
  5612                           ;main.c: 33: buffer->count = 0;
  5613  002C54  EE20 F044          	lfsr	2,68
  5614  002C58  5015               	movf	init_buffer@buffer,w,c
  5615  002C5A  26D9               	addwf	fsr2l,f,c
  5616  002C5C  5016               	movf	init_buffer@buffer+1,w,c
  5617  002C5E  22DA               	addwfc	fsr2h,f,c
  5618  002C60  0E00               	movlw	0
  5619  002C62  6EDE               	movwf	postinc2,c
  5620  002C64  0E00               	movlw	0
  5621  002C66  6EDD               	movwf	postdec2,c
  5622  002C68  0012               	return	
  5623  002C6A                     __end_of_init_buffer:
  5624                           	opt stack 0
  5625                           tblptru	equ	0xFF8
  5626                           tblptrh	equ	0xFF7
  5627                           tblptrl	equ	0xFF6
  5628                           tablat	equ	0xFF5
  5629                           prodh	equ	0xFF4
  5630                           prodl	equ	0xFF3
  5631                           intcon	equ	0xFF2
  5632                           indf0	equ	0xFEF
  5633                           postinc0	equ	0xFEE
  5634                           fsr0h	equ	0xFEA
  5635                           fsr0l	equ	0xFE9
  5636                           wreg	equ	0xFE8
  5637                           postdec1	equ	0xFE5
  5638                           fsr1l	equ	0xFE1
  5639                           indf2	equ	0xFDF
  5640                           postinc2	equ	0xFDE
  5641                           postdec2	equ	0xFDD
  5642                           fsr2h	equ	0xFDA
  5643                           fsr2l	equ	0xFD9
  5644                           status	equ	0xFD8
  5645                           
  5646 ;; *************** function _habilita_interrupcao *****************
  5647 ;; Defined at:
  5648 ;;		line 71 in file "SanUSB1X.h"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  tipo            2   20[COMRAM] unsigned int 
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;		None               void
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5662 ;;      Params:         2       0       0       0       0       0       0       0       0
  5663 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5664 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5665 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5666 ;;Total ram usage:        4 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    2
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_main
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text26
  5677  002474                     __ptext26:
  5678                           	opt stack 0
  5679  002474                     _habilita_interrupcao:
  5680                           	opt stack 28
  5681                           
  5682                           ;SanUSB1X.h: 72: RCONbits.IPEN = 1;
  5683                           
  5684                           ;incstack = 0
  5685  002474  8ED0               	bsf	4048,7,c	;volatile
  5686                           
  5687                           ;SanUSB1X.h: 73: INTCONbits.GIEH = 1;
  5688  002476  8EF2               	bsf	intcon,7,c	;volatile
  5689                           
  5690                           ;SanUSB1X.h: 74: switch(tipo){
  5691  002478  D01A               	goto	l4535
  5692  00247A                     l172:
  5693  00247A  8AF2               	bsf	intcon,5,c	;volatile
  5694  00247C  8ED5               	bsf	4053,7,c	;volatile
  5695  00247E  D04B               	goto	l182
  5696  002480                     l174:
  5697  002480  809D               	bsf	3997,0,c	;volatile
  5698  002482  80CD               	bsf	4045,0,c	;volatile
  5699  002484  D048               	goto	l182
  5700  002486                     l175:
  5701  002486  829D               	bsf	3997,1,c	;volatile
  5702  002488  84CA               	bsf	4042,2,c	;volatile
  5703  00248A  D045               	goto	l182
  5704  00248C                     l176:
  5705  00248C  82A0               	bsf	4000,1,c	;volatile
  5706  00248E  80B1               	bsf	4017,0,c	;volatile
  5707  002490  D042               	goto	l182
  5708  002492                     l177:
  5709  002492  88F2               	bsf	intcon,4,c	;volatile
  5710  002494  9CF1               	bcf	intcon2,6,c	;volatile
  5711  002496  D03F               	goto	l182
  5712  002498                     l178:
  5713  002498  86F0               	bsf	intcon3,3,c	;volatile
  5714  00249A  9AF1               	bcf	intcon2,5,c	;volatile
  5715  00249C  D03C               	goto	l182
  5716  00249E                     l179:
  5717  00249E  88F0               	bsf	intcon3,4,c	;volatile
  5718  0024A0  98F1               	bcf	intcon2,4,c	;volatile
  5719  0024A2  D039               	goto	l182
  5720  0024A4                     l180:
  5721  0024A4  8C9D               	bsf	3997,6,c	;volatile
  5722  0024A6  D037               	goto	l182
  5723  0024A8                     l181:
  5724  0024A8  8A9D               	bsf	3997,5,c	;volatile
  5725  0024AA  8A9F               	bsf	3999,5,c	;volatile
  5726  0024AC  D034               	goto	l182
  5727  0024AE                     l4535:
  5728  0024AE  C015  F017         	movff	habilita_interrupcao@tipo,??_habilita_interrupcao
  5729  0024B2  C016  F018         	movff	habilita_interrupcao@tipo+1,??_habilita_interrupcao+1
  5730                           
  5731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  5732                           ; Switch size 1, requested type "space"
  5733                           ; Number of cases is 4, Range of values is 157 to 242
  5734                           ; switch strategies available:
  5735                           ; Name         Instructions Cycles
  5736                           ; simple_byte           13     7 (average)
  5737                           ;	Chosen strategy is simple_byte
  5738  0024B6  5018               	movf	??_habilita_interrupcao+1,w,c
  5739  0024B8  0A9D               	xorlw	157	; case 157
  5740  0024BA  B4D8               	btfsc	status,2,c
  5741  0024BC  D00A               	goto	l5401
  5742  0024BE  0A3D               	xorlw	61	; case 160
  5743  0024C0  B4D8               	btfsc	status,2,c
  5744  0024C2  D015               	goto	l5403
  5745  0024C4  0A50               	xorlw	80	; case 240
  5746  0024C6  B4D8               	btfsc	status,2,c
  5747  0024C8  D017               	goto	l5405
  5748  0024CA  0A02               	xorlw	2	; case 242
  5749  0024CC  B4D8               	btfsc	status,2,c
  5750  0024CE  D01C               	goto	l5407
  5751  0024D0  D022               	goto	l182
  5752  0024D2                     l5401:
  5753                           
  5754                           ; Switch size 1, requested type "space"
  5755                           ; Number of cases is 4, Range of values is 1 to 64
  5756                           ; switch strategies available:
  5757                           ; Name         Instructions Cycles
  5758                           ; simple_byte           13     7 (average)
  5759                           ;	Chosen strategy is simple_byte
  5760  0024D2  5017               	movf	??_habilita_interrupcao,w,c
  5761  0024D4  0A01               	xorlw	1	; case 1
  5762  0024D6  B4D8               	btfsc	status,2,c
  5763  0024D8  D7D3               	goto	l174
  5764  0024DA  0A03               	xorlw	3	; case 2
  5765  0024DC  B4D8               	btfsc	status,2,c
  5766  0024DE  D7D3               	goto	l175
  5767  0024E0  0A22               	xorlw	34	; case 32
  5768  0024E2  B4D8               	btfsc	status,2,c
  5769  0024E4  D7E1               	goto	l181
  5770  0024E6  0A60               	xorlw	96	; case 64
  5771  0024E8  B4D8               	btfsc	status,2,c
  5772  0024EA  D7DC               	goto	l180
  5773  0024EC  D014               	goto	l182
  5774  0024EE                     l5403:
  5775                           
  5776                           ; Switch size 1, requested type "space"
  5777                           ; Number of cases is 1, Range of values is 2 to 2
  5778                           ; switch strategies available:
  5779                           ; Name         Instructions Cycles
  5780                           ; simple_byte            4     3 (average)
  5781                           ;	Chosen strategy is simple_byte
  5782  0024EE  5017               	movf	??_habilita_interrupcao,w,c
  5783  0024F0  0A02               	xorlw	2	; case 2
  5784  0024F2  B4D8               	btfsc	status,2,c
  5785  0024F4  D7CB               	goto	l176
  5786  0024F6  D00F               	goto	l182
  5787  0024F8                     l5405:
  5788                           
  5789                           ; Switch size 1, requested type "space"
  5790                           ; Number of cases is 2, Range of values is 8 to 16
  5791                           ; switch strategies available:
  5792                           ; Name         Instructions Cycles
  5793                           ; simple_byte            7     4 (average)
  5794                           ;	Chosen strategy is simple_byte
  5795  0024F8  5017               	movf	??_habilita_interrupcao,w,c
  5796  0024FA  0A08               	xorlw	8	; case 8
  5797  0024FC  B4D8               	btfsc	status,2,c
  5798  0024FE  D7CC               	goto	l178
  5799  002500  0A18               	xorlw	24	; case 16
  5800  002502  B4D8               	btfsc	status,2,c
  5801  002504  D7CC               	goto	l179
  5802  002506  D007               	goto	l182
  5803  002508                     l5407:
  5804                           
  5805                           ; Switch size 1, requested type "space"
  5806                           ; Number of cases is 2, Range of values is 16 to 32
  5807                           ; switch strategies available:
  5808                           ; Name         Instructions Cycles
  5809                           ; simple_byte            7     4 (average)
  5810                           ;	Chosen strategy is simple_byte
  5811  002508  5017               	movf	??_habilita_interrupcao,w,c
  5812  00250A  0A10               	xorlw	16	; case 16
  5813  00250C  B4D8               	btfsc	status,2,c
  5814  00250E  D7C1               	goto	l177
  5815  002510  0A30               	xorlw	48	; case 32
  5816  002512  B4D8               	btfsc	status,2,c
  5817  002514  D7B2               	goto	l172
  5818  002516                     l182:
  5819  002516  0012               	return	
  5820  002518                     __end_of_habilita_interrupcao:
  5821                           	opt stack 0
  5822                           tblptru	equ	0xFF8
  5823                           tblptrh	equ	0xFF7
  5824                           tblptrl	equ	0xFF6
  5825                           tablat	equ	0xFF5
  5826                           prodh	equ	0xFF4
  5827                           prodl	equ	0xFF3
  5828                           intcon	equ	0xFF2
  5829                           intcon2	equ	0xFF1
  5830                           intcon3	equ	0xFF0
  5831                           indf0	equ	0xFEF
  5832                           postinc0	equ	0xFEE
  5833                           fsr0h	equ	0xFEA
  5834                           fsr0l	equ	0xFE9
  5835                           wreg	equ	0xFE8
  5836                           postdec1	equ	0xFE5
  5837                           fsr1l	equ	0xFE1
  5838                           indf2	equ	0xFDF
  5839                           postinc2	equ	0xFDE
  5840                           postdec2	equ	0xFDD
  5841                           fsr2h	equ	0xFDA
  5842                           fsr2l	equ	0xFD9
  5843                           status	equ	0xFD8
  5844                           
  5845 ;; *************** function _clock_int_4MHz *****************
  5846 ;; Defined at:
  5847 ;;		line 468 in file "SanUSB1X.h"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;		None
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;		None
  5852 ;; Return value:  Size  Location     Type
  5853 ;;		None               void
  5854 ;; Registers used:
  5855 ;;		wreg, status,2, status,0, prodl, cstack
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5861 ;;      Params:         0       0       0       0       0       0       0       0       0
  5862 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5864 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5865 ;;Total ram usage:        0 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    3
  5868 ;; This function calls:
  5869 ;;		___awmod
  5870 ;;		___lwdiv
  5871 ;;		_le_eeprom
  5872 ;; This function is called by:
  5873 ;;		_main
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text27
  5878  002A30                     __ptext27:
  5879                           	opt stack 0
  5880  002A30                     _clock_int_4MHz:
  5881                           	opt stack 27
  5882                           
  5883                           ;incstack = 0
  5884  002A30  0EFD               	movlw	253	;# 
  5885  002A32  6EA9               	movwf	4009,c	;# 
  5886  002A34  9EA6               	bcf	4006,7,c	;# 
  5887  002A36  9CA6               	bcf	4006,6,c	;# 
  5888  002A38  80A6               	bsf	4006,0,c	;# 
  5889  002A3A                     BLEIBEN:
  5890                           
  5891                           ;# 
  5892  002A3A  B0A8               	btfsc	4008,0,c	;# 
  5893  002A3C  EF1D  F015         	goto	BLEIBEN	;# 
  5894                           
  5895                           ;SanUSB1X.h: 484: OSCCON=0B01100110;
  5896  002A40  0E66               	movlw	102
  5897  002A42  6ED3               	movwf	4051,c	;volatile
  5898  002A44                     l445:
  5899  002A44  A4D3               	btfss	4051,2,c	;volatile
  5900  002A46  D7FE               	goto	l445
  5901                           
  5902                           ;SanUSB1X.h: 487: EEADR = 0B11111101;
  5903  002A48  0EFD               	movlw	253
  5904  002A4A  6EA9               	movwf	4009,c	;volatile
  5905                           
  5906                           ;SanUSB1X.h: 488: EECON1=EEADR & 0B00001011;
  5907  002A4C  50A9               	movf	4009,w,c	;volatile
  5908  002A4E  0B0B               	andlw	11
  5909  002A50  6EA6               	movwf	4006,c	;volatile
  5910  002A52                     l448:
  5911  002A52  66A8               	tstfsz	4008,c	;volatile
  5912  002A54  D7FE               	goto	l448
  5913                           
  5914                           ;SanUSB1X.h: 490: REGad=R/((EEADR%126)<<4);
  5915  002A56  C035  F01C         	movff	_R,___lwdiv@dividend
  5916  002A5A  C036  F01D         	movff	_R+1,___lwdiv@dividend+1
  5917  002A5E  0E00               	movlw	0
  5918  002A60  6E18               	movwf	___awmod@divisor+1,c
  5919  002A62  0E7E               	movlw	126
  5920  002A64  6E17               	movwf	___awmod@divisor,c
  5921  002A66  CFA9 F015          	movff	4009,___awmod@dividend	;volatile
  5922  002A6A  6A16               	clrf	___awmod@dividend+1,c
  5923  002A6C  ECDA  F012         	call	___awmod	;wreg free
  5924  002A70  3A15               	swapf	?___awmod,f,c
  5925  002A72  3A16               	swapf	?___awmod+1,f,c
  5926  002A74  0EF0               	movlw	240
  5927  002A76  1616               	andwf	?___awmod+1,f,c
  5928  002A78  5015               	movf	?___awmod,w,c
  5929  002A7A  0B0F               	andlw	15
  5930  002A7C  1216               	iorwf	?___awmod+1,f,c
  5931  002A7E  0EF0               	movlw	240
  5932  002A80  1615               	andwf	?___awmod,f,c
  5933  002A82  C015  F01E         	movff	?___awmod,___lwdiv@divisor
  5934  002A86  C016  F01F         	movff	?___awmod+1,___lwdiv@divisor+1
  5935  002A8A  EC7F  F015         	call	___lwdiv	;wreg free
  5936  002A8E  501C               	movf	?___lwdiv,w,c
  5937  002A90  6E3A               	movwf	_REGad,c
  5938                           
  5939                           ;SanUSB1X.h: 491: REG=le_eeprom(REGad);
  5940  002A92  503A               	movf	_REGad,w,c
  5941  002A94  ECD9  F016         	call	_le_eeprom
  5942  002A98  6E39               	movwf	_REG,c
  5943  002A9A  0012               	return	
  5944  002A9C                     __end_of_clock_int_4MHz:
  5945                           	opt stack 0
  5946                           tblptru	equ	0xFF8
  5947                           tblptrh	equ	0xFF7
  5948                           tblptrl	equ	0xFF6
  5949                           tablat	equ	0xFF5
  5950                           prodh	equ	0xFF4
  5951                           prodl	equ	0xFF3
  5952                           intcon	equ	0xFF2
  5953                           intcon2	equ	0xFF1
  5954                           intcon3	equ	0xFF0
  5955                           indf0	equ	0xFEF
  5956                           postinc0	equ	0xFEE
  5957                           fsr0h	equ	0xFEA
  5958                           fsr0l	equ	0xFE9
  5959                           wreg	equ	0xFE8
  5960                           postdec1	equ	0xFE5
  5961                           fsr1l	equ	0xFE1
  5962                           indf2	equ	0xFDF
  5963                           postinc2	equ	0xFDE
  5964                           postdec2	equ	0xFDD
  5965                           fsr2h	equ	0xFDA
  5966                           fsr2l	equ	0xFD9
  5967                           status	equ	0xFD8
  5968                           
  5969 ;; *************** function _le_eeprom *****************
  5970 ;; Defined at:
  5971 ;;		line 458 in file "SanUSB1X.h"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  endereco        1    wreg     unsigned char 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;  endereco        1   20[COMRAM] unsigned char 
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      unsigned char 
  5978 ;; Registers used:
  5979 ;;		wreg, status,2
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5985 ;;      Params:         0       0       0       0       0       0       0       0       0
  5986 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5987 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5988 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5989 ;;Total ram usage:        1 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    2
  5992 ;; This function calls:
  5993 ;;		Nothing
  5994 ;; This function is called by:
  5995 ;;		_clock_int_4MHz
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text28
  6000  002DB2                     __ptext28:
  6001                           	opt stack 0
  6002  002DB2                     _le_eeprom:
  6003                           	opt stack 27
  6004                           
  6005                           ;incstack = 0
  6006                           ;le_eeprom@endereco stored from wreg
  6007  002DB2  CFE8 F015          	movff	wreg,le_eeprom@endereco
  6008                           
  6009                           ;SanUSB1X.h: 460: EEADR = endereco;
  6010  002DB6  C015  FFA9         	movff	le_eeprom@endereco,4009	;volatile
  6011                           
  6012                           ;SanUSB1X.h: 461: EECON1bits.WREN = 0;
  6013  002DBA  94A6               	bcf	4006,2,c	;volatile
  6014                           
  6015                           ;SanUSB1X.h: 462: EECON1bits.EEPGD = 0;
  6016  002DBC  9EA6               	bcf	4006,7,c	;volatile
  6017                           
  6018                           ;SanUSB1X.h: 463: EECON1bits.CFGS = 0;
  6019  002DBE  9CA6               	bcf	4006,6,c	;volatile
  6020                           
  6021                           ;SanUSB1X.h: 464: EECON1bits.RD = OSCCONbits.IRCF1;
  6022  002DC0  AAD3               	btfss	4051,5,c	;volatile
  6023  002DC2  D002               	bra	u3115
  6024  002DC4  80A6               	bsf	4006,0,c	;volatile
  6025  002DC6  D001               	bra	u3117
  6026  002DC8                     u3115:
  6027  002DC8  90A6               	bcf	4006,0,c	;volatile
  6028  002DCA                     u3117:
  6029                           
  6030                           ;SanUSB1X.h: 465: return EEDATA;
  6031  002DCA  50A8               	movf	4008,w,c	;volatile
  6032  002DCC  0012               	return	
  6033  002DCE                     __end_of_le_eeprom:
  6034                           	opt stack 0
  6035                           tblptru	equ	0xFF8
  6036                           tblptrh	equ	0xFF7
  6037                           tblptrl	equ	0xFF6
  6038                           tablat	equ	0xFF5
  6039                           prodh	equ	0xFF4
  6040                           prodl	equ	0xFF3
  6041                           intcon	equ	0xFF2
  6042                           intcon2	equ	0xFF1
  6043                           intcon3	equ	0xFF0
  6044                           indf0	equ	0xFEF
  6045                           postinc0	equ	0xFEE
  6046                           fsr0h	equ	0xFEA
  6047                           fsr0l	equ	0xFE9
  6048                           wreg	equ	0xFE8
  6049                           postdec1	equ	0xFE5
  6050                           fsr1l	equ	0xFE1
  6051                           indf2	equ	0xFDF
  6052                           postinc2	equ	0xFDE
  6053                           postdec2	equ	0xFDD
  6054                           fsr2h	equ	0xFDA
  6055                           fsr2l	equ	0xFD9
  6056                           status	equ	0xFD8
  6057                           
  6058 ;; *************** function ___lwdiv *****************
  6059 ;; Defined at:
  6060 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwdiv.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  dividend        2   27[COMRAM] unsigned int 
  6063 ;;  divisor         2   29[COMRAM] unsigned int 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;  quotient        2   33[COMRAM] unsigned int 
  6066 ;;  counter         1   32[COMRAM] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  2   27[COMRAM] unsigned int 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6076 ;;      Params:         4       0       0       0       0       0       0       0       0
  6077 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6078 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6079 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6080 ;;Total ram usage:        8 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:    2
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_clock_int_4MHz
  6087 ;;		_printf
  6088 ;;		_sendnum
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text29
  6093  002AFE                     __ptext29:
  6094                           	opt stack 0
  6095  002AFE                     ___lwdiv:
  6096                           	opt stack 27
  6097                           
  6098                           ;incstack = 0
  6099  002AFE  0E00               	movlw	0
  6100  002B00  6E23               	movwf	___lwdiv@quotient+1,c
  6101  002B02  0E00               	movlw	0
  6102  002B04  6E22               	movwf	___lwdiv@quotient,c
  6103  002B06  501F               	movf	___lwdiv@divisor+1,w,c
  6104  002B08  101E               	iorwf	___lwdiv@divisor,w,c
  6105  002B0A  B4D8               	btfsc	status,2,c
  6106  002B0C  D01E               	goto	l1203
  6107  002B0E  6E20               	movwf	??___lwdiv& (0+255),c
  6108  002B10  0E01               	movlw	1
  6109  002B12  6E21               	movwf	___lwdiv@counter,c
  6110  002B14  5020               	movf	??___lwdiv& (0+255),w,c
  6111  002B16  D004               	goto	l4461
  6112  002B18                     l4459:
  6113  002B18  90D8               	bcf	status,0,c
  6114  002B1A  361E               	rlcf	___lwdiv@divisor,f,c
  6115  002B1C  361F               	rlcf	___lwdiv@divisor+1,f,c
  6116  002B1E  2A21               	incf	___lwdiv@counter,f,c
  6117  002B20                     l4461:
  6118  002B20  AE1F               	btfss	___lwdiv@divisor+1,7,c
  6119  002B22  D7FA               	goto	l4459
  6120  002B24                     l4463:
  6121  002B24  90D8               	bcf	status,0,c
  6122  002B26  3622               	rlcf	___lwdiv@quotient,f,c
  6123  002B28  3623               	rlcf	___lwdiv@quotient+1,f,c
  6124  002B2A  501E               	movf	___lwdiv@divisor,w,c
  6125  002B2C  5C1C               	subwf	___lwdiv@dividend,w,c
  6126  002B2E  501F               	movf	___lwdiv@divisor+1,w,c
  6127  002B30  581D               	subwfb	___lwdiv@dividend+1,w,c
  6128  002B32  A0D8               	btfss	status,0,c
  6129  002B34  D005               	goto	l4471
  6130  002B36  501E               	movf	___lwdiv@divisor,w,c
  6131  002B38  5E1C               	subwf	___lwdiv@dividend,f,c
  6132  002B3A  501F               	movf	___lwdiv@divisor+1,w,c
  6133  002B3C  5A1D               	subwfb	___lwdiv@dividend+1,f,c
  6134  002B3E  8022               	bsf	___lwdiv@quotient,0,c
  6135  002B40                     l4471:
  6136  002B40  90D8               	bcf	status,0,c
  6137  002B42  321F               	rrcf	___lwdiv@divisor+1,f,c
  6138  002B44  321E               	rrcf	___lwdiv@divisor,f,c
  6139  002B46  2E21               	decfsz	___lwdiv@counter,f,c
  6140  002B48  D7ED               	goto	l4463
  6141  002B4A                     l1203:
  6142  002B4A  C022  F01C         	movff	___lwdiv@quotient,?___lwdiv
  6143  002B4E  C023  F01D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6144  002B52  0012               	return	
  6145  002B54                     __end_of___lwdiv:
  6146                           	opt stack 0
  6147                           tblptru	equ	0xFF8
  6148                           tblptrh	equ	0xFF7
  6149                           tblptrl	equ	0xFF6
  6150                           tablat	equ	0xFF5
  6151                           prodh	equ	0xFF4
  6152                           prodl	equ	0xFF3
  6153                           intcon	equ	0xFF2
  6154                           intcon2	equ	0xFF1
  6155                           intcon3	equ	0xFF0
  6156                           indf0	equ	0xFEF
  6157                           postinc0	equ	0xFEE
  6158                           fsr0h	equ	0xFEA
  6159                           fsr0l	equ	0xFE9
  6160                           wreg	equ	0xFE8
  6161                           postdec1	equ	0xFE5
  6162                           fsr1l	equ	0xFE1
  6163                           indf2	equ	0xFDF
  6164                           postinc2	equ	0xFDE
  6165                           postdec2	equ	0xFDD
  6166                           fsr2h	equ	0xFDA
  6167                           fsr2l	equ	0xFD9
  6168                           status	equ	0xFD8
  6169                           
  6170 ;; *************** function ___awmod *****************
  6171 ;; Defined at:
  6172 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awmod.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  dividend        2   20[COMRAM] int 
  6175 ;;  divisor         2   22[COMRAM] int 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  sign            1   26[COMRAM] unsigned char 
  6178 ;;  counter         1   25[COMRAM] unsigned char 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  2   20[COMRAM] int 
  6181 ;; Registers used:
  6182 ;;		wreg, status,2, status,0, prodl
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6188 ;;      Params:         4       0       0       0       0       0       0       0       0
  6189 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6190 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6191 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6192 ;;Total ram usage:        7 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    2
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_clock_int_4MHz
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           	psect	text30
  6203  0025B4                     __ptext30:
  6204                           	opt stack 0
  6205  0025B4                     ___awmod:
  6206                           	opt stack 27
  6207                           
  6208                           ;incstack = 0
  6209  0025B4  6E19               	movwf	??___awmod& (0+255),c
  6210  0025B6  0E00               	movlw	0
  6211  0025B8  6E1B               	movwf	___awmod@sign,c
  6212  0025BA  5019               	movf	??___awmod& (0+255),w,c
  6213  0025BC  5016               	movf	___awmod@dividend+1,w,c
  6214  0025BE  0A80               	xorlw	128
  6215  0025C0  6EF3               	movwf	prodl,c
  6216  0025C2  0E80               	movlw	128
  6217  0025C4  5CF3               	subwf	prodl,w,c
  6218  0025C6  0E00               	movlw	0
  6219  0025C8  B4D8               	btfsc	status,2,c
  6220  0025CA  5C15               	subwf	___awmod@dividend,w,c
  6221  0025CC  B0D8               	btfsc	status,0,c
  6222  0025CE  D008               	goto	l4403
  6223  0025D0  6C15               	negf	___awmod@dividend,c
  6224  0025D2  1E16               	comf	___awmod@dividend+1,f,c
  6225  0025D4  B0D8               	btfsc	status,0,c
  6226  0025D6  2A16               	incf	___awmod@dividend+1,f,c
  6227  0025D8  6E19               	movwf	??___awmod& (0+255),c
  6228  0025DA  0E01               	movlw	1
  6229  0025DC  6E1B               	movwf	___awmod@sign,c
  6230  0025DE  5019               	movf	??___awmod& (0+255),w,c
  6231  0025E0                     l4403:
  6232  0025E0  5018               	movf	___awmod@divisor+1,w,c
  6233  0025E2  0A80               	xorlw	128
  6234  0025E4  6EF3               	movwf	prodl,c
  6235  0025E6  0E80               	movlw	128
  6236  0025E8  5CF3               	subwf	prodl,w,c
  6237  0025EA  0E00               	movlw	0
  6238  0025EC  B4D8               	btfsc	status,2,c
  6239  0025EE  5C17               	subwf	___awmod@divisor,w,c
  6240  0025F0  B0D8               	btfsc	status,0,c
  6241  0025F2  D004               	goto	l4407
  6242  0025F4  6C17               	negf	___awmod@divisor,c
  6243  0025F6  1E18               	comf	___awmod@divisor+1,f,c
  6244  0025F8  B0D8               	btfsc	status,0,c
  6245  0025FA  2A18               	incf	___awmod@divisor+1,f,c
  6246  0025FC                     l4407:
  6247  0025FC  5018               	movf	___awmod@divisor+1,w,c
  6248  0025FE  1017               	iorwf	___awmod@divisor,w,c
  6249  002600  B4D8               	btfsc	status,2,c
  6250  002602  D01A               	goto	l4423
  6251  002604  6E19               	movwf	??___awmod& (0+255),c
  6252  002606  0E01               	movlw	1
  6253  002608  6E1A               	movwf	___awmod@counter,c
  6254  00260A  5019               	movf	??___awmod& (0+255),w,c
  6255  00260C  D004               	goto	l4413
  6256  00260E                     l4411:
  6257  00260E  90D8               	bcf	status,0,c
  6258  002610  3617               	rlcf	___awmod@divisor,f,c
  6259  002612  3618               	rlcf	___awmod@divisor+1,f,c
  6260  002614  2A1A               	incf	___awmod@counter,f,c
  6261  002616                     l4413:
  6262  002616  AE18               	btfss	___awmod@divisor+1,7,c
  6263  002618  D7FA               	goto	l4411
  6264  00261A                     l4415:
  6265  00261A  5017               	movf	___awmod@divisor,w,c
  6266  00261C  5C15               	subwf	___awmod@dividend,w,c
  6267  00261E  5018               	movf	___awmod@divisor+1,w,c
  6268  002620  5816               	subwfb	___awmod@dividend+1,w,c
  6269  002622  A0D8               	btfss	status,0,c
  6270  002624  D004               	goto	l4419
  6271  002626  5017               	movf	___awmod@divisor,w,c
  6272  002628  5E15               	subwf	___awmod@dividend,f,c
  6273  00262A  5018               	movf	___awmod@divisor+1,w,c
  6274  00262C  5A16               	subwfb	___awmod@dividend+1,f,c
  6275  00262E                     l4419:
  6276  00262E  90D8               	bcf	status,0,c
  6277  002630  3218               	rrcf	___awmod@divisor+1,f,c
  6278  002632  3217               	rrcf	___awmod@divisor,f,c
  6279  002634  2E1A               	decfsz	___awmod@counter,f,c
  6280  002636  D7F1               	goto	l4415
  6281  002638                     l4423:
  6282  002638  501B               	movf	___awmod@sign,w,c
  6283  00263A  B4D8               	btfsc	status,2,c
  6284  00263C  D004               	goto	l4427
  6285  00263E  6C15               	negf	___awmod@dividend,c
  6286  002640  1E16               	comf	___awmod@dividend+1,f,c
  6287  002642  B0D8               	btfsc	status,0,c
  6288  002644  2A16               	incf	___awmod@dividend+1,f,c
  6289  002646                     l4427:
  6290  002646  C015  F015         	movff	___awmod@dividend,?___awmod
  6291  00264A  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  6292  00264E  0012               	return	
  6293  002650                     __end_of___awmod:
  6294                           	opt stack 0
  6295                           tblptru	equ	0xFF8
  6296                           tblptrh	equ	0xFF7
  6297                           tblptrl	equ	0xFF6
  6298                           tablat	equ	0xFF5
  6299                           prodh	equ	0xFF4
  6300                           prodl	equ	0xFF3
  6301                           intcon	equ	0xFF2
  6302                           intcon2	equ	0xFF1
  6303                           intcon3	equ	0xFF0
  6304                           indf0	equ	0xFEF
  6305                           postinc0	equ	0xFEE
  6306                           fsr0h	equ	0xFEA
  6307                           fsr0l	equ	0xFE9
  6308                           wreg	equ	0xFE8
  6309                           postdec1	equ	0xFE5
  6310                           fsr1l	equ	0xFE1
  6311                           indf2	equ	0xFDF
  6312                           postinc2	equ	0xFDE
  6313                           postdec2	equ	0xFDD
  6314                           fsr2h	equ	0xFDA
  6315                           fsr2l	equ	0xFD9
  6316                           status	equ	0xFD8
  6317                           
  6318 ;; *************** function _clear_local_buffer *****************
  6319 ;; Defined at:
  6320 ;;		line 156 in file "main.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;		None
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;		None
  6325 ;; Return value:  Size  Location     Type
  6326 ;;		None               void
  6327 ;; Registers used:
  6328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6334 ;;      Params:         0       0       0       0       0       0       0       0       0
  6335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6336 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6337 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6338 ;;Total ram usage:        1 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    3
  6341 ;; This function calls:
  6342 ;;		_memset
  6343 ;; This function is called by:
  6344 ;;		_main
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text31
  6349  002D3A                     __ptext31:
  6350                           	opt stack 0
  6351  002D3A                     _clear_local_buffer:
  6352                           	opt stack 27
  6353                           
  6354                           ;main.c: 157: memset(recv, '\0', 64);
  6355                           
  6356                           ;incstack = 0
  6357  002D3A  0100               	movlb	0	; () banked
  6358  002D3C  0E00               	movlw	high _recv
  6359  002D3E  6E16               	movwf	memset@p1+1,c
  6360  002D40  0100               	movlb	0	; () banked
  6361  002D42  0EA6               	movlw	low _recv
  6362  002D44  6E15               	movwf	memset@p1,c
  6363  002D46  0E00               	movlw	0
  6364  002D48  6E18               	movwf	memset@c+1,c
  6365  002D4A  0E00               	movlw	0
  6366  002D4C  6E17               	movwf	memset@c,c
  6367  002D4E  0E00               	movlw	0
  6368  002D50  6E1A               	movwf	memset@n+1,c
  6369  002D52  0E40               	movlw	64
  6370  002D54  6E19               	movwf	memset@n,c
  6371  002D56  EC87  F016         	call	_memset	;wreg free
  6372                           
  6373                           ;main.c: 158: pos = 0;
  6374  002D5A  6E1D               	movwf	??_clear_local_buffer& (0+255),c
  6375  002D5C  0E00               	movlw	0
  6376  002D5E  6E48               	movwf	_pos,c
  6377  002D60  501D               	movf	??_clear_local_buffer& (0+255),w,c
  6378  002D62  0012               	return	
  6379  002D64                     __end_of_clear_local_buffer:
  6380                           	opt stack 0
  6381                           tblptru	equ	0xFF8
  6382                           tblptrh	equ	0xFF7
  6383                           tblptrl	equ	0xFF6
  6384                           tablat	equ	0xFF5
  6385                           prodh	equ	0xFF4
  6386                           prodl	equ	0xFF3
  6387                           intcon	equ	0xFF2
  6388                           intcon2	equ	0xFF1
  6389                           intcon3	equ	0xFF0
  6390                           indf0	equ	0xFEF
  6391                           postinc0	equ	0xFEE
  6392                           fsr0h	equ	0xFEA
  6393                           fsr0l	equ	0xFE9
  6394                           wreg	equ	0xFE8
  6395                           postdec1	equ	0xFE5
  6396                           fsr1l	equ	0xFE1
  6397                           indf2	equ	0xFDF
  6398                           postinc2	equ	0xFDE
  6399                           postdec2	equ	0xFDD
  6400                           fsr2h	equ	0xFDA
  6401                           fsr2l	equ	0xFD9
  6402                           status	equ	0xFD8
  6403                           
  6404 ;; *************** function _memset *****************
  6405 ;; Defined at:
  6406 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\memset.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  p1              2   20[COMRAM] PTR void 
  6409 ;;		 -> recv(64), 
  6410 ;;  c               2   22[COMRAM] int 
  6411 ;;  n               2   24[COMRAM] unsigned int 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  p               2   26[COMRAM] PTR unsigned char 
  6414 ;;		 -> recv(64), 
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  2   20[COMRAM] PTR void 
  6417 ;; Registers used:
  6418 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6424 ;;      Params:         6       0       0       0       0       0       0       0       0
  6425 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6427 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6428 ;;Total ram usage:        8 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    2
  6431 ;; This function calls:
  6432 ;;		Nothing
  6433 ;; This function is called by:
  6434 ;;		_main
  6435 ;;		_clear_local_buffer
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text32
  6440  002D0E                     __ptext32:
  6441                           	opt stack 0
  6442  002D0E                     _memset:
  6443                           	opt stack 28
  6444                           
  6445                           ;incstack = 0
  6446  002D0E  C016  F01C         	movff	memset@p1+1,memset@p+1
  6447  002D12  C015  F01B         	movff	memset@p1,memset@p
  6448  002D16  D008               	goto	l4367
  6449  002D18                     l4363:
  6450  002D18  C01B  FFD9         	movff	memset@p,fsr2l
  6451  002D1C  C01C  FFDA         	movff	memset@p+1,fsr2h
  6452  002D20  C017  FFDF         	movff	memset@c,indf2
  6453  002D24  4A1B               	infsnz	memset@p,f,c
  6454  002D26  2A1C               	incf	memset@p+1,f,c
  6455  002D28                     l4367:
  6456  002D28  0619               	decf	memset@n,f,c
  6457  002D2A  A0D8               	btfss	status,0,c
  6458  002D2C  061A               	decf	memset@n+1,f,c
  6459  002D2E  2819               	incf	memset@n& (0+255),w,c
  6460  002D30  B4D8               	btfsc	status,2,c
  6461  002D32  281A               	incf	(memset@n+1)& (0+255),w,c
  6462  002D34  B4D8               	btfsc	status,2,c
  6463                           
  6464                           ;	Return value of _memset is never used
  6465  002D36  0012               	return	
  6466  002D38  D7EF               	goto	l4363
  6467  002D3A                     __end_of_memset:
  6468                           	opt stack 0
  6469                           tblptru	equ	0xFF8
  6470                           tblptrh	equ	0xFF7
  6471                           tblptrl	equ	0xFF6
  6472                           tablat	equ	0xFF5
  6473                           prodh	equ	0xFF4
  6474                           prodl	equ	0xFF3
  6475                           intcon	equ	0xFF2
  6476                           intcon2	equ	0xFF1
  6477                           intcon3	equ	0xFF0
  6478                           indf0	equ	0xFEF
  6479                           postinc0	equ	0xFEE
  6480                           fsr0h	equ	0xFEA
  6481                           fsr0l	equ	0xFE9
  6482                           wreg	equ	0xFE8
  6483                           postdec1	equ	0xFE5
  6484                           fsr1l	equ	0xFE1
  6485                           indf2	equ	0xFDF
  6486                           postinc2	equ	0xFDE
  6487                           postdec2	equ	0xFDD
  6488                           fsr2h	equ	0xFDA
  6489                           fsr2l	equ	0xFD9
  6490                           status	equ	0xFD8
  6491                           
  6492 ;; *************** function _atoi *****************
  6493 ;; Defined at:
  6494 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\atoi.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;  s               2   26[COMRAM] PTR const unsigned char 
  6497 ;;		 -> STR_3(2), STR_2(2), NULL(0), recv(64), 
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;  a               2   31[COMRAM] int 
  6500 ;;  sign            1   30[COMRAM] unsigned char 
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  2   26[COMRAM] int 
  6503 ;; Registers used:
  6504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6510 ;;      Params:         2       0       0       0       0       0       0       0       0
  6511 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6512 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6513 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6514 ;;Total ram usage:        7 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:    3
  6517 ;; This function calls:
  6518 ;;		___wmul
  6519 ;;		_isdigit
  6520 ;; This function is called by:
  6521 ;;		_main
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text33
  6526  001C96                     __ptext33:
  6527                           	opt stack 0
  6528  001C96                     _atoi:
  6529                           	opt stack 27
  6530                           
  6531                           ;incstack = 0
  6532  001C96  D002               	goto	l4773
  6533  001C98                     l4771:
  6534  001C98  4A1B               	infsnz	atoi@s,f,c
  6535  001C9A  2A1C               	incf	atoi@s+1,f,c
  6536  001C9C                     l4773:
  6537  001C9C  C01B  FFF6         	movff	atoi@s,tblptrl
  6538  001CA0  C01C  FFF7         	movff	atoi@s+1,tblptrh
  6539  001CA4  6AF8               	clrf	tblptru,c
  6540  001CA6  0E07               	movlw	(high __ramtop+-1)
  6541  001CA8  64F7               	cpfsgt	tblptrh,c
  6542  001CAA  D003               	bra	u3767
  6543  001CAC  0008               	tblrd		*
  6544  001CAE  50F5               	movf	tablat,w,c
  6545  001CB0  D005               	bra	u3760
  6546  001CB2                     u3767:
  6547  001CB2  CFF6 FFE9          	movff	tblptrl,fsr0l
  6548  001CB6  CFF7 FFEA          	movff	tblptrh,fsr0h
  6549  001CBA  50EF               	movf	indf0,w,c
  6550  001CBC                     u3760:
  6551  001CBC  0A20               	xorlw	32
  6552  001CBE  B4D8               	btfsc	status,2,c
  6553  001CC0  D7EB               	goto	l4771
  6554  001CC2  C01B  FFF6         	movff	atoi@s,tblptrl
  6555  001CC6  C01C  FFF7         	movff	atoi@s+1,tblptrh
  6556  001CCA  6AF8               	clrf	tblptru,c
  6557  001CCC  0E07               	movlw	(high __ramtop+-1)
  6558  001CCE  64F7               	cpfsgt	tblptrh,c
  6559  001CD0  D003               	bra	u3787
  6560  001CD2  0008               	tblrd		*
  6561  001CD4  50F5               	movf	tablat,w,c
  6562  001CD6  D005               	bra	u3780
  6563  001CD8                     u3787:
  6564  001CD8  CFF6 FFE9          	movff	tblptrl,fsr0l
  6565  001CDC  CFF7 FFEA          	movff	tblptrh,fsr0h
  6566  001CE0  50EF               	movf	indf0,w,c
  6567  001CE2                     u3780:
  6568  001CE2  0A09               	xorlw	9
  6569  001CE4  B4D8               	btfsc	status,2,c
  6570  001CE6  D7D8               	goto	l4771
  6571  001CE8  0E00               	movlw	0
  6572  001CEA  6E21               	movwf	atoi@a+1,c
  6573  001CEC  0E00               	movlw	0
  6574  001CEE  6E20               	movwf	atoi@a,c
  6575  001CF0  6E1D               	movwf	??_atoi& (0+255),c
  6576  001CF2  0E00               	movlw	0
  6577  001CF4  6E1F               	movwf	atoi@sign,c
  6578  001CF6  501D               	movf	??_atoi& (0+255),w,c
  6579  001CF8  C01B  FFF6         	movff	atoi@s,tblptrl
  6580  001CFC  C01C  FFF7         	movff	atoi@s+1,tblptrh
  6581  001D00  6AF8               	clrf	tblptru,c
  6582  001D02  0E07               	movlw	(high __ramtop+-1)
  6583  001D04  64F7               	cpfsgt	tblptrh,c
  6584  001D06  D003               	bra	u3807
  6585  001D08  0008               	tblrd		*
  6586  001D0A  50F5               	movf	tablat,w,c
  6587  001D0C  D005               	bra	u3800
  6588  001D0E                     u3807:
  6589  001D0E  CFF6 FFE9          	movff	tblptrl,fsr0l
  6590  001D12  CFF7 FFEA          	movff	tblptrh,fsr0h
  6591  001D16  50EF               	movf	indf0,w,c
  6592  001D18                     u3800:
  6593  001D18  0A2D               	xorlw	45
  6594  001D1A  A4D8               	btfss	status,2,c
  6595  001D1C  D002               	goto	l4785
  6596  001D1E  2A1F               	incf	atoi@sign,f,c
  6597  001D20  D03A               	goto	L6
  6598  001D22                     l4785:
  6599  001D22  C01B  FFF6         	movff	atoi@s,tblptrl
  6600  001D26  C01C  FFF7         	movff	atoi@s+1,tblptrh
  6601  001D2A  6AF8               	clrf	tblptru,c
  6602  001D2C  0E07               	movlw	(high __ramtop+-1)
  6603  001D2E  64F7               	cpfsgt	tblptrh,c
  6604  001D30  D003               	bra	u3827
  6605  001D32  0008               	tblrd		*
  6606  001D34  50F5               	movf	tablat,w,c
  6607  001D36  D005               	bra	u3820
  6608  001D38                     u3827:
  6609  001D38  CFF6 FFE9          	movff	tblptrl,fsr0l
  6610  001D3C  CFF7 FFEA          	movff	tblptrh,fsr0h
  6611  001D40  50EF               	movf	indf0,w,c
  6612  001D42                     u3820:
  6613  001D42  0A2B               	xorlw	43
  6614  001D44  A4D8               	btfss	status,2,c
  6615  001D46  D029               	goto	l4793
  6616  001D48  D026               	goto	L6
  6617  001D4A                     l4789:
  6618  001D4A  C020  F015         	movff	atoi@a,___wmul@multiplier
  6619  001D4E  C021  F016         	movff	atoi@a+1,___wmul@multiplier+1
  6620  001D52  0E00               	movlw	0
  6621  001D54  6E18               	movwf	___wmul@multiplicand+1,c
  6622  001D56  0E0A               	movlw	10
  6623  001D58  6E17               	movwf	___wmul@multiplicand,c
  6624  001D5A  EC52  F016         	call	___wmul	;wreg free
  6625  001D5E  C01B  FFF6         	movff	atoi@s,tblptrl
  6626  001D62  C01C  FFF7         	movff	atoi@s+1,tblptrh
  6627  001D66  6AF8               	clrf	tblptru,c
  6628  001D68  0E07               	movlw	(high __ramtop+-1)
  6629  001D6A  64F7               	cpfsgt	tblptrh,c
  6630  001D6C  D003               	bra	u3847
  6631  001D6E  0008               	tblrd		*
  6632  001D70  50F5               	movf	tablat,w,c
  6633  001D72  D005               	bra	u3840
  6634  001D74                     u3847:
  6635  001D74  CFF6 FFE9          	movff	tblptrl,fsr0l
  6636  001D78  CFF7 FFEA          	movff	tblptrh,fsr0h
  6637  001D7C  50EF               	movf	indf0,w,c
  6638  001D7E                     u3840:
  6639  001D7E  6E1D               	movwf	??_atoi& (0+255),c
  6640  001D80  6A1E               	clrf	(??_atoi+1)& (0+255),c
  6641  001D82  5015               	movf	?___wmul,w,c
  6642  001D84  261D               	addwf	??_atoi,f,c
  6643  001D86  5016               	movf	?___wmul+1,w,c
  6644  001D88  221E               	addwfc	??_atoi+1,f,c
  6645  001D8A  0ED0               	movlw	208
  6646  001D8C  241D               	addwf	??_atoi,w,c
  6647  001D8E  6E20               	movwf	atoi@a,c
  6648  001D90  0EFF               	movlw	255
  6649  001D92  201E               	addwfc	??_atoi+1,w,c
  6650  001D94  6E21               	movwf	atoi@a+1,c
  6651  001D96                     L6:
  6652  001D96  4A1B               	infsnz	atoi@s,f,c
  6653  001D98  2A1C               	incf	atoi@s+1,f,c
  6654  001D9A                     l4793:
  6655  001D9A  C01B  FFF6         	movff	atoi@s,tblptrl
  6656  001D9E  C01C  FFF7         	movff	atoi@s+1,tblptrh
  6657  001DA2  6AF8               	clrf	tblptru,c
  6658  001DA4  0E07               	movlw	(high __ramtop+-1)
  6659  001DA6  64F7               	cpfsgt	tblptrh,c
  6660  001DA8  D003               	bra	u3857
  6661  001DAA  0008               	tblrd		*
  6662  001DAC  50F5               	movf	tablat,w,c
  6663  001DAE  D005               	bra	u3850
  6664  001DB0                     u3857:
  6665  001DB0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6666  001DB4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6667  001DB8  50EF               	movf	indf0,w,c
  6668  001DBA                     u3850:
  6669  001DBA  ECB2  F016         	call	_isdigit
  6670  001DBE  B0D8               	btfsc	status,0,c
  6671  001DC0  D7C4               	goto	l4789
  6672  001DC2  501F               	movf	atoi@sign,w,c
  6673  001DC4  B4D8               	btfsc	status,2,c
  6674  001DC6  D00D               	goto	l841
  6675  001DC8  C020  F01D         	movff	atoi@a,??_atoi
  6676  001DCC  C021  F01E         	movff	atoi@a+1,??_atoi+1
  6677  001DD0  1E1D               	comf	??_atoi,f,c
  6678  001DD2  1E1E               	comf	??_atoi+1,f,c
  6679  001DD4  4A1D               	infsnz	??_atoi,f,c
  6680  001DD6  2A1E               	incf	??_atoi+1,f,c
  6681  001DD8  C01D  F01B         	movff	??_atoi,?_atoi
  6682  001DDC  C01E  F01C         	movff	??_atoi+1,?_atoi+1
  6683  001DE0  D004               	goto	l842
  6684  001DE2                     l841:
  6685  001DE2  C020  F01B         	movff	atoi@a,?_atoi
  6686  001DE6  C021  F01C         	movff	atoi@a+1,?_atoi+1
  6687  001DEA                     l842:
  6688  001DEA  0012               	return	
  6689  001DEC                     __end_of_atoi:
  6690                           	opt stack 0
  6691                           tblptru	equ	0xFF8
  6692                           tblptrh	equ	0xFF7
  6693                           tblptrl	equ	0xFF6
  6694                           tablat	equ	0xFF5
  6695                           prodh	equ	0xFF4
  6696                           prodl	equ	0xFF3
  6697                           intcon	equ	0xFF2
  6698                           intcon2	equ	0xFF1
  6699                           intcon3	equ	0xFF0
  6700                           indf0	equ	0xFEF
  6701                           postinc0	equ	0xFEE
  6702                           fsr0h	equ	0xFEA
  6703                           fsr0l	equ	0xFE9
  6704                           wreg	equ	0xFE8
  6705                           postdec1	equ	0xFE5
  6706                           fsr1l	equ	0xFE1
  6707                           indf2	equ	0xFDF
  6708                           postinc2	equ	0xFDE
  6709                           postdec2	equ	0xFDD
  6710                           fsr2h	equ	0xFDA
  6711                           fsr2l	equ	0xFD9
  6712                           status	equ	0xFD8
  6713                           
  6714 ;; *************** function _isdigit *****************
  6715 ;; Defined at:
  6716 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\isdigit.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;  c               1    wreg     unsigned char 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  c               1   22[COMRAM] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;		None               void
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6730 ;;      Params:         0       0       0       0       0       0       0       0       0
  6731 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6732 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6733 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6734 ;;Total ram usage:        3 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; Hardware stack levels required when called:    2
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_atoi
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text34
  6745  002D64                     __ptext34:
  6746                           	opt stack 0
  6747  002D64                     _isdigit:
  6748                           	opt stack 27
  6749                           
  6750                           ;incstack = 0
  6751                           ;isdigit@c stored from wreg
  6752  002D64  CFE8 F017          	movff	wreg,isdigit@c
  6753  002D68  6E15               	movwf	??_isdigit& (0+255),c
  6754  002D6A  0E00               	movlw	0
  6755  002D6C  6E16               	movwf	_isdigit$2341,c
  6756  002D6E  5015               	movf	??_isdigit& (0+255),w,c
  6757  002D70  0E3A               	movlw	58
  6758  002D72  5C17               	subwf	isdigit@c,w,c
  6759  002D74  B0D8               	btfsc	status,0,c
  6760  002D76  D007               	goto	l4391
  6761  002D78  0E2F               	movlw	47
  6762  002D7A  6417               	cpfsgt	isdigit@c,c
  6763  002D7C  D004               	goto	l4391
  6764  002D7E  6E15               	movwf	??_isdigit& (0+255),c
  6765  002D80  0E01               	movlw	1
  6766  002D82  6E16               	movwf	_isdigit$2341,c
  6767  002D84  5015               	movf	??_isdigit& (0+255),w,c
  6768  002D86                     l4391:
  6769  002D86  C016  F015         	movff	_isdigit$2341,??_isdigit
  6770  002D8A  3015               	rrcf	??_isdigit,w,c
  6771  002D8C  0012               	return	
  6772  002D8E                     __end_of_isdigit:
  6773                           	opt stack 0
  6774                           tblptru	equ	0xFF8
  6775                           tblptrh	equ	0xFF7
  6776                           tblptrl	equ	0xFF6
  6777                           tablat	equ	0xFF5
  6778                           prodh	equ	0xFF4
  6779                           prodl	equ	0xFF3
  6780                           intcon	equ	0xFF2
  6781                           intcon2	equ	0xFF1
  6782                           intcon3	equ	0xFF0
  6783                           indf0	equ	0xFEF
  6784                           postinc0	equ	0xFEE
  6785                           fsr0h	equ	0xFEA
  6786                           fsr0l	equ	0xFE9
  6787                           wreg	equ	0xFE8
  6788                           postdec1	equ	0xFE5
  6789                           fsr1l	equ	0xFE1
  6790                           indf2	equ	0xFDF
  6791                           postinc2	equ	0xFDE
  6792                           postdec2	equ	0xFDD
  6793                           fsr2h	equ	0xFDA
  6794                           fsr2l	equ	0xFD9
  6795                           status	equ	0xFD8
  6796                           
  6797 ;; *************** function ___wmul *****************
  6798 ;; Defined at:
  6799 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\wmul.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;  multiplier      2   20[COMRAM] unsigned int 
  6802 ;;  multiplicand    2   22[COMRAM] unsigned int 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  product         2   24[COMRAM] unsigned int 
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  2   20[COMRAM] unsigned int 
  6807 ;; Registers used:
  6808 ;;		wreg, status,2, status,0, prodl, prodh
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6814 ;;      Params:         4       0       0       0       0       0       0       0       0
  6815 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6817 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6818 ;;Total ram usage:        6 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; Hardware stack levels required when called:    2
  6821 ;; This function calls:
  6822 ;;		Nothing
  6823 ;; This function is called by:
  6824 ;;		_atoi
  6825 ;;		_SetaPWM1
  6826 ;;		_SetaPWM2
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text35
  6831  002CA4                     __ptext35:
  6832                           	opt stack 0
  6833  002CA4                     ___wmul:
  6834                           	opt stack 27
  6835                           
  6836                           ;incstack = 0
  6837  002CA4  5015               	movf	___wmul@multiplier,w,c
  6838  002CA6  0217               	mulwf	___wmul@multiplicand,c
  6839  002CA8  CFF3 F019          	movff	prodl,___wmul@product
  6840  002CAC  CFF4 F01A          	movff	prodh,___wmul@product+1
  6841  002CB0  5015               	movf	___wmul@multiplier,w,c
  6842  002CB2  0218               	mulwf	___wmul@multiplicand+1,c
  6843  002CB4  CFF3 FFF4          	movff	prodl,prodh
  6844  002CB8  6AF3               	clrf	prodl,c
  6845  002CBA  50F3               	movf	prodl,w,c
  6846  002CBC  2619               	addwf	___wmul@product,f,c
  6847  002CBE  50F4               	movf	prodh,w,c
  6848  002CC0  221A               	addwfc	___wmul@product+1,f,c
  6849  002CC2  5016               	movf	___wmul@multiplier+1,w,c
  6850  002CC4  0217               	mulwf	___wmul@multiplicand,c
  6851  002CC6  CFF3 FFF4          	movff	prodl,prodh
  6852  002CCA  6AF3               	clrf	prodl,c
  6853  002CCC  50F3               	movf	prodl,w,c
  6854  002CCE  2619               	addwf	___wmul@product,f,c
  6855  002CD0  50F4               	movf	prodh,w,c
  6856  002CD2  221A               	addwfc	___wmul@product+1,f,c
  6857  002CD4  C019  F015         	movff	___wmul@product,?___wmul
  6858  002CD8  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  6859  002CDC  0012               	return	
  6860  002CDE                     __end_of___wmul:
  6861                           	opt stack 0
  6862                           tblptru	equ	0xFF8
  6863                           tblptrh	equ	0xFF7
  6864                           tblptrl	equ	0xFF6
  6865                           tablat	equ	0xFF5
  6866                           prodh	equ	0xFF4
  6867                           prodl	equ	0xFF3
  6868                           intcon	equ	0xFF2
  6869                           intcon2	equ	0xFF1
  6870                           intcon3	equ	0xFF0
  6871                           indf0	equ	0xFEF
  6872                           postinc0	equ	0xFEE
  6873                           fsr0h	equ	0xFEA
  6874                           fsr0l	equ	0xFE9
  6875                           wreg	equ	0xFE8
  6876                           postdec1	equ	0xFE5
  6877                           fsr1l	equ	0xFE1
  6878                           indf2	equ	0xFDF
  6879                           postinc2	equ	0xFDE
  6880                           postdec2	equ	0xFDD
  6881                           fsr2h	equ	0xFDA
  6882                           fsr2l	equ	0xFD9
  6883                           status	equ	0xFD8
  6884                           
  6885 ;; *************** function ___awdiv *****************
  6886 ;; Defined at:
  6887 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awdiv.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;  dividend        2   20[COMRAM] int 
  6890 ;;  divisor         2   22[COMRAM] int 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  quotient        2   27[COMRAM] int 
  6893 ;;  sign            1   26[COMRAM] unsigned char 
  6894 ;;  counter         1   25[COMRAM] unsigned char 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  2   20[COMRAM] int 
  6897 ;; Registers used:
  6898 ;;		wreg, status,2, status,0, prodl
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6904 ;;      Params:         4       0       0       0       0       0       0       0       0
  6905 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6906 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6907 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6908 ;;Total ram usage:        9 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    2
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		_main
  6915 ;;		_SetaPWM1
  6916 ;;		_SetaPWM2
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920                           	psect	text36
  6921  0023C4                     __ptext36:
  6922                           	opt stack 0
  6923  0023C4                     ___awdiv:
  6924                           	opt stack 28
  6925                           
  6926                           ;incstack = 0
  6927  0023C4  6E19               	movwf	??___awdiv& (0+255),c
  6928  0023C6  0E00               	movlw	0
  6929  0023C8  6E1B               	movwf	___awdiv@sign,c
  6930  0023CA  5019               	movf	??___awdiv& (0+255),w,c
  6931  0023CC  5018               	movf	___awdiv@divisor+1,w,c
  6932  0023CE  0A80               	xorlw	128
  6933  0023D0  6EF3               	movwf	prodl,c
  6934  0023D2  0E80               	movlw	128
  6935  0023D4  5CF3               	subwf	prodl,w,c
  6936  0023D6  0E00               	movlw	0
  6937  0023D8  B4D8               	btfsc	status,2,c
  6938  0023DA  5C17               	subwf	___awdiv@divisor,w,c
  6939  0023DC  B0D8               	btfsc	status,0,c
  6940  0023DE  D008               	goto	l4871
  6941  0023E0  6C17               	negf	___awdiv@divisor,c
  6942  0023E2  1E18               	comf	___awdiv@divisor+1,f,c
  6943  0023E4  B0D8               	btfsc	status,0,c
  6944  0023E6  2A18               	incf	___awdiv@divisor+1,f,c
  6945  0023E8  6E19               	movwf	??___awdiv& (0+255),c
  6946  0023EA  0E01               	movlw	1
  6947  0023EC  6E1B               	movwf	___awdiv@sign,c
  6948  0023EE  5019               	movf	??___awdiv& (0+255),w,c
  6949  0023F0                     l4871:
  6950  0023F0  5016               	movf	___awdiv@dividend+1,w,c
  6951  0023F2  0A80               	xorlw	128
  6952  0023F4  6EF3               	movwf	prodl,c
  6953  0023F6  0E80               	movlw	128
  6954  0023F8  5CF3               	subwf	prodl,w,c
  6955  0023FA  0E00               	movlw	0
  6956  0023FC  B4D8               	btfsc	status,2,c
  6957  0023FE  5C15               	subwf	___awdiv@dividend,w,c
  6958  002400  B0D8               	btfsc	status,0,c
  6959  002402  D006               	goto	l4877
  6960  002404  6C15               	negf	___awdiv@dividend,c
  6961  002406  1E16               	comf	___awdiv@dividend+1,f,c
  6962  002408  B0D8               	btfsc	status,0,c
  6963  00240A  2A16               	incf	___awdiv@dividend+1,f,c
  6964  00240C  0E01               	movlw	1
  6965  00240E  1A1B               	xorwf	___awdiv@sign,f,c
  6966  002410                     l4877:
  6967  002410  0E00               	movlw	0
  6968  002412  6E1D               	movwf	___awdiv@quotient+1,c
  6969  002414  0E00               	movlw	0
  6970  002416  6E1C               	movwf	___awdiv@quotient,c
  6971  002418  5018               	movf	___awdiv@divisor+1,w,c
  6972  00241A  1017               	iorwf	___awdiv@divisor,w,c
  6973  00241C  B4D8               	btfsc	status,2,c
  6974  00241E  D01E               	goto	l4899
  6975  002420  6E19               	movwf	??___awdiv& (0+255),c
  6976  002422  0E01               	movlw	1
  6977  002424  6E1A               	movwf	___awdiv@counter,c
  6978  002426  5019               	movf	??___awdiv& (0+255),w,c
  6979  002428  D004               	goto	l4885
  6980  00242A                     l4883:
  6981  00242A  90D8               	bcf	status,0,c
  6982  00242C  3617               	rlcf	___awdiv@divisor,f,c
  6983  00242E  3618               	rlcf	___awdiv@divisor+1,f,c
  6984  002430  2A1A               	incf	___awdiv@counter,f,c
  6985  002432                     l4885:
  6986  002432  AE18               	btfss	___awdiv@divisor+1,7,c
  6987  002434  D7FA               	goto	l4883
  6988  002436                     l4887:
  6989  002436  90D8               	bcf	status,0,c
  6990  002438  361C               	rlcf	___awdiv@quotient,f,c
  6991  00243A  361D               	rlcf	___awdiv@quotient+1,f,c
  6992  00243C  5017               	movf	___awdiv@divisor,w,c
  6993  00243E  5C15               	subwf	___awdiv@dividend,w,c
  6994  002440  5018               	movf	___awdiv@divisor+1,w,c
  6995  002442  5816               	subwfb	___awdiv@dividend+1,w,c
  6996  002444  A0D8               	btfss	status,0,c
  6997  002446  D005               	goto	l4895
  6998  002448  5017               	movf	___awdiv@divisor,w,c
  6999  00244A  5E15               	subwf	___awdiv@dividend,f,c
  7000  00244C  5018               	movf	___awdiv@divisor+1,w,c
  7001  00244E  5A16               	subwfb	___awdiv@dividend+1,f,c
  7002  002450  801C               	bsf	___awdiv@quotient,0,c
  7003  002452                     l4895:
  7004  002452  90D8               	bcf	status,0,c
  7005  002454  3218               	rrcf	___awdiv@divisor+1,f,c
  7006  002456  3217               	rrcf	___awdiv@divisor,f,c
  7007  002458  2E1A               	decfsz	___awdiv@counter,f,c
  7008  00245A  D7ED               	goto	l4887
  7009  00245C                     l4899:
  7010  00245C  501B               	movf	___awdiv@sign,w,c
  7011  00245E  B4D8               	btfsc	status,2,c
  7012  002460  D004               	goto	l4903
  7013  002462  6C1C               	negf	___awdiv@quotient,c
  7014  002464  1E1D               	comf	___awdiv@quotient+1,f,c
  7015  002466  B0D8               	btfsc	status,0,c
  7016  002468  2A1D               	incf	___awdiv@quotient+1,f,c
  7017  00246A                     l4903:
  7018  00246A  C01C  F015         	movff	___awdiv@quotient,?___awdiv
  7019  00246E  C01D  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  7020  002472  0012               	return	
  7021  002474                     __end_of___awdiv:
  7022                           	opt stack 0
  7023                           tblptru	equ	0xFF8
  7024                           tblptrh	equ	0xFF7
  7025                           tblptrl	equ	0xFF6
  7026                           tablat	equ	0xFF5
  7027                           prodh	equ	0xFF4
  7028                           prodl	equ	0xFF3
  7029                           intcon	equ	0xFF2
  7030                           intcon2	equ	0xFF1
  7031                           intcon3	equ	0xFF0
  7032                           indf0	equ	0xFEF
  7033                           postinc0	equ	0xFEE
  7034                           fsr0h	equ	0xFEA
  7035                           fsr0l	equ	0xFE9
  7036                           wreg	equ	0xFE8
  7037                           postdec1	equ	0xFE5
  7038                           fsr1l	equ	0xFE1
  7039                           indf2	equ	0xFDF
  7040                           postinc2	equ	0xFDE
  7041                           postdec2	equ	0xFDD
  7042                           fsr2h	equ	0xFDA
  7043                           fsr2l	equ	0xFD9
  7044                           status	equ	0xFD8
  7045                           
  7046 ;; *************** function _interrupcao *****************
  7047 ;; Defined at:
  7048 ;;		line 50 in file "main.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;		None
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;		None
  7053 ;; Return value:  Size  Location     Type
  7054 ;;		None               void
  7055 ;; Registers used:
  7056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7062 ;;      Params:         0       0       0       0       0       0       0       0       0
  7063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7064 ;;      Temps:         15       0       0       0       0       0       0       0       0
  7065 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7066 ;;Total ram usage:       15 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    1
  7069 ;; This function calls:
  7070 ;;		_push
  7071 ;;		i2_inverte_saida
  7072 ;; This function is called by:
  7073 ;;		Interrupt level 2
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           	psect	intcode
  7078  001008                     __pintcode:
  7079                           	opt stack 0
  7080  001008                     _interrupcao:
  7081                           	opt stack 26
  7082                           
  7083                           ;incstack = 0
  7084  001008  CFFA F007          	movff	pclath,??_interrupcao+1
  7085  00100C  CFFB F008          	movff	pclatu,??_interrupcao+2
  7086  001010  CFE9 F009          	movff	fsr0l,??_interrupcao+3
  7087  001014  ED83  F011         	call	int_func,f	;refresh shadow registers
  7088                           pclatu	equ	0xFFB
  7089                           pclath	equ	0xFFA
  7090                           tblptru	equ	0xFF8
  7091                           tblptrh	equ	0xFF7
  7092                           tblptrl	equ	0xFF6
  7093                           tablat	equ	0xFF5
  7094                           prodh	equ	0xFF4
  7095                           prodl	equ	0xFF3
  7096                           intcon	equ	0xFF2
  7097                           intcon2	equ	0xFF1
  7098                           intcon3	equ	0xFF0
  7099                           indf0	equ	0xFEF
  7100                           postinc0	equ	0xFEE
  7101                           fsr0h	equ	0xFEA
  7102                           fsr0l	equ	0xFE9
  7103                           wreg	equ	0xFE8
  7104                           postdec1	equ	0xFE5
  7105                           fsr1l	equ	0xFE1
  7106                           indf2	equ	0xFDF
  7107                           postinc2	equ	0xFDE
  7108                           postdec2	equ	0xFDD
  7109                           fsr2h	equ	0xFDA
  7110                           fsr2l	equ	0xFD9
  7111                           status	equ	0xFD8
  7112                           
  7113                           	psect	intcode_body
  7114  002306                     __pintcode_body:
  7115                           	opt stack 26
  7116  002306                     int_func:
  7117                           	opt stack 26
  7118  002306  0006               	pop		; remove dummy address from shadow register refresh
  7119  002308  CFEA F00A          	movff	fsr0h,??_interrupcao+4
  7120  00230C  CFE1 F00B          	movff	fsr1l,??_interrupcao+5
  7121  002310  CFE2 F00C          	movff	fsr1h,??_interrupcao+6
  7122  002314  CFD9 F00D          	movff	fsr2l,??_interrupcao+7
  7123  002318  CFDA F00E          	movff	fsr2h,??_interrupcao+8
  7124  00231C  CFF3 F00F          	movff	prodl,??_interrupcao+9
  7125  002320  CFF4 F010          	movff	prodh,??_interrupcao+10
  7126  002324  CFF6 F011          	movff	tblptrl,??_interrupcao+11
  7127  002328  CFF7 F012          	movff	tblptrh,??_interrupcao+12
  7128  00232C  CFF8 F013          	movff	tblptru,??_interrupcao+13
  7129  002330  CFF5 F014          	movff	tablat,??_interrupcao+14
  7130                           
  7131                           ;main.c: 51: if (PIR1bits.RCIF) {
  7132  002334  AA9E               	btfss	3998,5,c	;volatile
  7133  002336  D029               	goto	i2l607
  7134                           
  7135                           ;main.c: 52: PIR1bits.RCIF = 0;
  7136  002338  9A9E               	bcf	3998,5,c	;volatile
  7137                           
  7138                           ;main.c: 53: c = RCREG;
  7139  00233A  CFAE F046          	movff	4014,_c	;volatile
  7140                           
  7141                           ;main.c: 54: if (receive_enabled) {
  7142  00233E  5049               	movf	_receive_enabled,w,c
  7143  002340  B4D8               	btfsc	status,2,c
  7144  002342  D00B               	goto	i2l3851
  7145                           
  7146                           ;main.c: 55: push(&buffer, c);
  7147  002344  0100               	movlb	0	; () banked
  7148  002346  0E00               	movlw	high _buffer
  7149  002348  6E02               	movwf	push@buffer+1,c
  7150  00234A  0100               	movlb	0	; () banked
  7151  00234C  0E60               	movlw	low _buffer
  7152  00234E  6E01               	movwf	push@buffer,c
  7153  002350  C046  F003         	movff	_c,push@c
  7154  002354  ECAA  F014         	call	_push	;wreg free
  7155                           
  7156                           ;main.c: 57: } else if (c == 'r') {
  7157  002358  D018               	goto	i2l607
  7158  00235A                     i2l3851:
  7159  00235A  5046               	movf	_c,w,c
  7160  00235C  0A72               	xorlw	114
  7161  00235E  A4D8               	btfss	status,2,c
  7162  002360  D014               	goto	i2l607
  7163                           
  7164                           ;main.c: 58: inverte_saida(31759);
  7165  002362  0E7C               	movlw	124
  7166  002364  6E02               	movwf	i2inverte_saida@pino+1,c
  7167  002366  0E0F               	movlw	15
  7168  002368  6E01               	movwf	i2inverte_saida@pino,c
  7169  00236A  EC9E  F00D         	call	i2_inverte_saida	;wreg free
  7170                           
  7171                           ;main.c: 59: receive_enabled = 1;
  7172  00236E  6E06               	movwf	??_interrupcao& (0+255),c
  7173  002370  0E01               	movlw	1
  7174  002372  6E49               	movwf	_receive_enabled,c
  7175  002374  5006               	movf	??_interrupcao& (0+255),w,c
  7176                           
  7177                           ;main.c: 60: push(&buffer, c);
  7178  002376  0100               	movlb	0	; () banked
  7179  002378  0E00               	movlw	high _buffer
  7180  00237A  6E02               	movwf	push@buffer+1,c
  7181  00237C  0100               	movlb	0	; () banked
  7182  00237E  0E60               	movlw	low _buffer
  7183  002380  6E01               	movwf	push@buffer,c
  7184  002382  C046  F003         	movff	_c,push@c
  7185  002386  ECAA  F014         	call	_push	;wreg free
  7186  00238A                     i2l607:
  7187  00238A  C014  FFF5         	movff	??_interrupcao+14,tablat
  7188  00238E  C013  FFF8         	movff	??_interrupcao+13,tblptru
  7189  002392  C012  FFF7         	movff	??_interrupcao+12,tblptrh
  7190  002396  C011  FFF6         	movff	??_interrupcao+11,tblptrl
  7191  00239A  C010  FFF4         	movff	??_interrupcao+10,prodh
  7192  00239E  C00F  FFF3         	movff	??_interrupcao+9,prodl
  7193  0023A2  C00E  FFDA         	movff	??_interrupcao+8,fsr2h
  7194  0023A6  C00D  FFD9         	movff	??_interrupcao+7,fsr2l
  7195  0023AA  C00C  FFE2         	movff	??_interrupcao+6,fsr1h
  7196  0023AE  C00B  FFE1         	movff	??_interrupcao+5,fsr1l
  7197  0023B2  C00A  FFEA         	movff	??_interrupcao+4,fsr0h
  7198  0023B6  C009  FFE9         	movff	??_interrupcao+3,fsr0l
  7199  0023BA  C008  FFFB         	movff	??_interrupcao+2,pclatu
  7200  0023BE  C007  FFFA         	movff	??_interrupcao+1,pclath
  7201  0023C2  0011               	retfie		f
  7202  0023C4                     __end_of_interrupcao:
  7203                           	opt stack 0
  7204                           pclatu	equ	0xFFB
  7205                           pclath	equ	0xFFA
  7206                           tblptru	equ	0xFF8
  7207                           tblptrh	equ	0xFF7
  7208                           tblptrl	equ	0xFF6
  7209                           tablat	equ	0xFF5
  7210                           prodh	equ	0xFF4
  7211                           prodl	equ	0xFF3
  7212                           intcon	equ	0xFF2
  7213                           intcon2	equ	0xFF1
  7214                           intcon3	equ	0xFF0
  7215                           indf0	equ	0xFEF
  7216                           postinc0	equ	0xFEE
  7217                           fsr0h	equ	0xFEA
  7218                           fsr0l	equ	0xFE9
  7219                           wreg	equ	0xFE8
  7220                           postdec1	equ	0xFE5
  7221                           fsr1h	equ	0xFE2
  7222                           fsr1l	equ	0xFE1
  7223                           indf2	equ	0xFDF
  7224                           postinc2	equ	0xFDE
  7225                           postdec2	equ	0xFDD
  7226                           fsr2h	equ	0xFDA
  7227                           fsr2l	equ	0xFD9
  7228                           status	equ	0xFD8
  7229                           
  7230 ;; *************** function i2_inverte_saida *****************
  7231 ;; Defined at:
  7232 ;;		line 254 in file "SanUSB1X.h"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;  pino            2    0[COMRAM] unsigned int 
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;		None
  7237 ;; Return value:  Size  Location     Type
  7238 ;;		None               void
  7239 ;; Registers used:
  7240 ;;		wreg, status,2, status,0
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7246 ;;      Params:         2       0       0       0       0       0       0       0       0
  7247 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7248 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7249 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7250 ;;Total ram usage:        4 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; This function calls:
  7253 ;;		Nothing
  7254 ;; This function is called by:
  7255 ;;		_interrupcao
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           	psect	text38
  7260  001B3C                     __ptext38:
  7261                           	opt stack 0
  7262  001B3C                     i2_inverte_saida:
  7263                           	opt stack 26
  7264                           
  7265                           ;SanUSB1X.h: 256: switch(pino){
  7266                           
  7267                           ;incstack = 0
  7268  001B3C  D051               	goto	i2l3663
  7269  001B3E                     i2l280:
  7270  001B3E  9092               	bcf	3986,0,c	;volatile
  7271  001B40  7080               	btg	3968,0,c	;volatile
  7272  001B42  D0A8               	goto	i2l308
  7273  001B44                     i2l282:
  7274  001B44  9292               	bcf	3986,1,c	;volatile
  7275  001B46  7280               	btg	3968,1,c	;volatile
  7276  001B48  D0A5               	goto	i2l308
  7277  001B4A                     i2l283:
  7278  001B4A  9492               	bcf	3986,2,c	;volatile
  7279  001B4C  7480               	btg	3968,2,c	;volatile
  7280  001B4E  D0A2               	goto	i2l308
  7281  001B50                     i2l284:
  7282  001B50  9692               	bcf	3986,3,c	;volatile
  7283  001B52  7680               	btg	3968,3,c	;volatile
  7284  001B54  D09F               	goto	i2l308
  7285  001B56                     i2l285:
  7286  001B56  9892               	bcf	3986,4,c	;volatile
  7287  001B58  7880               	btg	3968,4,c	;volatile
  7288  001B5A  D09C               	goto	i2l308
  7289  001B5C                     i2l286:
  7290  001B5C  9A92               	bcf	3986,5,c	;volatile
  7291  001B5E  7A80               	btg	3968,5,c	;volatile
  7292  001B60  D099               	goto	i2l308
  7293  001B62                     i2l287:
  7294  001B62  9093               	bcf	3987,0,c	;volatile
  7295  001B64  7081               	btg	3969,0,c	;volatile
  7296  001B66  D096               	goto	i2l308
  7297  001B68                     i2l288:
  7298  001B68  9293               	bcf	3987,1,c	;volatile
  7299  001B6A  7281               	btg	3969,1,c	;volatile
  7300  001B6C  D093               	goto	i2l308
  7301  001B6E                     i2l289:
  7302  001B6E  9493               	bcf	3987,2,c	;volatile
  7303  001B70  7481               	btg	3969,2,c	;volatile
  7304  001B72  D090               	goto	i2l308
  7305  001B74                     i2l290:
  7306  001B74  9693               	bcf	3987,3,c	;volatile
  7307  001B76  7681               	btg	3969,3,c	;volatile
  7308  001B78  D08D               	goto	i2l308
  7309  001B7A                     i2l291:
  7310  001B7A  9893               	bcf	3987,4,c	;volatile
  7311  001B7C  7881               	btg	3969,4,c	;volatile
  7312  001B7E  D08A               	goto	i2l308
  7313  001B80                     i2l292:
  7314  001B80  9A93               	bcf	3987,5,c	;volatile
  7315  001B82  7A81               	btg	3969,5,c	;volatile
  7316  001B84  D087               	goto	i2l308
  7317  001B86                     i2l293:
  7318  001B86  9C93               	bcf	3987,6,c	;volatile
  7319  001B88  7C81               	btg	3969,6,c	;volatile
  7320  001B8A  D084               	goto	i2l308
  7321  001B8C                     i2l294:
  7322  001B8C  9E93               	bcf	3987,7,c	;volatile
  7323  001B8E  7E81               	btg	3969,7,c	;volatile
  7324  001B90  D081               	goto	i2l308
  7325  001B92                     i2l295:
  7326  001B92  9094               	bcf	3988,0,c	;volatile
  7327  001B94  7082               	btg	3970,0,c	;volatile
  7328  001B96  D07E               	goto	i2l308
  7329  001B98                     i2l296:
  7330  001B98  9294               	bcf	3988,1,c	;volatile
  7331  001B9A  7282               	btg	3970,1,c	;volatile
  7332  001B9C  D07B               	goto	i2l308
  7333  001B9E                     i2l297:
  7334  001B9E  9494               	bcf	3988,2,c	;volatile
  7335  001BA0  7482               	btg	3970,2,c	;volatile
  7336  001BA2  D078               	goto	i2l308
  7337  001BA4                     i2l298:
  7338  001BA4  9C94               	bcf	3988,6,c	;volatile
  7339  001BA6  7C82               	btg	3970,6,c	;volatile
  7340  001BA8  D075               	goto	i2l308
  7341  001BAA                     i2l299:
  7342  001BAA  9E94               	bcf	3988,7,c	;volatile
  7343  001BAC  7E82               	btg	3970,7,c	;volatile
  7344  001BAE  D072               	goto	i2l308
  7345  001BB0                     i2l300:
  7346  001BB0  9095               	bcf	3989,0,c	;volatile
  7347  001BB2  7083               	btg	3971,0,c	;volatile
  7348  001BB4  D06F               	goto	i2l308
  7349  001BB6                     i2l301:
  7350  001BB6  9295               	bcf	3989,1,c	;volatile
  7351  001BB8  7283               	btg	3971,1,c	;volatile
  7352  001BBA  D06C               	goto	i2l308
  7353  001BBC                     i2l302:
  7354  001BBC  9495               	bcf	3989,2,c	;volatile
  7355  001BBE  7483               	btg	3971,2,c	;volatile
  7356  001BC0  D069               	goto	i2l308
  7357  001BC2                     i2l303:
  7358  001BC2  9695               	bcf	3989,3,c	;volatile
  7359  001BC4  7683               	btg	3971,3,c	;volatile
  7360  001BC6  D066               	goto	i2l308
  7361  001BC8                     i2l304:
  7362  001BC8  9895               	bcf	3989,4,c	;volatile
  7363  001BCA  7883               	btg	3971,4,c	;volatile
  7364  001BCC  D063               	goto	i2l308
  7365  001BCE                     i2l305:
  7366  001BCE  9A95               	bcf	3989,5,c	;volatile
  7367  001BD0  7A83               	btg	3971,5,c	;volatile
  7368  001BD2  D060               	goto	i2l308
  7369  001BD4                     i2l306:
  7370  001BD4  9C95               	bcf	3989,6,c	;volatile
  7371  001BD6  7C83               	btg	3971,6,c	;volatile
  7372  001BD8  D05D               	goto	i2l308
  7373  001BDA                     i2l307:
  7374  001BDA  9E95               	bcf	3989,7,c	;volatile
  7375  001BDC  7E83               	btg	3971,7,c	;volatile
  7376  001BDE  D05A               	goto	i2l308
  7377  001BE0                     i2l3663:
  7378  001BE0  C001  F003         	movff	i2inverte_saida@pino,??i2_inverte_saida
  7379  001BE4  C002  F004         	movff	i2inverte_saida@pino+1,??i2_inverte_saida+1
  7380                           
  7381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7382                           ; Switch size 1, requested type "space"
  7383                           ; Number of cases is 1, Range of values is 124 to 124
  7384                           ; switch strategies available:
  7385                           ; Name         Instructions Cycles
  7386                           ; simple_byte            4     3 (average)
  7387                           ;	Chosen strategy is simple_byte
  7388  001BE8  5004               	movf	??i2_inverte_saida+1,w,c
  7389  001BEA  0A7C               	xorlw	124	; case 124
  7390  001BEC  A4D8               	btfss	status,2,c
  7391  001BEE  D052               	goto	i2l308
  7392                           
  7393                           ; Switch size 1, requested type "space"
  7394                           ; Number of cases is 27, Range of values is 0 to 31
  7395                           ; switch strategies available:
  7396                           ; Name         Instructions Cycles
  7397                           ; simple_byte           82    42 (average)
  7398                           ;	Chosen strategy is simple_byte
  7399  001BF0  5003               	movf	??i2_inverte_saida,w,c
  7400  001BF2  0A00               	xorlw	0	; case 0
  7401  001BF4  B4D8               	btfsc	status,2,c
  7402  001BF6  D7A3               	goto	i2l280
  7403  001BF8  0A01               	xorlw	1	; case 1
  7404  001BFA  B4D8               	btfsc	status,2,c
  7405  001BFC  D7A3               	goto	i2l282
  7406  001BFE  0A03               	xorlw	3	; case 2
  7407  001C00  B4D8               	btfsc	status,2,c
  7408  001C02  D7A3               	goto	i2l283
  7409  001C04  0A01               	xorlw	1	; case 3
  7410  001C06  B4D8               	btfsc	status,2,c
  7411  001C08  D7A3               	goto	i2l284
  7412  001C0A  0A07               	xorlw	7	; case 4
  7413  001C0C  B4D8               	btfsc	status,2,c
  7414  001C0E  D7A3               	goto	i2l285
  7415  001C10  0A01               	xorlw	1	; case 5
  7416  001C12  B4D8               	btfsc	status,2,c
  7417  001C14  D7A3               	goto	i2l286
  7418  001C16  0A0D               	xorlw	13	; case 8
  7419  001C18  B4D8               	btfsc	status,2,c
  7420  001C1A  D7A3               	goto	i2l287
  7421  001C1C  0A01               	xorlw	1	; case 9
  7422  001C1E  B4D8               	btfsc	status,2,c
  7423  001C20  D7A3               	goto	i2l288
  7424  001C22  0A03               	xorlw	3	; case 10
  7425  001C24  B4D8               	btfsc	status,2,c
  7426  001C26  D7A3               	goto	i2l289
  7427  001C28  0A01               	xorlw	1	; case 11
  7428  001C2A  B4D8               	btfsc	status,2,c
  7429  001C2C  D7A3               	goto	i2l290
  7430  001C2E  0A07               	xorlw	7	; case 12
  7431  001C30  B4D8               	btfsc	status,2,c
  7432  001C32  D7A3               	goto	i2l291
  7433  001C34  0A01               	xorlw	1	; case 13
  7434  001C36  B4D8               	btfsc	status,2,c
  7435  001C38  D7A3               	goto	i2l292
  7436  001C3A  0A03               	xorlw	3	; case 14
  7437  001C3C  B4D8               	btfsc	status,2,c
  7438  001C3E  D7A3               	goto	i2l293
  7439  001C40  0A01               	xorlw	1	; case 15
  7440  001C42  B4D8               	btfsc	status,2,c
  7441  001C44  D7A3               	goto	i2l294
  7442  001C46  0A1F               	xorlw	31	; case 16
  7443  001C48  B4D8               	btfsc	status,2,c
  7444  001C4A  D7A3               	goto	i2l295
  7445  001C4C  0A01               	xorlw	1	; case 17
  7446  001C4E  B4D8               	btfsc	status,2,c
  7447  001C50  D7A3               	goto	i2l296
  7448  001C52  0A03               	xorlw	3	; case 18
  7449  001C54  B4D8               	btfsc	status,2,c
  7450  001C56  D7A3               	goto	i2l297
  7451  001C58  0A04               	xorlw	4	; case 22
  7452  001C5A  B4D8               	btfsc	status,2,c
  7453  001C5C  D7A3               	goto	i2l298
  7454  001C5E  0A01               	xorlw	1	; case 23
  7455  001C60  B4D8               	btfsc	status,2,c
  7456  001C62  D7A3               	goto	i2l299
  7457  001C64  0A0F               	xorlw	15	; case 24
  7458  001C66  B4D8               	btfsc	status,2,c
  7459  001C68  D7A3               	goto	i2l300
  7460  001C6A  0A01               	xorlw	1	; case 25
  7461  001C6C  B4D8               	btfsc	status,2,c
  7462  001C6E  D7A3               	goto	i2l301
  7463  001C70  0A03               	xorlw	3	; case 26
  7464  001C72  B4D8               	btfsc	status,2,c
  7465  001C74  D7A3               	goto	i2l302
  7466  001C76  0A01               	xorlw	1	; case 27
  7467  001C78  B4D8               	btfsc	status,2,c
  7468  001C7A  D7A3               	goto	i2l303
  7469  001C7C  0A07               	xorlw	7	; case 28
  7470  001C7E  B4D8               	btfsc	status,2,c
  7471  001C80  D7A3               	goto	i2l304
  7472  001C82  0A01               	xorlw	1	; case 29
  7473  001C84  B4D8               	btfsc	status,2,c
  7474  001C86  D7A3               	goto	i2l305
  7475  001C88  0A03               	xorlw	3	; case 30
  7476  001C8A  B4D8               	btfsc	status,2,c
  7477  001C8C  D7A3               	goto	i2l306
  7478  001C8E  0A01               	xorlw	1	; case 31
  7479  001C90  B4D8               	btfsc	status,2,c
  7480  001C92  D7A3               	goto	i2l307
  7481  001C94                     i2l308:
  7482  001C94  0012               	return	
  7483  001C96                     __end_ofi2_inverte_saida:
  7484                           	opt stack 0
  7485                           pclatu	equ	0xFFB
  7486                           pclath	equ	0xFFA
  7487                           tblptru	equ	0xFF8
  7488                           tblptrh	equ	0xFF7
  7489                           tblptrl	equ	0xFF6
  7490                           tablat	equ	0xFF5
  7491                           prodh	equ	0xFF4
  7492                           prodl	equ	0xFF3
  7493                           intcon	equ	0xFF2
  7494                           intcon2	equ	0xFF1
  7495                           intcon3	equ	0xFF0
  7496                           indf0	equ	0xFEF
  7497                           postinc0	equ	0xFEE
  7498                           fsr0h	equ	0xFEA
  7499                           fsr0l	equ	0xFE9
  7500                           wreg	equ	0xFE8
  7501                           postdec1	equ	0xFE5
  7502                           fsr1h	equ	0xFE2
  7503                           fsr1l	equ	0xFE1
  7504                           indf2	equ	0xFDF
  7505                           postinc2	equ	0xFDE
  7506                           postdec2	equ	0xFDD
  7507                           fsr2h	equ	0xFDA
  7508                           fsr2l	equ	0xFD9
  7509                           status	equ	0xFD8
  7510                           
  7511 ;; *************** function _push *****************
  7512 ;; Defined at:
  7513 ;;		line 36 in file "main.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;  buffer          2    0[COMRAM] PTR struct .
  7516 ;;		 -> buffer(70), 
  7517 ;;  c               1    2[COMRAM] unsigned char 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;		None
  7520 ;; Return value:  Size  Location     Type
  7521 ;;		None               void
  7522 ;; Registers used:
  7523 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7529 ;;      Params:         3       0       0       0       0       0       0       0       0
  7530 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7531 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7532 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7533 ;;Total ram usage:        5 bytes
  7534 ;; Hardware stack levels used:    1
  7535 ;; This function calls:
  7536 ;;		Nothing
  7537 ;; This function is called by:
  7538 ;;		_interrupcao
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text39
  7543  002954                     __ptext39:
  7544                           	opt stack 0
  7545  002954                     _push:
  7546                           	opt stack 26
  7547                           
  7548                           ;main.c: 37: buffer->items[buffer->last] = c;
  7549                           
  7550                           ;incstack = 0
  7551  002954  EE20 F042          	lfsr	2,66
  7552  002958  5001               	movf	push@buffer,w,c
  7553  00295A  26D9               	addwf	fsr2l,f,c
  7554  00295C  5002               	movf	push@buffer+1,w,c
  7555  00295E  22DA               	addwfc	fsr2h,f,c
  7556  002960  CFDE F004          	movff	postinc2,??_push
  7557  002964  CFDD F005          	movff	postdec2,??_push+1
  7558  002968  5004               	movf	??_push,w,c
  7559  00296A  2401               	addwf	push@buffer,w,c
  7560  00296C  6ED9               	movwf	fsr2l,c
  7561  00296E  5005               	movf	??_push+1,w,c
  7562  002970  2002               	addwfc	push@buffer+1,w,c
  7563  002972  6EDA               	movwf	fsr2h,c
  7564  002974  C003  FFDF         	movff	push@c,indf2
  7565                           
  7566                           ;main.c: 38: buffer->last = (buffer->last + 1) % 64;
  7567  002978  EE20 F042          	lfsr	2,66
  7568  00297C  5001               	movf	push@buffer,w,c
  7569  00297E  26D9               	addwf	fsr2l,f,c
  7570  002980  5002               	movf	push@buffer+1,w,c
  7571  002982  22DA               	addwfc	fsr2h,f,c
  7572  002984  CFDE F004          	movff	postinc2,??_push
  7573  002988  CFDD F005          	movff	postdec2,??_push+1
  7574  00298C  0E01               	movlw	1
  7575  00298E  2604               	addwf	??_push,f,c
  7576  002990  0E00               	movlw	0
  7577  002992  2205               	addwfc	??_push+1,f,c
  7578  002994  0E3F               	movlw	63
  7579  002996  1604               	andwf	??_push,f,c
  7580  002998  0E00               	movlw	0
  7581  00299A  1605               	andwf	??_push+1,f,c
  7582  00299C  EE20 F042          	lfsr	2,66
  7583  0029A0  5001               	movf	push@buffer,w,c
  7584  0029A2  26D9               	addwf	fsr2l,f,c
  7585  0029A4  5002               	movf	push@buffer+1,w,c
  7586  0029A6  22DA               	addwfc	fsr2h,f,c
  7587  0029A8  C004  FFDE         	movff	??_push,postinc2
  7588  0029AC  C005  FFDD         	movff	??_push+1,postdec2
  7589                           
  7590                           ;main.c: 39: buffer->count++;
  7591  0029B0  EE20 F044          	lfsr	2,68
  7592  0029B4  5001               	movf	push@buffer,w,c
  7593  0029B6  26D9               	addwf	fsr2l,f,c
  7594  0029B8  5002               	movf	push@buffer+1,w,c
  7595  0029BA  22DA               	addwfc	fsr2h,f,c
  7596  0029BC  2ADE               	incf	postinc2,f,c
  7597  0029BE  0E00               	movlw	0
  7598  0029C0  22DD               	addwfc	postdec2,f,c
  7599  0029C2  0012               	return	
  7600  0029C4                     __end_of_push:
  7601                           	opt stack 0
  7602                           pclatu	equ	0xFFB
  7603                           pclath	equ	0xFFA
  7604                           tblptru	equ	0xFF8
  7605                           tblptrh	equ	0xFF7
  7606                           tblptrl	equ	0xFF6
  7607                           tablat	equ	0xFF5
  7608                           prodh	equ	0xFF4
  7609                           prodl	equ	0xFF3
  7610                           intcon	equ	0xFF2
  7611                           intcon2	equ	0xFF1
  7612                           intcon3	equ	0xFF0
  7613                           indf0	equ	0xFEF
  7614                           postinc0	equ	0xFEE
  7615                           fsr0h	equ	0xFEA
  7616                           fsr0l	equ	0xFE9
  7617                           wreg	equ	0xFE8
  7618                           postdec1	equ	0xFE5
  7619                           fsr1h	equ	0xFE2
  7620                           fsr1l	equ	0xFE1
  7621                           indf2	equ	0xFDF
  7622                           postinc2	equ	0xFDE
  7623                           postdec2	equ	0xFDD
  7624                           fsr2h	equ	0xFDA
  7625                           fsr2l	equ	0xFD9
  7626                           status	equ	0xFD8
  7627                           pclatu	equ	0xFFB
  7628                           pclath	equ	0xFFA
  7629                           tblptru	equ	0xFF8
  7630                           tblptrh	equ	0xFF7
  7631                           tblptrl	equ	0xFF6
  7632                           tablat	equ	0xFF5
  7633                           prodh	equ	0xFF4
  7634                           prodl	equ	0xFF3
  7635                           intcon	equ	0xFF2
  7636                           intcon2	equ	0xFF1
  7637                           intcon3	equ	0xFF0
  7638                           indf0	equ	0xFEF
  7639                           postinc0	equ	0xFEE
  7640                           fsr0h	equ	0xFEA
  7641                           fsr0l	equ	0xFE9
  7642                           wreg	equ	0xFE8
  7643                           postdec1	equ	0xFE5
  7644                           fsr1h	equ	0xFE2
  7645                           fsr1l	equ	0xFE1
  7646                           indf2	equ	0xFDF
  7647                           postinc2	equ	0xFDE
  7648                           postdec2	equ	0xFDD
  7649                           fsr2h	equ	0xFDA
  7650                           fsr2l	equ	0xFD9
  7651                           status	equ	0xFD8
  7652                           
  7653                           	psect	rparam
  7654  0000                     pclatu	equ	0xFFB
  7655                           pclath	equ	0xFFA
  7656                           tblptru	equ	0xFF8
  7657                           tblptrh	equ	0xFF7
  7658                           tblptrl	equ	0xFF6
  7659                           tablat	equ	0xFF5
  7660                           prodh	equ	0xFF4
  7661                           prodl	equ	0xFF3
  7662                           intcon	equ	0xFF2
  7663                           intcon2	equ	0xFF1
  7664                           intcon3	equ	0xFF0
  7665                           indf0	equ	0xFEF
  7666                           postinc0	equ	0xFEE
  7667                           fsr0h	equ	0xFEA
  7668                           fsr0l	equ	0xFE9
  7669                           wreg	equ	0xFE8
  7670                           postdec1	equ	0xFE5
  7671                           fsr1h	equ	0xFE2
  7672                           fsr1l	equ	0xFE1
  7673                           indf2	equ	0xFDF
  7674                           postinc2	equ	0xFDE
  7675                           postdec2	equ	0xFDD
  7676                           fsr2h	equ	0xFDA
  7677                           fsr2l	equ	0xFD9
  7678                           status	equ	0xFD8


Data Sizes:
    Strings     86
    Constant    10
    Data        78
    BSS         143
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      75
    BANK0           160     15     149
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[7]), STR_7(CODE[8]), STR_5(CODE[12]), STR_4(CODE[3]), 
		 -> STR_1(CODE[6]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[7]), STR_7(CODE[8]), STR_5(CODE[12]), STR_4(CODE[3]), 
		 -> STR_1(CODE[6]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[7]), STR_7(CODE[8]), STR_5(CODE[12]), STR_4(CODE[3]), 
		 -> STR_1(CODE[6]), device_id(COMRAM[8]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[7]), STR_7(CODE[8]), STR_5(CODE[12]), STR_4(CODE[3]), 
		 -> STR_1(CODE[6]), device_id(COMRAM[8]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    memset@p1	PTR void  size(2) Largest target is 64
		 -> recv(BANK0[64]), 

    memset@p	PTR unsigned char  size(2) Largest target is 64
		 -> recv(BANK0[64]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_8(CODE[16]), STR_6(CODE[28]), 

    printf@_val._cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_10(CODE[7]), ip_addr(BANK1[64]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S2057$_cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_10(CODE[7]), ip_addr(BANK1[64]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_10(CODE[7]), ip_addr(BANK1[64]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    main@str	PTR unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    sp__memset	PTR void  size(2) Largest target is 64
		 -> recv(BANK0[64]), 

    pop@buffer	PTR struct . size(2) Largest target is 70
		 -> buffer(BANK0[70]), 

    push@buffer	PTR struct . size(2) Largest target is 70
		 -> buffer(BANK0[70]), 

    init_buffer@buffer	PTR struct . size(2) Largest target is 70
		 -> buffer(BANK0[70]), 

    lcd_escreve@buffer	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[2]), STR_2(CODE[2]), NULL(NULL[0]), recv(BANK0[64]), 

    sendsw@st	PTR unsigned char  size(2) Largest target is 8
		 -> device_id(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_taxa_serial
    _taxa_serial->___lldiv
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _sendsw->_swputc
    _printf->___lwmod
    ___lwmod->___lwdiv
    _lcd_ini->_Lcd_Cmd
    _lcd_escreve->_Lcd_Chr_CP
    _lcd_escreve->_Lcd_Cmd
    _clock_int_4MHz->___lwdiv
    ___lwdiv->___awmod
    _clear_local_buffer->_memset
    _atoi->___wmul

Critical Paths under _interrupcao in COMRAM

    _interrupcao->_push

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   20720
                                             50 COMRAM     2     2      0
                                              9 BANK0      6     6      0
                            _Lcd_Cmd
                            ___awdiv
                               _atoi
                 _clear_local_buffer
                     _clock_int_4MHz
               _habilita_interrupcao
                        _init_buffer
                      _inverte_saida
                        _lcd_escreve
                            _lcd_ini
                             _memset
                         _nivel_alto
                        _nivel_baixo
                                _pop
                             _printf
                             _sendsw
                             _strchr
                             _strlen
                             _strstr
                             _strtok
                        _taxa_serial
                           _tempo_ms
                          _timer0_ms
 ---------------------------------------------------------------------------------
 (1) _timer0_ms                                            4     2      2     222
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _tempo_ms                                             4     2      2     299
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _taxa_serial                                         16    12      4     568
                                             34 COMRAM    16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     395
                                             20 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _strtok                                               4     0      4    3263
                                             33 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     3      4    1335
                                             26 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     3      4    1335
                                             26 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               4     0      4    2776
                                             35 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              9     3      6     423
                                             26 COMRAM     9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     284
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               6     2      4    1048
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sendsw                                               3     1      2     170
                                             21 COMRAM     3     1      2
                             _swputc
 ---------------------------------------------------------------------------------
 (2) _swputc                                               1     1      0      31
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              17    11      6    3205
                                             41 COMRAM     8     2      6
                                              0 BANK0      9     9      0
                            ___lwdiv
                            ___lwmod
                              _putch
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1156
                                             35 COMRAM     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _pop                                                  5     3      2     343
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _nivel_baixo                                          4     2      2     416
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _nivel_alto                                           4     2      2     262
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lcd_ini                                              2     2      0     452
                                             23 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_escreve                                          5     2      3     913
                                             23 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     248
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     248
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _inverte_saida                                        4     2      2     150
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_buffer                                          2     0      2     170
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _habilita_interrupcao                                 4     2      2     108
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _clock_int_4MHz                                       0     0      0    1783
                            ___awmod
                            ___lwdiv
                          _le_eeprom
 ---------------------------------------------------------------------------------
 (2) _le_eeprom                                            1     1      0      31
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1165
                                             27 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     587
                                             20 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _clear_local_buffer                                   1     1      0     830
                                             28 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     830
                                             20 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 7     5      2    1204
                                             26 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     907
                                             20 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupcao                                         15    15      0     436
                                              5 COMRAM    15    15      0
                               _push
                    i2_inverte_saida
 ---------------------------------------------------------------------------------
 (5) i2_inverte_saida                                      4     2      2      48
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _push                                                 5     2      3     388
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   ___awdiv
   _atoi
     ___wmul
     _isdigit
   _clear_local_buffer
     _memset
   _clock_int_4MHz
     ___awmod
     ___lwdiv
       ___awmod (ARG)
     _le_eeprom
   _habilita_interrupcao
   _init_buffer
   _inverte_saida
   _lcd_escreve
     _Lcd_Chr_CP
     _Lcd_Cmd
   _lcd_ini
     _Lcd_Cmd
   _memset
   _nivel_alto
   _nivel_baixo
   _pop
   _printf
     ___lwdiv
       ___awmod (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___awmod (ARG)
     _putch
     _strlen (ARG)
   _sendsw
     _swputc
   _strchr
   _strlen
   _strstr
     _strchr
     _strlen
     _strncmp
       _strlen (ARG)
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr
   _taxa_serial
     ___lldiv
   _tempo_ms
   _timer0_ms

 _interrupcao (ROOT)
   _push
   i2_inverte_saida

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      95       5       93.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     34      4B       1       78.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     120      20        0.0%
DATA                 0      0     120       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Fri Sep 08 20:24:15 2017

                            _R 0035                              _c 0046                              _k 0047  
                            _s 004A               ??_clock_int_4MHz 0024                   ___awdiv@sign 001B  
          ___wmul@multiplicand 0017                    lcd_ini@data 0019                            l210 1854  
                          l300 1A56                            l220 188C                            l212 185A  
                          l301 1A5C                            l221 1892                            l213 1860  
                          l302 1A62                            l230 18CA                            l222 1898  
                          l214 1866                            l303 1A68                            l231 18D0  
                          l223 189E                            l215 186C                            l304 1A6E  
                          l240 1908                            l224 18A4                            l216 1872  
                          l305 1A74                            l233 18DE                            l225 18AA  
                          l241 19E0                            l306 1A7A                            l234 18E4  
                          l218 1880                            l250 16D6                            l307 1A80  
                          l235 18EA                            l227 18B8                            l219 1886  
                          l251 16DC                            l180 24A4                            l172 247A  
                          l308 1B3A                            l236 18F0                            l228 18BE  
                          l260 1716                            l181 24A8                            l237 18F6  
                          l229 18C4                            l253 16EC                            l245 16BE  
                          l341 2DA4                            l174 2480                            l182 2516  
                          l238 18FC                            l270 175A                            l262 1726  
                          l254 16F2                            l175 2486                            l239 1902  
                          l271 1760                            l263 172C                            l255 16F8  
                          l247 16C4                            l176 248C                            l280 19E4  
                          l520 219C                            l272 1766                            l264 1732  
                          l256 16FE                            l248 16CA                            l177 2492  
                          l273 176C                            l265 1738                            l257 1704  
                          l249 16D0                            l178 2498                            l290 1A1A  
                          l282 19EA          __end_of_inverte_saida 1B3C                            l274 1772  
                          l266 173E                            l258 170A                            l179 249E  
                          l291 1A20                            l283 19F0                            l275 1778  
                          l259 1710                            l292 1A26                            l284 19F6  
                          l268 174E                            l276 1850                            l445 2A44  
                          l293 1A2C                            l285 19FC                            l269 1754  
                          l429 2CF8                            l294 1A32                            l286 1A02  
                          l295 1A38                            l287 1A08                            l463 2DD2  
                          l448 2A52                            l296 1A3E                            l288 1A0E  
                          l297 1A44                            l289 1A14                            l298 1A4A  
                          l299 1A50                            l639 2DF0                            l841 1DE2  
                          l842 1DEA                            l677 16BA                            _PR2 000FCB  
                          _REG 0039                            _pop 28E2                            _pos 0048  
                 ___awmod@sign 001B        __end_ofi2_inverte_saida 1C96                            prod 000FF3  
                          wreg 000FE8                           EEADR 000FA9                    main@lcd_pos 00EF  
                         l1203 2B4A                           l1213 2BE2                           l1134 2756  
                         l1304 2304                           l1241 2A2E                           l1314 285A  
                         l1260 25B2                           l1239 29C4                           l1272 2082  
                         l1274 2168                           l1277 2160                           l1295 28D8  
                         l5111 1156                           l5103 1104                           l5121 119E  
                         l4411 260E                           l4403 25E0                           l4219 29F4  
                         l5131 11E0                           l5107 110C                           l4413 2616  
                         l4501 22E4                           l5141 1288                           l4415 261A  
                         l4423 2638                           l4407 25FC                           l4503 22EC  
                         l4511 27F0                           l5401 24D2                           l4521 2876  
                         l4513 27F8                           l4441 2718                           l5161 134E  
                         l4363 2D18                           l4427 2646                           l4419 262E  
                         l5403 24EE                           l4603 1A86                           l4371 2B5E  
                         l4611 2D98                           l5147 12CC                           l4461 2B20  
                         l5405 24F8                           l4701 2670                           l4373 2B62  
                         l4437 2708                           l4391 2D86                           l4367 2D28  
                         l4471 2B40                           l4463 2B24                           l5407 2508  
                         l4535 24AE                           l4703 268A                           l4519 286E  
                         l4439 2714                           l4623 2D00                           l5183 1426  
                         l5159 131C                           l5167 136C                           l4705 2692  
                         l4481 2BC0                           l4801 148E                           l4449 2748  
                         l4617 2CF0                           l5177 13E0                           l4459 2B18  
                         l4563 18D6                           l4555 1878                           l4483 2BC4  
                         l4731 2554                           l5187 1452                           l4709 26BA  
                         l4581 16E2                           l4805 14A6                           l4653 2C8C  
                         l4493 2242                           l4725 251A                           l4733 257C  
                         l4903 246A                           l4559 18B0                           l5391 1796  
                         l4583 171C                           l4487 2BD8                           l4479 2BB8  
                         l4815 14F4                           l4807 14B4                           l4823 1550  
                         l4569 190E                           l5393 17AC                           l4585 1744  
                         l4825 1582                           l4649 2C74                           l4497 229C  
                         l4737 25AA                           l4771 1C98                           l4691 2656  
                         l5395 1926                           l4835 15D2                           l4819 1524  
                         l4773 1C9C                           l4693 265C                           l5397 193C  
                         l4589 177E                           l4853 1638                           l4861 16A0  
                         l4765 2158                           l4757 20E8                           l4749 2094  
                         l4871 23F0                           l4695 2662                           l4855 163E  
                         l4793 1D9A                           l4785 1D22                           l4697 2668  
                         l4849 1626                           l4883 242A                           l4859 1692  
                         l4885 2432                           l4877 2410                           l4789 1D4A  
                         l4895 2452                           l4887 2436                           l4899 245C  
                         ?_pop 0015                           STR_1 1075                           STR_2 107B  
                         STR_3 107B                           STR_4 1040                           STR_5 1053  
                         STR_6 1027                           STR_7 105F                           STR_8 1043  
                         STR_9 106E                           _LATA 000F89                           _LATB 000F8A  
                         _LATC 000F8B                           u3200 2B82                           u3115 2DC8  
                         u3117 2DCA                           u3070 29E4                           u3135 1F42  
                         u3207 2B78                           u3400 2262                           u3145 1F5C  
                         u3090 2A20                           u3155 1F7C                           u3420 2296  
                         u3500 2896                           u3165 1DFC                           u3077 29DA  
                         u3175 1E16                           u3407 2258                           u3440 22D4  
                         u3520 28C4                           u3185 1E36                           u3097 2A16  
                         u3427 228C                           u3507 288C                           u3620 26B2  
                         u3460 2818                           u3630 26DA                           u3710 20D0  
                         u3447 22CA                           u3527 28BA                           u3800 1D18  
                         u3480 2846                           u3730 2128                           u3627 26A8  
                         u3467 280E                           u3820 1D42                           u3900 1518  
                         u3637 26D0                           u3717 20C6                           u4437 2D9A  
                         u3910 1548                           u3670 25A4                           u3750 2152  
                         u3807 1D0E                           u4447 2188                           u3487 283C  
                         u3840 1D7E                           u3760 1CBC                           u4457 21BA  
                         u3737 211E                           u3850 1DBA                           u3827 1D38  
                         u4467 21FC                           u3907 150E                           u3780 1CE2  
                         u4477 2066                           u3917 153E                           u3677 259A  
                         u3757 2146                           u3847 1D74                           u3767 1CB2  
                         u4487 1F26                           u3857 1DB0                           u3787 1CD8  
                         _TXIF 007CF4                   lcd_escreve@x 0018                   lcd_escreve@y 001B  
                         _atoi 1C96                           _main 107E                           _recv 00A6  
                         fsr0h 000FEA                           fsr1h 000FE2                           indf0 000FEF  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9                           _push 2954  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 1018                __end_of_Lcd_Cmd 2072                     _Lcd_Chr_CP 1DEC  
                        EECON1 000FA6                          ??_pop 0017              inverte_saida@pino 0015  
                        ?_atoi 001B                          ?_main 0001                __end_of___awdiv 2474  
                        _ADRES 000FC3                          _EEADR 000FA9                          STR_10 1067  
              __end_of___awmod 2650                          ?_push 0001                __end_of___lldiv 2768  
                        _T0CON 000FD5                ___awdiv@divisor 0017                          _T1CON 000FCD  
                        _T2CON 000FCA                          _T3CON 000FB1                __end_of___lwdiv 2B54  
              __end_of___lwmod 2BEC                          i2l300 1BB0                          i2l301 1BB6  
                        i2l302 1BBC                          i2l303 1BC2                          i2l304 1BC8  
                        i2l305 1BCE                          i2l306 1BD4                          i2l307 1BDA  
                        i2l308 1C94                   ?_init_buffer 0015                          i2l280 1B3E  
                        i2l290 1B74                          i2l282 1B44                          i2l291 1B7A  
                        i2l283 1B4A                          i2l292 1B80                          i2l284 1B50  
                        i2l293 1B86                          i2l285 1B56                          i2l294 1B8C  
                        i2l286 1B5C                          i2l295 1B92                          i2l287 1B62  
                        i2l607 238A                          i2l296 1B98                          i2l288 1B68  
                        i2l297 1B9E                          i2l289 1B6E                          i2l298 1BA4  
                        i2l299 1BAA                ___awdiv@counter 001A                          _RCREG 000FAE  
                        _RCSTA 000FAB                          _REGad 003A                          _TMR0H 000FD7  
                        _TMR1H 000FCF                          _TMR0L 000FD6                          _TMR3H 000FB3  
                        _TMR1L 000FCE                          _TMR3L 000FB2                          _SPBRG 000FAF  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISC 000F94  
                        _TXREG 000FAD                          _TXSTA 000FAC                __end_of_lcd_ini 2240  
                        _blink 0045                __end_of_dpowers 1027                __end_of_isdigit 2D8E  
                        atoi@a 0020                          atoi@s 001B                          _putch 2DEC  
                        tablat 000FF5                          push@c 0003                          status 000FD8  
              __end_of_strcspn 28E2                __end_of_strncmp 2306  __size_of_habilita_interrupcao 00A4  
              __initialization 2A9C                   ?_interrupcao 0001                   __end_of_atoi 1DEC  
                 __end_of_main 147C                   __end_of_push 29C4                         BLEIBEN 2A3A  
                       ??_atoi 001D                         ??_main 0033                         ??_push 0004  
                __activetblptr 000002               ?i2_inverte_saida 0001                   ?_nivel_baixo 0015  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADCON2 000FC0  
                       _ADRESH 000FC4                         _EEDATA 000FA8                         _CCPR1L 000FBE  
                       _CCPR2L 000FBB                         _EECON1 000FA6                         _EECON2 000FA7  
             ___awdiv@dividend 0015                         ?_putch 0001                         i2l3663 1BE0  
                       i2l3851 235A                         _OSCCON 000FD3                      ??_Lcd_Cmd 0015  
                       _SPBRGH 000FB0                   ?_taxa_serial 0023           __size_of_lcd_escreve 0092  
                  ?_Lcd_Chr_CP 0001                         ___wmul 2CA4                      ??___awdiv 0019  
                    ??___awmod 0019                      ??___lldiv 001D                      ??___lwdiv 0020  
                    ??___lwmod 0028                         _buffer 0060                         _memset 2D0E  
                       clear_0 2AA2                         clear_1 2AAE               ___awdiv@quotient 001C  
              ___awmod@divisor 0017                         _sendsw 2C6A                ___awmod@counter 001A  
                       _printf 147C                      ??_lcd_ini 0018                         _strchr 29C4  
                       _strlen 2B54                         _strtok 2072                         _strspn 27E6  
                       _strstr 2518                         _swputc 2DCE                   __pdataCOMRAM 0035  
                    ??_isdigit 0015                         pop@ret 0019               __end_of_tempo_ms 2DB2  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                      ??_strcspn 001F                      ??_strncmp 0021  
                   __accesstop 0060        __end_of__initialization 2AF4             _clear_local_buffer 2D3A  
               __pcstackCOMRAM 0001                   __pidataBANK1 2BEC            ?_clear_local_buffer 0001  
                __end_of_putch 2DFA       habilita_interrupcao@tipo 0015           __size_of_init_buffer 003E  
           __size_of_le_eeprom 001C            __size_of_Lcd_Chr_CP 0146                        ??_putch 0015  
         ??_clear_local_buffer 001D                     __pbssBANK0 0060               Lcd_Chr_CP@Chr_CP 0017  
                      ?___wmul 0015           __size_of_interrupcao 13BC                        _CCP1CON 000FBD  
                      _CCP2CON 000FBA                        _BAUDCON 000FB8                        ?_memset 0015  
                      ?_sendsw 0016                        ?_printf 002A                        ?_strchr 0015  
                      ?_strlen 0015             __size_of_timer0_ms 0030                        ?_strtok 0022  
                      ?_strspn 001B                        ?_strstr 0024                        ?_swputc 0001  
         __size_of_nivel_baixo 0196                        _Lcd_Cmd 1F32         __size_of_inverte_saida 015A  
                      __Hparam 0000                        __Lparam 0000                      ?_tempo_ms 0015  
            __end_of_le_eeprom 2DCE           __size_of_taxa_serial 007E                        ___awdiv 23C4  
                      ___awmod 25B4                        ___lldiv 26E2                __size_of___wmul 003A  
                      ___lwdiv 2AFE                        ___lwmod 2BA6                   __psmallconst 101C  
              lcd_escreve@data 001C                        __pcinit 2A9C                __size_of_memset 002C  
                      __ramtop 0800                __size_of_sendsw 003A                        __ptext0 107E  
                      __ptext1 2CDE                        __ptext2 2D8E                        __ptext3 2768  
                      __ptext4 26E2                        __ptext5 2072                        __ptext6 27E6  
                      __ptext7 2864                        __ptext8 2518                        __ptext9 2240  
              __size_of_printf 0240                        _lcd_ini 216A                      _T0CONbits 000FD5  
                      _ip_addr 0100                __size_of_strchr 006C                __size_of_strlen 0052  
                    _T1CONbits 000FCD                __size_of_strtok 00F8                __size_of_strspn 007E  
              __size_of_strstr 009C                __size_of_swputc 0010                        _dpowers 101D  
                    _T2CONbits 000FCA                        _ip_port 0037                        _isdigit 2D64  
                 __size_of_pop 0072   __end_of_habilita_interrupcao 2518                      _T3CONbits 000FB1  
             ___awmod@dividend 0015        __size_of_clock_int_4MHz 006C                        main@str 00F3  
                      _strcspn 2864                        _strncmp 2240                 __pintcode_body 2306  
         end_of_initialization 2AF4                     _nivel_alto 1852                        memset@c 0017  
                  timer0_ms@cx 0015                        memset@n 0019                        memset@p 001B  
                __Lmediumconst 0000                        int_func 2306              __end_of_timer0_ms 2D0E  
              ___lldiv@divisor 0019                ___lldiv@counter 0022                     ??_tempo_ms 0017  
                      printf@c 00EE                        printf@f 002A                   ??_Lcd_Chr_CP 0015  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                        strlen@s 0015                        strspn@i 0020  
                    _PORTAbits 000F80                      _PORTBbits 000F81                      _PORTCbits 000F82  
                    _PORTDbits 000F83                      _PORTEbits 000F84                        swputc@c 0015  
                _inverte_saida 19E2                      _TRISAbits 000F92                      _TRISBbits 000F93  
                    _TRISCbits 000F94                      _TRISDbits 000F95             __end_of_Lcd_Chr_CP 1F32  
     __size_ofi2_inverte_saida 015A                      _TXSTAbits 000FAC                  ??_lcd_escreve 001B  
               __end_of___wmul 2CDE                    _BAUDCONbits 000FB8                  __pidataCOMRAM 2DDE  
               __end_of_memset 2D3A                 ?_inverte_saida 0015                 __end_of_sendsw 2CA4  
               __end_of_printf 16BC                 __end_of_strchr 2A30                 __end_of_strlen 2BA6  
               __end_of_strtok 216A                 __end_of_strspn 2864                 __end_of_strstr 25B4  
               __end_of_swputc 2DDE            start_initialization 2A9C                    __end_of_pop 2954  
                  ?_nivel_alto 0015           _habilita_interrupcao 2474                       ??___wmul 0019  
                  __pdataBANK1 0100            __end_of_lcd_escreve 26E2                       ??_memset 001B  
                     ??_sendsw 0018                       ??_printf 0030                       ??_strchr 0019  
                     ??_strlen 0017                       ??_strtok 0026                       ??_strspn 001F  
                     ??_strstr 0028                  ??_init_buffer 0017                       ??_swputc 0015  
                  __pbssCOMRAM 0043                  __pcstackBANK0 00E6                 _clock_int_4MHz 2A30  
          __end_of__stringdata 107D                   _isdigit$2341 0016    __size_of_clear_local_buffer 002A  
            lcd_escreve@buffer 0019                       ?_Lcd_Cmd 0001          ?_habilita_interrupcao 0015  
                    _main$2030 00F0               ___lwdiv@dividend 001C                  ??_interrupcao 0006  
            ??i2_inverte_saida 0003                      __pintcode 1008                       ?___awdiv 0015  
                    _device_id 003B                       ?___awmod 0015                       ?___lldiv 0015  
                     ?___lwdiv 001C                       ?___lwmod 0024              __size_of_tempo_ms 0024  
              ??_inverte_saida 0017                      _le_eeprom 2DB2            __size_of_nivel_alto 0190  
                     ?_lcd_ini 0001                    __smallconst 101C         __end_of_clock_int_4MHz 2A9C  
                     ?_isdigit 0001                  ??_nivel_baixo 0017               ___lwdiv@quotient 0022  
          __end_of_init_buffer 2C6A                       ?_strcspn 001B                       ?_strncmp 001B  
               __size_of_putch 000E                 ___wmul@product 0019                       _LATBbits 000F8A  
                     _IPR1bits 000F9F                       _PIE1bits 000F9D                       _PIE2bits 000FA0  
                   timer0_ms@i 0017                  ??_taxa_serial 0027                    _lcd_escreve 2650  
                     _PIR1bits 000F9E                      _timer0_ms 2CDE                       _RCONbits 000FD0  
                   ?_le_eeprom 0001            __end_of_interrupcao 23C4                     _ADCON0bits 000FC2  
                  __stringdata 1027                     _ADCON2bits 000FC0              ___wmul@multiplier 0015  
              _receive_enabled 0049                     printf@_val 00EA                     printf@flag 00E6  
              ?_clock_int_4MHz 0001                     printf@prec 00E7                     push@buffer 0001  
                  _INTCON2bits 000FF1                    _INTCON3bits 000FF0                      copy_data0 2AC8  
                    copy_data1 2AE8            i2inverte_saida@pino 0001            __end_of_nivel_baixo 1852  
             __size_of_Lcd_Cmd 0140         ??_habilita_interrupcao 0017                     _EECON1bits 000FA6  
                     __Hrparam 0000                nivel_baixo@pino 0015                       __Lrparam 0000  
                   ?_timer0_ms 0015               __size_of___awdiv 00B0               __size_of___awmod 009C  
          __end_of_taxa_serial 27E6               __size_of___lldiv 0086               __size_of___lwdiv 0056  
             __size_of___lwmod 0046                    _init_buffer 2C2C               __size_of_lcd_ini 00D6  
             __size_of_isdigit 002A                      pop@buffer 0015                ___lwdiv@divisor 001E  
              ___lwdiv@counter 0021                       __ptext10 2B54                       __ptext11 29C4  
                     __ptext20 216A                       __ptext12 2C6A                       __ptext21 2650  
                     __ptext13 2DCE                       __ptext30 25B4                       __ptext22 1F32  
                     __ptext14 147C                       __ptext31 2D3A                       __ptext23 1DEC  
                     __ptext15 2DEC                       __ptext32 2D0E                       __ptext24 19E2  
                     __ptext16 2BA6                       __ptext33 1C96                       __ptext25 2C2C  
                     __ptext17 28E2                       __ptext34 2D64                       __ptext26 2474  
                     __ptext18 16BC                       __ptext35 2CA4                       __ptext27 2A30  
                     __ptext19 1852                       __ptext36 23C4                       __ptext28 2DB2  
                     __ptext29 2AFE                       __ptext38 1B3C                       __ptext39 2954  
             __size_of_strcspn 007E               __size_of_strncmp 00C6                   ??_nivel_alto 0017  
              taxa_serial@taxa 0023                  __size_of_atoi 0156                  __size_of_main 03FE  
                __size_of_push 0070                     strncmp@len 001F              init_buffer@buffer 0015  
                  _interrupcao 1008                      tempo_ms@i 0015                       _tempo_ms 2D8E  
                    tempo_ms@k 0017                 _wifi_connected 004B              le_eeprom@endereco 0015  
                     atoi@sign 001F                       main@size 00F2                    ??_le_eeprom 0015  
           __end_of_nivel_alto 19E2                      putch@data 0015                     _INTCONbits 000FF2  
                  _nivel_baixo 16BC         taxa_serial@baud_sanusb 002F                       isdigit@c 0017  
                     memset@p1 0015                i2_inverte_saida 1B3C                       intlevel2 0000  
                    strchr@chr 0017               ___lwmod@dividend 0024                      strchr@ptr 0015  
               nivel_alto@pino 0015               ___lldiv@dividend 0015                     Lcd_Cmd@Cmd 0017  
                    strcspn@s1 001B                      strcspn@s2 001D                       sendsw@st 0016  
                    strncmp@s1 001B                      strncmp@s2 001D                     _OSCCONbits 000FD3  
                  _taxa_serial 2768                    ??_timer0_ms 0017                       printf@ap 00E8  
             ___lldiv@quotient 001E                ___lwmod@divisor 0026                       strlen@cp 0019  
              ___lwmod@counter 0029                       strcspn@i 0020                       strtok@s1 0022  
                     strtok@s2 0024                       strspn@s1 001B                       strspn@s2 001D  
                     strtok@sp 0043                       strstr@s1 0024                       strstr@s2 0026  
   __end_of_clear_local_buffer 2D64                     _WDTCONbits 000FD1                   ?_lcd_escreve 0018  
